'ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
531,"Hardware Component Substitution",Detailed,Draft,"An attacker substitutes out a tested and approved hardware component for a maliciously-altered hardware component. This type of attack is carried out directly on the system, enabling the attacker to then cause disruption or additional compromise.","",Low,High,"::NATURE:ChildOf:CAPEC ID:534::","","::Physical access to the system or the integration facility where hardware components are kept.::","::SKILL:Able to develop and manufacture malicious system components that perform the same functions and processes as their non-malicious counterparts.:LEVEL:High::","","","","","::An attacker has access to an organization's warehouse of card readers being included as a part of an overall security system. By replacing a critical hardware component in the card reader, the attacker is able to alter the function of the card reader to allow an attacker-supplied card to bypass a security checkpoint. The card reader is placed in the warehouse, and later used in the victim's security system. The attacker is then able to go to the victim and use their own card and bypass a physical security checkpoint and gain access to the victim's location for further malicious activity.::","","TAXONOMY NAME:ATTACK:ENTRY ID:1195.003:ENTRY NAME:Supply Chain Compromise: Compromise Hardware Supply Chain::","",
532,"Altered Installed BIOS",Detailed,Stable,"An attacker with access to download and update system software sends a maliciously altered BIOS to the victim or victim supplier/integrator, which when installed allows for future exploitation.","",Low,High,"::NATURE:ChildOf:CAPEC ID:444::","","::Advanced knowledge about the installed target system design.::Advanced knowledge about the download and update installation processes.::Access to the download and update system(s) used to deliver BIOS images.::","::SKILL:Able to develop a malicious BIOS image with the original functionality as a normal BIOS image, but with added functionality that allows for later compromise and/or disruption.:LEVEL:High::","","","","::Deploy strong code integrity policies to allow only authorized apps to run.::Use endpoint detection and response solutions that can automaticalkly detect and remediate suspicious activities.::Maintain a highly secure build and update infrastructure by immediately applying security patches for OS and software, implementing mandatory integrity controls to ensure only trusted tools run, and requiring multi-factor authentication for admins.::Require SSL for update channels and implement certificate transparency based verification.::Sign update packages and BIOS patches.::Use hardware security modules/trusted platform modules to verify authenticity using hardware-based cryptography.::","::An attacker compromises the download and update portion of a manufacturer's web presence, and develops a malicious BIOS that in addition to the normal functionality will also at a specific time of day disable the remote access subsystem's security checks. The malicious BIOS is put in place on the manufacturer's website, the victim location is sent an official-looking email informing the victim of the availability of a new BIOS with bug fixes and enhanced performance capabilities to entice the victim to install the new BIOS quickly. The malicious BIOS is downloaded and installed on the victim's system, which allows for additional compromise by the attacker.::","","TAXONOMY NAME:ATTACK:ENTRY ID:1495:ENTRY NAME:Firmware Corruption::::TAXONOMY NAME:ATTACK:ENTRY ID:1542.001:ENTRY NAME:Pre-OS Boot:System Firmware::","",
533,"Malicious Manual Software Update",Detailed,Draft,"An attacker introduces malicious code to the victim's system by altering the payload of a software update, allowing for additional compromise or site disruption at the victim location. These manual, or user-assisted attacks, vary from requiring the user to download and run an executable, to as streamlined as tricking the user to click a URL. Attacks which aim at penetrating a specific network infrastructure often rely upon secondary attack methods to achieve the desired impact. Spamming, for example, is a common method employed as an secondary attack vector. Thus the attacker has in their arsenal a choice of initial attack vectors ranging from traditional SMTP/POP/IMAP spamming and its varieties, to web-application mechanisms which commonly implement both chat and rich HTML messaging within the user interface.","",Low,High,"::NATURE:ChildOf:CAPEC ID:186::","","::Advanced knowledge about the download and update installation processes.::Advanced knowledge about the deployed system and its various software subcomponents and processes.::","::SKILL:Able to develop malicious code that can be used on the victim's system while maintaining normal functionality.:LEVEL:High::","","","","::Only accept software updates from an official source.::","::An email campaign was initiated, targetting victims of a ransomware attack. The email claimed to be a patch to address the ransomware attack, but was instead an attachment that caused the Cobalt Strike tools to be installed, which enabled further attacks.::","::494::","","",
534,"Malicious Hardware Update",Standard,Stable,"An adversary introduces malicious hardware during an update or replacement procedure, allowing for additional compromise or site disruption at the victim location. After deployment, it is not uncommon for upgrades and replacements to occur involving hardware and various replaceable parts. These upgrades and replacements are intended to correct defects, provide additional features, and to replace broken or worn-out parts. However, by forcing or tricking the replacement of a good component with a defective or corrupted component, an adversary can leverage known defects to obtain a desired malicious impact.","",Low,High,"::NATURE:ChildOf:CAPEC ID:440::","","","::SKILL:Able to develop and manufacture malicious hardware components that perform the same functions and processes as their non-malicious counterparts.:LEVEL:High::","","","","","::An adversary develops a malicious networking card that allows for normal function plus the addition of malicious functionality that is of benefit to the adversary. The adversary sends the victim an email stating that the existing networking card is faulty, and that the victim can order a replacement card free of charge. The victim orders the card, and the adversary sends the malicious networking card. The malicious networking card replaces the perfectly-functioning original networking card, and the adversary is able to take advantage of the additional malicious functionality to further compromise the victim's network.::","","","",
535,"Malicious Gray Market Hardware",Detailed,Draft,"An attacker maliciously alters hardware components that will be sold on the gray market, allowing for victim disruption and compromise when the victim needs replacement hardware components for systems where the parts are no longer in regular supply from original suppliers, or where the hardware components from the attacker seems to be a great benefit from a cost perspective.","",Low,High,"::NATURE:ChildOf:CAPEC ID:531::","","::Physical access to a gray market reseller's hardware components supply, or the ability to appear as a gray market reseller to the victim's buyer.::","::SKILL:Able to develop and manufacture malicious hardware components that perform the same functions and processes as their non-malicious counterparts.:LEVEL:High::","","","","::Purchase only from authorized resellers.::Validate serial numbers from multiple sources::","::An attacker develops co-processor boards with malicious capabilities that are technically the same as a manufacturer's expensive upgrade to their flagship system. The victim has installed the manufacturer's base system without the expensive upgrade. The attacker contacts the victim and states they have the co-processor boards at a drastically-reduced price, falsely stating they were acquired from a bankruptcy liquidation of a company that had purchased them from the manufacturer. The victim after hearing the drastically reduced price decides to take advantage of the situation and purchases the upgrades from the attacker, and installs them. This allows the attacker to further compromise the victim.::","","","",
536,"Data Injected During Configuration",Standard,Stable,"An attacker with access to data files and processes on a victim's system injects malicious data into critical operational data during configuration or recalibration, causing the victim's system to perform in a suboptimal manner that benefits the adversary.","",Low,High,"::NATURE:ChildOf:CAPEC ID:176::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine configuration process] The adversary, through a previously compromised system, either remotely or physically, determines what the configuration process is. They look at configuration files, data files, and running processes on the system to identify areas where they could inject malicious data.::STEP:2:PHASE:Explore:DESCRIPTION:[Determine when configuration occurs] The adversary needs to then determine when configuration or recalibration of a system occurs so they know when to inject malicious data.:TECHNIQUE:Look for a weekly update cycle or repeated update schedule.:TECHNIQUE:Insert a malicious process into the target system that notifies the adversary when configuration is occurring.::STEP:3:PHASE:Experiment:DESCRIPTION:[Determine malicious data to inject] By looking at the configuration process, the adversary needs to determine what malicious data they want to insert and where to insert it.:TECHNIQUE:Add false log data:TECHNIQUE:Change configuration files:TECHNIQUE:Change data files::STEP:4:PHASE:Exploit:DESCRIPTION:[Inject malicious data] Right before, or during system configuration, the adversary injects the malicious data. This leads to the system behaving in a way that is beneficial to the adversary and is often followed by other attacks.::","::The attacker must have previously compromised the victim's systems or have physical access to the victim's systems.::Advanced knowledge of software and hardware capabilities of a manufacturer's product.::","::SKILL:Ability to generate and inject false data into operational data into a system with the intent of causing the victim to alter the configuration of the system.:LEVEL:High::","","","","::Ensure that proper access control is implemented on all systems to prevent unauthorized access to system files and processes.::","::An adversary wishes to bypass a security system to access an additional network segment where critical data is kept. The adversary knows that some configurations of the security system will allow for remote bypass under certain conditions, such as switching a specific parameter to a different value. The adversary knows the bypass will work but also will be detected within the logging data of the security system. The adversary waits until an upgrade is performed to the security system by the victim's system administrators, and the adversary has access to an external logging system. The adversary injects false log entries that cause the administrators to think there are two different error states within the security system - one involving the specific parameter and the other involving the logging entries. The specific parameter is adjusted to a different value, and the logging level is reduced to a lower level that will not cause an adversary bypass to be detected. The adversary stops injecting false log data, and the administrators of the security system believe the issues were caused by the upgrade and are now resolved. The adversary is then able to bypass the security system.::","::284::","","",
537,"Infiltration of Hardware Development Environment",Detailed,Draft,"An adversary, leveraging the ability to manipulate components of primary support systems and tools within the development and production environments, inserts malicious software within the hardware and/or firmware development environment. The infiltration purpose is to alter developed hardware components in a system destined for deployment at the victim's organization, for the purpose of disruption or further compromise.","",Low,High,"::NATURE:ChildOf:CAPEC ID:444::","","::The victim must use email or removable media from systems running the IDE (or systems adjacent to the IDE systems).::The victim must have a system running exploitable applications and/or a vulnerable configuration to allow for initial infiltration.::The adversary must have working knowledge of some if not all of the components involved in the IDE system as well as the infrastructure.::","::SKILL:Intelligence about the manufacturer's operating environment and infrastructure.:LEVEL:Medium::SKILL:Ability to develop, deploy, and maintain a stealth malicious backdoor program remotely in what is essentially a hostile environment.:LEVEL:High::SKILL:Development skills to construct malicious attachments that can be used to exploit vulnerabilities in typical desktop applications or system configurations. The malicious attachments should be crafted well enough to bypass typical defensive systems (IDS, anti-virus, etc):LEVEL:High::","","","","::Verify software downloads and updates to ensure they have not been modified be adversaries::Leverage antivirus tools to detect known malware::Do not download software from untrusted sources::Educate designers, developers, engineers, etc. on social engineering attacks to avoid downloading malicious software via attacks such as phishing attacks::","::The adversary, knowing the manufacturer runs email on a system adjacent to the hardware development systems used for hardware and/or firmware design, sends a phishing email with a malicious attachment to the manufacturer. When viewed, the malicious attachment installs a backdoor that allows the adversary to remotely compromise the adjacent hardware development system from the manufacturer's workstation. The adversary is then able to exfiltrate and alter sensitive data on the hardware system, allowing for future compromise once the developed system is deployed at the victim location.::","","TAXONOMY NAME:ATTACK:ENTRY ID:1195.003:ENTRY NAME:Supply Chain Compromise: Compromise Hardware Supply Chain::","",
538,"Open-Source Library Manipulation",Detailed,Stable,"Adversaries implant malicious code in open source software (OSS) libraries to have it widely distributed, as OSS is commonly downloaded by developers and other users to incorporate into software development projects. The adversary can have a particular system in mind to target, or the implantation can be the first stage of follow-on attacks on many systems.","",Low,High,"::NATURE:ChildOf:CAPEC ID:444::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine the relevant open-source code project to target] The adversary will make the selection based on various criteria: The open-source code currently in use on a selected target system. The depth in the dependency graph of the open source code in relationship to other code bases in use on the target system. Choosing an OSS lower in the graph decreases the probability of discovery, but also decreases the scope of its use within the target system. The programming language in which the open source code is implemented. Different languages present different opportunities for using known software weaknesses. The quality of processes in place to make a contribution. For instance, some contribution sites use static and dynamic analysis tools, which could increase the probability of discovery. The security requirements necessary to make a contribution. For instance, is the ownership lax allowing unsigned commits or anonymous users.::STEP:2:PHASE:Experiment:DESCRIPTION:[Develop a plan for malicious contribution] The adversary develops a plan to contribute malicious code, taking the following into consideration: The adversary will probably avoid easy-to-find software weaknesses, especially ones that static and dynamic analysis tools are likely to discover. Common coding errors or missing edge cases of the algorithm, which can be explained away as being accidental, if discovered, will be preferred by the adversary. Sometimes no identity is required to make a contribution. Other options are to steal an existing identity or create one. When creating a new identity, strike a balance between too little or too much detail. Using an stolen identity could cause a notification to be sent to the actual user.::STEP:3:PHASE:Exploit:DESCRIPTION:[Execute the plan for malicious contribution] Write the code to be contributed based on the plan and then submit the contribution. Multiple commits, possibly using multiple identities, will help obscure the attack. Monitor the contribution site to try to determine if the code has been uploaded to the target system.::","::Access to the open source code base being used by the manufacturer in a system being developed or currently deployed at a victim location.::","::SKILL:Advanced knowledge about the inclusion and specific usage of an open source code project within system being targeted for infiltration.:LEVEL:High::","","","","","::An adversary with access to an open source code project introduces a hard-to-find bug in the software that allows under very specific conditions for encryption to be disabled on data streams. The adversary commits the change to the code which is picked up by a manufacturer who develops VPN software. It is eventually deployed at the victim's location where the very specific conditions are met giving the adversary the ability to sniff plaintext traffic thought to be encrypted. This can provide to the adversary access to sensitive data of the victim.::","::494::829::","TAXONOMY NAME:ATTACK:ENTRY ID:1195.001:ENTRY NAME:Supply Chain Compromise: Software Dependencies and Development Tools::","",
539,"ASIC With Malicious Functionality",Detailed,Draft,"An attacker with access to the development environment process of an application-specific integrated circuit (ASIC) for a victim system being developed or maintained after initial deployment can insert malicious functionality into the system for the purpose of disruption or further compromise.","",Low,High,"::NATURE:ChildOf:CAPEC ID:444::","","::The attacker must have working knowledge of some if not all of the components involved in the target system as well as the infrastructure and development environment of the manufacturer.::Advanced knowledge about the ASIC installed within the target system.::","::SKILL:Able to develop and manufacture malicious subroutines for an ASIC environment without degradation of existing functions and processes.:LEVEL:High::","","","","","::A hardware manufacturer periodically updates its ASIC with new features. The attacker, knowing the manufacturer runs email on a system adjacent to the hardware development systems used for ASIC design, sends a phishing email with a malicious attachment to the manufacturer. When viewed, the malicious attachment installs a backdoor that allows the attacker to remotely compromise the adjacent ASIC development system. The attacker is then able to exfiltrate and alter sensitive data on the ASIC system, allowing for future compromise once a new AISC is deployed at the victim location.::","","TAXONOMY NAME:ATTACK:ENTRY ID:1195.003:ENTRY NAME:Supply Chain Compromise: Compromise Hardware Supply Chain::","",
54,"Query System for Information",Standard,Draft,"An adversary, aware of an application's location (and possibly authorized to use the application), probes an application's structure and evaluates its robustness by submitting requests and examining responses. Often, this is accomplished by sending variants of expected queries in the hope that these modified queries might return information beyond what the expected set of queries would provide.","",High,Low,"::NATURE:ChildOf:CAPEC ID:116::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine parameters] Determine all user-controllable parameters of the application either by probing or by finding documentation::STEP:2:PHASE:Experiment:DESCRIPTION:[Cause error condition] Inject each parameter with content that causes an error condition to manifest::STEP:3:PHASE:Experiment:DESCRIPTION:[Modify parameters] Modify the content of each parameter according to observed error conditions::STEP:4:PHASE:Exploit:DESCRIPTION:[Follow up attack] Once the above steps have been repeated with enough parameters, the application will be sufficiently mapped out. The adversary can then launch a desired attack (for example, Blind SQL Injection)::","::This class of attacks does not strictly require authorized access to the application. As Attackers use this attack process to classify, map, and identify vulnerable aspects of an application, it simply requires hypotheses to be verified, interaction with the application, and time to conduct trial-and-error activities.::","::SKILL:Although fuzzing parameters is not difficult, and often possible with automated fuzzers, interpreting the error conditions and modifying the parameters so as to move further in the process of mapping the application requires detailed knowledge of target platform, the languages and packages used as well as software design.:LEVEL:Medium::","::The Attacker needs the ability to probe application functionality and provide it erroneous directives or data without triggering intrusion detection schemes or making enough of an impact on application logging that steps are taken against the adversary. The Attack does not need special hardware, software, skills, or access.::","::Repeated errors generated by the same piece of code are an indication, although it requires careful monitoring of the application and its associated error logs, if any.::","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::","::Application designers can construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are cataloged and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally.::Application designers can wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion.::","::Blind SQL injection is an example of this technique, applied to successful exploit. See also: CVE-2006-4705::Attacker sends bad data at various servlets in a J2EE system, records returned exception stack traces, and maps application functionality. In addition, this technique allows attackers to correlate those servlets used with the underlying open source packages (and potentially version numbers) that provide them.::","::209::","","",
540,"Overread Buffers",Standard,Draft,"An adversary attacks a target by providing input that causes an application to read beyond the boundary of a defined buffer. This typically occurs when a value influencing where to start or stop reading is set to reflect positions outside of the valid memory location of the buffer. This type of attack may result in exposure of sensitive information, a system crash, or arbitrary code execution.","",Low,High,"::NATURE:ChildOf:CAPEC ID:123::","::STEP:1:PHASE:Explore:DESCRIPTION:[Identify target application] The adversary identifies a target application or program to perform the buffer overread on. Adversaries often look for applications that accept user input and that perform manual memory management.::STEP:2:PHASE:Experiment:DESCRIPTION:[Find attack vector] The adversary identifies an attack vector by looking for areas in the application where they can specify to read more data than is required.::STEP:3:PHASE:Exploit:DESCRIPTION:[Overread the buffer] The adversary provides input to the application that gets it to read past the bounds of a buffer, possibly revealing sensitive information that was not intended to be given to the adversary.::","::For this type of attack to be successful, a few prerequisites must be met. First, the targeted software must be written in a language that enables fine grained buffer control. (e.g., c, c++) Second, the targeted software must actually perform buffer operations and inadequately perform bounds-checking on those buffer operations. Finally, the adversary must have the capability to influence the input that guides these buffer operations.::","","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:By reading outside the boundary of the intended buffer, the adversary is potentially able to see any data that is stored on the disk. This could include secret keys, personal information, and sensitive files.::SCOPE:Availability:TECHNICAL IMPACT:Unreliable Execution:NOTE:Depending on the use of the target buffer, an application or system crash can be achieved.::","","","::125::","","",
541,"Application Fingerprinting",Standard,Draft,"An adversary engages in fingerprinting activities to determine the type or version of an application installed on a remote target.","",,Low,"::NATURE:ChildOf:CAPEC ID:224::","","::None::","","","","","","","::204::205::208::","TAXONOMY NAME:ATTACK:ENTRY ID:1592.002:ENTRY NAME:Gather Victim Host Information: Software::","",
542,"Targeted Malware",Standard,Draft,"An adversary develops targeted malware that takes advantage of a known vulnerability in an organizational information technology environment. The malware crafted for these attacks is based specifically on information gathered about the technology environment. Successfully executing the malware enables an adversary to achieve a wide variety of negative technical impacts.","",,,"::NATURE:ChildOf:CAPEC ID:549::NATURE:CanPrecede:CAPEC ID:662::","","","","","::Software being run on a system matches a file signature found in a malware database::A suspicious module is loaded that is not regularly loaded by a system::Software on a system is making calls to GetProcAddress() which is a commonly used function to implement dynamic API resolution::","","","","","TAXONOMY NAME:ATTACK:ENTRY ID:1587.001:ENTRY NAME:Develop Capabilities: Malware::::TAXONOMY NAME:ATTACK:ENTRY ID:1027:ENTRY NAME:Obfuscated Files or Information::","TYPE:Other:NOTE:Adversaries often utilize obfuscation techniques when developing malware with the purpose of either avoiding detection or prevent the target from reverse engineering and understanding a captured malware sample. Some of these techniques include, but are not limited to, binary padding, software packing, stripping symbols and strings from a payload, and utilizing dynamic API resolution.::",
543,"Counterfeit Websites",Detailed,Draft,"Adversary creates duplicates of legitimate websites. When users visit a counterfeit site, the site can gather information or upload malware.","",,High,"::NATURE:ChildOf:CAPEC ID:194::NATURE:CanPrecede:CAPEC ID:89::","","::None::","","","","","","","","TAXONOMY NAME:ATTACK:ENTRY ID:1036.005:ENTRY NAME:Masquerading: Match Legitimate Name or Location::","",
544,"Counterfeit Organizations",Detailed,Draft,"An adversary creates a false front organizations with the appearance of a legitimate supplier in the critical life cycle path that then injects corrupted/malicious information system components into the organizational supply chain.","",,High,"::NATURE:ChildOf:CAPEC ID:194::","","::None::","","","","","","","","","",
545,"Pull Data from System Resources",Standard,Draft,"An adversary who is authorized or has the ability to search known system resources, does so with the intention of gathering useful information. System resources include files, memory, and other aspects of the target system. In this pattern of attack, the adversary does not necessarily know what they are going to find when they start pulling data. This is different than CAPEC-150 where the adversary knows what they are looking for due to the common location.","",,,"::NATURE:ChildOf:CAPEC ID:116::","","","","","","","","","::1239::1243::1258::1266::1272::1278::1323::1258::1330::","TAXONOMY NAME:ATTACK:ENTRY ID:1005:ENTRY NAME:Data from Local System::::TAXONOMY NAME:ATTACK:ENTRY ID:1555.001:ENTRY NAME:Credentials from Password Stores:Keychain::","",
546,"Incomplete Data Deletion in a Multi-Tenant Environment",Detailed,Draft,"An adversary obtains unauthorized information due to insecure or incomplete data deletion in a multi-tenant environment. If a cloud provider fails to completely delete storage and data from former cloud tenants' systems/resources, once these resources are allocated to new, potentially malicious tenants, the latter can probe the provided resources for sensitive information still there.","",Low,Medium,"::NATURE:ChildOf:CAPEC ID:545::","","::The cloud provider must not assuredly delete part or all of the sensitive data for which they are responsible.The adversary must have the ability to interact with the system.::","::SKILL:The adversary requires the ability to traverse directory structure.:LEVEL:Low::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:A successful attack that probes application memory will compromise the confidentiality of that data.::","::Cloud providers should completely delete data to render it irrecoverable and inaccessible from any layer and component of infrastructure resources.::Deletion of data should be completed promptly when requested.::","","::284::1266::1272::","","",
547,"Physical Destruction of Device or Component",Standard,Draft,"An adversary conducts a physical attack a device or component, destroying it such that it no longer functions as intended.","",,,"::NATURE:ChildOf:CAPEC ID:607::","","","","","","","","","","","",
548,"Contaminate Resource",Meta,Draft,"An adversary contaminates organizational information systems (including devices and networks) by causing them to handle information of a classification/sensitivity for which they have not been authorized. When this happens, the contaminated information system, device, or network must be brought offline to investigate and mitigate the data spill, which denies availability of the system until the investigation is complete.","::TERM:Data Spill:DESCRIPTION:When information is handled by an information system of a classification/sensitivity for which the system has not been authorized to handle.::",Low,High,"::NATURE:CanPrecede:CAPEC ID:607::","","::The adversary needs to have real or fake classified/sensitive information to place on a system::","::SKILL:Knowledge of classification levels of systems:LEVEL:Low::SKILL:The ability to obtain a classified document or information:LEVEL:High::SKILL:The ability to fake a classified document:LEVEL:Low::","","","::SCOPE:Availability:TECHNICAL IMPACT:Resource Consumption:NOTE:Denial of Service::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:Victims of the attack can be exposed to classified materials::","::Properly safeguard classified/sensitive data. This includes training cleared individuals to ensure they are handling and disposing of this data properly, as well as ensuring systems only handle information of the classification level they are designed for.::Design systems with redundancy in mind. This could mean creating backing servers that could be switched over to in the event that a server has to be taken down for investigation.::Have a planned and efficient response plan to limit the amount of time a system is offline while the contamination is investigated.::","::An insider threat was able to obtain a classified document. They have knowledge that a backend server which provides access to a website also runs a mail server. The adversary creates a throwaway email address and sends the classified document to the mail server. When an administrator checks the mail server they notice that it has processed an email with a classified document and the server has to be taken offline while they investigate the contamination. In the meantime, the website has to be taken down as well and access to the website is denied until the backend can be migrated to another server or the investigation is complete.::","","","",
549,"Local Execution of Code",Meta,Stable,"An adversary installs and executes malicious code on the target system in an effort to achieve a negative technical impact. Examples include rootkits, ransomware, spyware, adware, and others.","",Medium,High,"","","::Knowledge of the target system's vulnerabilities that can be capitalized on with malicious code.The adversary must be able to place the malicious code on the target system.::","","::The means by which the adversary intends to place the malicious code on the system dictates the tools required. For example, suppose the adversary wishes to leverage social engineering and convince a legitimate user to open a malicious file attached to a seemingly legitimate email. In this case, the adversary might require a tool capable of wrapping malicious code into an innocuous filetype (e.g., PDF, .doc, etc.)::","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Run Arbitrary Code::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Depending on the type of code executed by the adversary, the consequences of this attack pattern can vary widely.::","::Employ robust cybersecurity training for all employees.::Implement system antivirus software that scans all attachments before opening them.::Regularly patch all software.::Execute all suspicious files in a sandbox environment.::","::BlueBorne refers to a set of nine vulnerabilities on different platforms (Linux, Windows, Android, iOS) that offer an adversary the ability to install and execute malicious code on a system if they were close in proximity to a Bluetooth enabled device. One vulnerability affecting iOS versions 7 through 9 allowed an attacker to overflow the Low Energy Audio Protocol since commands sent over this protocol are improperly validated and gain the elevated permissions of the Bluetooth stack. These vulnerabilities were a result of poor validation and were patched shortly after their exposure in 2017, but many non-updated devices remain vulnerable.::","::829::","","",
55,"Rainbow Table Password Cracking",Detailed,Draft,"An attacker gets access to the database table where hashes of passwords are stored. They then use a rainbow table of pre-computed hash chains to attempt to look up the original password. Once the original password corresponding to the hash is obtained, the attacker uses the original password to gain access to the system.","",Medium,Medium,"::NATURE:ChildOf:CAPEC ID:49::NATURE:CanPrecede:CAPEC ID:600::NATURE:CanPrecede:CAPEC ID:151::NATURE:CanPrecede:CAPEC ID:560::NATURE:CanPrecede:CAPEC ID:561::NATURE:CanPrecede:CAPEC ID:653::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine application's/system's password policy] Determine the password policies of the target application/system.:TECHNIQUE:Determine minimum and maximum allowed password lengths.:TECHNIQUE:Determine format of allowed passwords (whether they are required or allowed to contain numbers, special characters, etc.).:TECHNIQUE:Determine account lockout policy (a strict account lockout policy will prevent brute force attacks).::STEP:2:PHASE:Explore:DESCRIPTION:[Obtain password hashes] An attacker gets access to the database table storing hashes of passwords or potentially just discovers a hash of an individual password.:TECHNIQUE:Obtain copy of database table or flat file containing password hashes (by breaking access controls, using SQL Injection, etc.):TECHNIQUE:Obtain password hashes from platform-specific storage locations (e.g. Windows registry):TECHNIQUE:Sniff network packets containing password hashes.::STEP:3:PHASE:Exploit:DESCRIPTION:[Run rainbow table-based password cracking tool] An attacker finds or writes a password cracking tool that uses a previously computed rainbow table for the right hashing algorithm. It helps if the attacker knows what hashing algorithm was used by the password system.:TECHNIQUE:Run rainbow table-based password cracking tool such as Ophcrack or RainbowCrack. Reduction function must depend on application's/system's password policy.::","::Hash of the original password is available to the attacker. For a better chance of success, an attacker should have more than one hash of the original password, and ideally the whole table.::Salt was not used to create the hash of the original password. Otherwise the rainbow tables have to be re-computed, which is very expensive and will make the attack effectively infeasible (especially if salt was added in iterations).::The system uses one factor password based authentication.::","::SKILL:A variety of password cracking tools are available that can leverage a rainbow table. The more difficult part is to obtain the password hash(es) in the first place.:LEVEL:Low::","::Rainbow table of password hash chains with the right algorithm used. A password cracking tool that leverages this rainbow table will also be required. Hash(es) of the password is required.::","::This is a completely offline attack that an attacker can perform at their leisure after the password hashes are obtained.::","::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::","::Use salt when computing password hashes. That is, concatenate the salt (random bits) with the original password prior to hashing it.::","::BusyBox 1.1.1 does not use a salt when generating passwords, which makes it easier for local users to guess passwords from a stolen password file using techniques such as rainbow tables. See also: CVE-2006-1058::","::261::521::262::263::654::916::308::309::","TAXONOMY NAME:ATTACK:ENTRY ID:1110.002:ENTRY NAME:Brute Force:Password Cracking::","",
550,"Install New Service",Detailed,Draft,"When an operating system starts, it also starts programs called services or daemons. Adversaries may install a new service which will be executed at startup (on a Windows system, by modifying the registry). The service name may be disguised by using a name from a related operating system or benign software. Services are usually run with elevated privileges.","",,,"::NATURE:ChildOf:CAPEC ID:542::","","","","","","","::Limit privileges of user accounts so new service creation can only be performed by authorized administrators.::","","::284::","TAXONOMY NAME:ATTACK:ENTRY ID:1543:ENTRY NAME:Create or Modify System Process::","",
551,"Modify Existing Service",Detailed,Draft,"When an operating system starts, it also starts programs called services or daemons. Modifying existing services may break existing services or may enable services that are disabled/not commonly used.","",,,"::NATURE:ChildOf:CAPEC ID:542::","","","","","","","::Limit privileges of user accounts so service changes can only be performed by authorized administrators. Also monitor any service changes that may occur inadvertently.::","","::284::522::","TAXONOMY NAME:ATTACK:ENTRY ID:1543:ENTRY NAME:Create or Modify System Process::","",
552,"Install Rootkit ",Detailed,Draft,"An adversary exploits a weakness in authentication to install malware that alters the functionality and information provide by targeted operating system API calls. Often referred to as rootkits, it is often used to hide the presence of programs, files, network connections, services, drivers, and other system components.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:542::","","","","","","","::Prevent adversary access to privileged accounts necessary to install rootkits.::","::A rootkit may take the form of a hypervisor. A hypervisor is a software layer that sits between the operating system and the processor. It presents a virtual running environment to the operating system. An example of a common hypervisor is Xen. Because a hypervisor operates at a level below the operating system it can hide its existence from the operating system.::Similar to a rootkit, a bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). Adversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.::","::284::","TAXONOMY NAME:ATTACK:ENTRY ID:1014:ENTRY NAME:Rootkit::::TAXONOMY NAME:ATTACK:ENTRY ID:1542.003:ENTRY NAME:Pre-OS Boot:Bootkit::::TAXONOMY NAME:ATTACK:ENTRY ID:1547.006:ENTRY NAME:Boot or Logon Autostart Execution:Kernel Modules and Extensions::","",
554,"Functionality Bypass",Meta,Draft,"An adversary attacks a system by bypassing some or all functionality intended to protect it. Often, a system user will think that protection is in place, but the functionality behind those protections has been disabled by the adversary.","",Medium,High,"","","","","","","","","","::424::1299::","","",
555,"Remote Services with Stolen Credentials",Standard,Stable,"This pattern of attack involves an adversary that uses stolen credentials to leverage remote services such as RDP, telnet, SSH, and VNC to log into a system. Once access is gained, any number of malicious activities could be performed.","",,Very High,"::NATURE:ChildOf:CAPEC ID:560::NATURE:CanPrecede:CAPEC ID:151::","","","","","","","::Disable RDP, telnet, SSH and enable firewall rules to block such traffic. Limit users and accounts that have remote interactive login access. Remove the Local Administrators group from the list of groups allowed to login through RDP. Limit remote user permissions. Use remote desktop gateways and multifactor authentication for remote logins.::","::Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). There are other implementations and third-party tools that provide graphical access Remote Services similar to RDS. Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials.::Windows Remote Management (WinRM) is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). It may be called with the winrm command or by any number of programs such as PowerShell.::","::522::308::309::294::263::262::521::","TAXONOMY NAME:ATTACK:ENTRY ID:1021:ENTRY NAME:Remote Services::::TAXONOMY NAME:ATTACK:ENTRY ID:1114.002:ENTRY NAME:Email Collection:Remote Email Collection::::TAXONOMY NAME:ATTACK:ENTRY ID:1133:ENTRY NAME:External Remote Services::","",
556,"Replace File Extension Handlers",Detailed,Draft,"When a file is opened, its file handler is checked to determine which program opens the file. File handlers are configuration properties of many operating systems. Applications can modify the file handler for a given file extension to call an arbitrary program when a file with the given extension is opened.","",,,"::NATURE:ChildOf:CAPEC ID:542::","","","","","","","::Inspect registry for changes. Limit privileges of user accounts so changes to default file handlers can only be performed by authorized administrators.::","","::284::","TAXONOMY NAME:ATTACK:ENTRY ID:1546.001:ENTRY NAME:Event Triggered Execution:Change Default File Association::","",
558,"Replace Trusted Executable",Detailed,Stable,"An adversary exploits weaknesses in privilege management or access control to replace a trusted executable with a malicious version and enable the execution of malware when that trusted executable is called.","",Low,High,"::NATURE:ChildOf:CAPEC ID:542::","","","","","","","","::Specific versions of Windows contain accessibility features that may be launched with a key combination before a user has logged in (for example when they are on the Windows Logon screen). On Windows XP and Windows Server 2003/R2, the program (e.g. C:WindowsSystem32utilman.exe) may be replaced with cmd.exe (or another program that provides backdoor access). Then pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over RDP will cause the replaced file to be executed with SYSTEM privileges.::","::284::","TAXONOMY NAME:ATTACK:ENTRY ID:1505.005:ENTRY NAME:Server Software Component: Terminal Services DLL::::TAXONOMY NAME:ATTACK:ENTRY ID:1546.008:ENTRY NAME:Event Triggered Execution: Accessibility Features::","",
559,"Orbital Jamming",Detailed,Draft,"In this attack pattern, the adversary sends disruptive signals at a target satellite using a rogue uplink station to disrupt the intended transmission. Those within the satellite's footprint are prevented from reaching the satellite's targeted or neighboring channels. The satellite's footprint size depends upon its position in the sky; higher orbital satellites cover multiple continents.","",Low,High,"::NATURE:ChildOf:CAPEC ID:601::","","::This attack requires the knowledge of the satellite's coordinates for targeting.::","","::A satellite uplink station.::","","::SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:A successful attack will deny the availability of the satellite communications for authorized users.::","","","","","",
560,"Use of Known Domain Credentials",Meta,Stable,"An adversary guesses or obtains (i.e. steals or purchases) legitimate credentials (e.g. userID/password) to achieve authentication and to perform authorized actions under the guise of an authenticated user or service.","",High,High,"::NATURE:CanPrecede:CAPEC ID:151::","::STEP:1:PHASE:Explore:DESCRIPTION:[Acquire known credentials] The adversary must obtain known credentials in order to access the target system, application, or service.:TECHNIQUE:An adversary purchases breached username/password combinations or leaked hashed passwords from the dark web.:TECHNIQUE:An adversary leverages a key logger or phishing attack to steal user credentials as they are provided.:TECHNIQUE:An adversary conducts a sniffing attack to steal credentials as they are transmitted.:TECHNIQUE:An adversary gains access to a database and exfiltrates password hashes.:TECHNIQUE:An adversary examines outward-facing configuration and properties files to discover hardcoded credentials.::STEP:2:PHASE:Explore:DESCRIPTION:[Determine target's password policy] Determine the password policies of the target system/application to determine if the known credentials fit within the specified criteria.:TECHNIQUE:Determine minimum and maximum allowed password lengths.:TECHNIQUE:Determine format of allowed passwords (whether they are required or allowed to contain numbers, special characters, etc., or whether they are allowed to contain words from the dictionary).:TECHNIQUE:Determine account lockout policy (a strict account lockout policy will prevent brute force attacks if multiple passwords are known for a single user account).::STEP:3:PHASE:Experiment:DESCRIPTION:[Attempt authentication] Try each credential until the target grants access.:TECHNIQUE:Manually or automatically enter each credential through the target's interface.::STEP:4:PHASE:Exploit:DESCRIPTION:[Impersonate] An adversary can use successful experiments or authentications to impersonate an authorized user or system, or to laterally move within a system or application::STEP:5:PHASE:Exploit:DESCRIPTION:[Spoofing] Malicious data can be injected into the target system or into a victim user's system by an adversary. The adversary can also pose as a legitimate user to perform social engineering attacks.::STEP:6:PHASE:Exploit:DESCRIPTION:[Data Exfiltration] The adversary can obtain sensitive data contained within the system or application.::","::The system/application uses one factor password based authentication, SSO, and/or cloud-based authentication.::The system/application does not have a sound password policy that is being enforced.::The system/application does not implement an effective password throttling mechanism.::The adversary possesses a list of known user accounts and corresponding passwords that may exist on the target.::","::SKILL:Once an adversary obtains a known credential, leveraging it is trivial.:LEVEL:Low::","::A list of known credentials.::A custom script that leverages the credential list to launch an attack.::","::Authentication attempts use credentials that have been used previously by the account in question.::Authentication attempts are originating from IP addresses or locations that are inconsistent with the user's normal IP addresses or locations.::Data is being transferred and/or removed from systems/applications within the network.::Suspicious or Malicious software is downloaded/installed on systems within the domain.::Messages from a legitimate user appear to contain suspicious links or communications not consistent with the user's normal behavior.::","::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authentication:TECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Authorization:TECHNICAL IMPACT:Read Data::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::","::Leverage multi-factor authentication for all authentication services and prior to granting an entity access to the domain network.::Create a strong password policy and ensure that your system enforces this policy.::Ensure users are not reusing username/password combinations for multiple systems, applications, or services.::Do not reuse local administrator account credentials across systems.::Deny remote use of local admin credentials to log into domain systems.::Do not allow accounts to be a local administrator on more than one system.::Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-2.::Monitor system and domain logs for abnormal credential access.::","::Throughout 2015 and 2016, APT28 — also known as Pawn Storm, Sednit, Fancy Bear, Sofacy, and STRONTIUM — leveraged stolen credentials to infiltrate the Democratic National Committee (DNC), the United States Army, the World Anti-Doping Agency (WADA), the Court of Arbitration for Sport (TAS-CAS), and more. In most cases, the legitimate credentials were obtained via calculated spearphishing, tabnabbing, and DNS attacks targeted at corporate webmail systems. APT28 also executed several watering hole attacks, in addition to exploiting several zero-day vulnerabilities within Flash and Windows. The stolen credentials were then utilized to maintain authenticated access, laterally move within the local network, and exfiltrate sensitive information including DNC emails and personal medical records of numerous athletes. [REF-571]::In early 2019, FIN6 exploited stolen credentials from an organization within the engineering industry to laterally move within an environment via the Windows’ Remote Desktop Protocol (RDP). Multiple servers were subsequently infected with malware to create malware distribution servers, which were used to distribute the LockerGoga ransomware. [REF-573]::","::522::307::308::309::262::263::654::1273::","TAXONOMY NAME:ATTACK:ENTRY ID:1078:ENTRY NAME:Valid Accounts::","",
561,"Windows Admin Shares with Stolen Credentials",Detailed,Draft,"An adversary guesses or obtains (i.e. steals or purchases) legitimate Windows administrator credentials (e.g. userID/password) to access Windows Admin Shares on a local machine or within a Windows domain.","",,,"::NATURE:ChildOf:CAPEC ID:653::NATURE:CanPrecede:CAPEC ID:151::NATURE:CanPrecede:CAPEC ID:165::NATURE:CanPrecede:CAPEC ID:549::NATURE:CanPrecede:CAPEC ID:545::","::STEP:1:PHASE:Explore:DESCRIPTION:[Acquire known Windows administrator credentials] The adversary must obtain known Windows administrator credentials in order to access the administrative network shares.:TECHNIQUE:An adversary purchases breached Windows administrator credentials from the dark web.:TECHNIQUE:An adversary leverages a key logger or phishing attack to steal administrator credentials as they are provided.:TECHNIQUE:An adversary conducts a sniffing attack to steal Windows administrator credentials as they are transmitted.:TECHNIQUE:An adversary gains access to a Windows domain system/files and exfiltrates Windows administrator password hashes.:TECHNIQUE:An adversary examines outward-facing configuration and properties files to discover hardcoded Windows administrator credentials.::STEP:2:PHASE:Experiment:DESCRIPTION:[Attempt domain authentication] Try each Windows administrator credential against the hidden network shares until the target grants access.:TECHNIQUE:Manually or automatically enter each administrator credential through the target's interface.::STEP:3:PHASE:Exploit:DESCRIPTION:[Malware Execution] An adversary can remotely execute malware within the administrative network shares to infect other systems within the domain.::STEP:4:PHASE:Exploit:DESCRIPTION:[Data Exfiltration] The adversary can remotely obtain sensitive data contained within the administrative network shares.::","::The system/application is connected to the Windows domain.::The target administrative share allows remote use of local admin credentials to log into domain systems.::The adversary possesses a list of known Windows administrator credentials that exist on the target domain.::","::SKILL:Once an adversary obtains a known Windows credential, leveraging it is trivial.:LEVEL:Low::","::A list of known Windows administrator credentials for the targeted domain.::","::Data is being transferred and/or removed from administrative network shares.::Suspicious or Malicious software is executed within administrative network shares.::Suspicious or Malicious software is downloaded/installed on systems within the domain.::","::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authentication:TECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Authorization:TECHNICAL IMPACT:Read Data::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::","::Do not reuse local administrator account credentials across systems.::Deny remote use of local admin credentials to log into domain systems.::Do not allow accounts to be a local administrator on more than one system.::","::APT32 has leveraged Windows' built-in Net utility to use Windows Administrative Shares to copy and execute remote malware. [REF-579]::In May 2017, APT15 laterally moved within a Windows domain via Windows Administrative Shares to copy files to and from compromised host systems. This further allowed for the remote execution of malware. [REF-578]::","::522::308::309::294::263::262::521::","TAXONOMY NAME:ATTACK:ENTRY ID:1021.002:ENTRY NAME:Remote Services:SMB/Windows Admin Shares::","",
562,"Modify Shared File",Detailed,Draft,"An adversary manipulates the files in a shared location by adding malicious programs, scripts, or exploit code to valid content. Once a user opens the shared content, the tainted content is executed.","",,,"::NATURE:ChildOf:CAPEC ID:17::","","","","","","","::Disallow shared content. Protect shared folders by minimizing users that have write access. Use utilities that mitigate exploitation like the Microsoft Enhanced Mitigation Experience Toolkit (EMET) to prevent exploits from being run.::","","::284::","TAXONOMY NAME:ATTACK:ENTRY ID:1080:ENTRY NAME:Taint shared content::","",
563,"Add Malicious File to Shared Webroot",Detailed,Draft,"An adversaries may add malicious content to a website through the open file share and then browse to that content with a web browser to cause the server to execute the content. The malicious content will typically run under the context and permissions of the web server process, often resulting in local system or administrative privileges depending on how the web server is configured.","",,,"::NATURE:ChildOf:CAPEC ID:17::","","","","","","","::Ensure proper permissions on directories that are accessible through a web server. Disallow remote access to the web root. Disable execution on directories within the web root. Ensure that permissions of the web server process are only what is required by not using built-in accounts and instead create specific accounts to limit unnecessary access or permissions overlap across multiple systems.::","","::284::","","",
564,"Run Software at Logon",Detailed,Draft,"Operating system allows logon scripts to be run whenever a specific user or users logon to a system. If adversaries can access these scripts, they may insert additional code into the logon script. This code can allow them to maintain persistence or move laterally within an enclave because it is executed every time the affected user or users logon to a computer. Modifying logon scripts can effectively bypass workstation and enclave firewalls. Depending on the access configuration of the logon scripts, either local credentials or a remote administrative account may be necessary.","",,,"::NATURE:ChildOf:CAPEC ID:542::","","","","","","","::Restrict write access to logon scripts to necessary administrators.::","","::284::","TAXONOMY NAME:ATTACK:ENTRY ID:1037:ENTRY NAME:Boot or Logon Initialization Scripts::::TAXONOMY NAME:ATTACK:ENTRY ID:1543.001:ENTRY NAME:Create or Modify System Process: Launch Agent::::TAXONOMY NAME:ATTACK:ENTRY ID:1543.004:ENTRY NAME:Create or Modify System Process: Launch Daemon::::TAXONOMY NAME:ATTACK:ENTRY ID:1547:ENTRY NAME:Boot or Logon Autostart Execution::","",
565,"Password Spraying",Detailed,Draft,"In a Password Spraying attack, an adversary tries a small list (e.g. 3-5) of common or expected passwords, often matching the target's complexity policy, against a known list of user accounts to gain valid credentials. The adversary tries a particular password for each user account, before moving onto the next password in the list. This approach assists the adversary in remaining undetected by avoiding rapid or frequent account lockouts. The adversary may then reattempt the process with additional passwords, once enough time has passed to prevent inducing a lockout.","",High,High,"::NATURE:ChildOf:CAPEC ID:49::NATURE:CanPrecede:CAPEC ID:600::NATURE:CanPrecede:CAPEC ID:151::NATURE:CanPrecede:CAPEC ID:560::NATURE:CanPrecede:CAPEC ID:561::NATURE:CanPrecede:CAPEC ID:653::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine target's password policy] Determine the password policies of the target system/application.:TECHNIQUE:Determine minimum and maximum allowed password lengths.:TECHNIQUE:Determine format of allowed passwords (whether they are required or allowed to contain numbers, special characters, etc., or whether they are allowed to contain words from the dictionary).:TECHNIQUE:Determine account lockout policy (a strict account lockout policy will prevent brute force attacks).::STEP:2:PHASE:Explore:DESCRIPTION:[Select passwords] Pick the passwords to be used in the attack (e.g. commonly used passwords, passwords tailored to individual users, etc.):TECHNIQUE:Select passwords based on common use or a particular user's additional details.:TECHNIQUE:Select passwords based on the target's password complexity policies.::STEP:3:PHASE:Exploit:DESCRIPTION:[Brute force password] Given the finite space of possible passwords dictated by information determined in the previous steps, try each password for all known user accounts until the target grants access.:TECHNIQUE:Manually or automatically enter the first password for each known user account through the target's interface. In most systems, start with the shortest and simplest possible passwords, because most users tend to select such passwords if allowed to do so.:TECHNIQUE:Iterate through the remaining passwords for each known user account.::","::The system/application uses one factor password based authentication.::The system/application does not have a sound password policy that is being enforced.::The system/application does not implement an effective password throttling mechanism.::The adversary possesses a list of known user accounts on the target system/application.::","::SKILL:A Password Spraying attack is very straightforward. A variety of password cracking tools are widely available.:LEVEL:Low::","::A machine with sufficient resources for the job (e.g. CPU, RAM, HD).::Applicable password lists.::A password cracking tool or a custom script that leverages the password list to launch the attack.::","::Many invalid login attempts are coming from the same machine (same IP address) or for multiple user accounts within short succession.::The login attempts use passwords that have been used previously by the user account in question.::Login attempts are originating from IP addresses or locations that are inconsistent with the user's normal IP addresses or locations.::","::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authentication:TECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:SCOPE:Authorization:TECHNICAL IMPACT:Read Data::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::","::Create a strong password policy and ensure that your system enforces this policy.::Implement an intelligent password throttling mechanism. Care must be taken to assure that these mechanisms do not excessively enable account lockout attacks such as CAPEC-2.::Leverage multi-factor authentication for all authentication services and prior to granting an entity access to the domain network.::","::A user selects the phrase Password123 as their password, believing that it would be very difficult to guess. Password Spraying, leveraging a list of commonly used passwords, is used to crack this password and gain access to the account.::The Iranian hacker group APT33 (AKA Holmium, Refined Kitten, or Elfin) carried out numerous Password Spraying attacks in 2019. On average, APT33 targeted 2,000 organizations per month, with upwards of 10 million authentication attempts each day. The majority of these attacks targeted manufacturers, suppliers, or maintainers of industrial control system equipment.::","::521::262::263::654::307::308::309::","TAXONOMY NAME:ATTACK:ENTRY ID:1110.003:ENTRY NAME:Brute Force:Password Spraying::","",
568,"Capture Credentials via Keylogger",Detailed,Draft,"An adversary deploys a keylogger in an effort to obtain credentials directly from a system's user. After capturing all the keystrokes made by a user, the adversary can analyze the data and determine which string are likely to be passwords or other credential related information.","",,High,"::NATURE:ChildOf:CAPEC ID:569::NATURE:CanPrecede:CAPEC ID:600::NATURE:CanPrecede:CAPEC ID:151::NATURE:CanPrecede:CAPEC ID:560::NATURE:CanPrecede:CAPEC ID:561::NATURE:CanPrecede:CAPEC ID:653::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine which user's credentials to capture] Since this is a more targeted attack, an adversary will first identify a particular user they wish the capture the credentials of.::STEP:2:PHASE:Experiment:DESCRIPTION:[Deploy keylogger] Once a user is identified, an adversary will deploy a keylogger to the user's system in one of many ways.:TECHNIQUE:Send a phishing email with a malicious attachment that installs a keylogger on a user's system:TECHNIQUE:Conceal a keylogger behind fake software and get the user to download the software:TECHNIQUE:Get a user to click on a malicious URL that directs them to a webpage that will install a keylogger without their knowledge:TECHNIQUE:Gain access to the user's system through a vulnerability and manually install a keylogger::STEP:3:PHASE:Experiment:DESCRIPTION:[Record keystrokes] Once the keylogger is deployed on the user's system, the adversary will record keystrokes over a period of time.::STEP:4:PHASE:Experiment:DESCRIPTION:[Analyze data and determine credentials] Using the captured keystrokes, the adversary will be able to determine the credentials of the user.:TECHNIQUE:Search for repeated sequences that are following by the enter key:TECHNIQUE:Search for repeated sequences that are not found in a dictionary:TECHNIQUE:Search for several backspaces in a row. This could indicate a mistyped password. The correct password can then be inferred using the whole key sequence::STEP:5:PHASE:Exploit:DESCRIPTION:[Use found credentials] After the adversary has found the credentials for the target user, they will then use them to gain access to a system in order to perform some follow-up attack::","::The ability to install the keylogger, either in person or remote.::","","","","","::Strong physical security can help reduce the ability of an adversary to install a keylogger.::","","","TAXONOMY NAME:ATTACK:ENTRY ID:1056.001:ENTRY NAME:Input Capture:Keylogging::","",
569,"Collect Data as Provided by Users",Standard,Draft,"An attacker leverages a tool, device, or program to obtain specific information as provided by a user of the target system. This information is often needed by the attacker to launch a follow-on attack. This attack is different than Social Engineering as the adversary is not tricking or deceiving the user. Instead the adversary is putting a mechanism in place that captures the information that a user legitimately enters into a system. Deploying a keylogger, performing a UAC prompt, or wrapping the Windows default credential provider are all examples of such interactions.","",,,"::NATURE:ChildOf:CAPEC ID:116::","","","","","","","","","","TAXONOMY NAME:ATTACK:ENTRY ID:1056:ENTRY NAME:Input Capture::","",
57,"Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",Detailed,Draft,"This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.","",Medium,Very High,"::NATURE:ChildOf:CAPEC ID:157::","::STEP:1:PHASE:Explore:DESCRIPTION:[Find a REST-style application that uses SSL] The adversary must first find a REST-style application that uses SSL to target. Because this attack is easier to carry out from inside of a server network, it is likely that an adversary could have inside knowledge of how services operate.::STEP:2:PHASE:Experiment:DESCRIPTION:[Insert a listener to sniff client-server communication] The adversary inserts a listener that must exist beyond the point where SSL is terminated. This can be placed on the client side if it is believed that sensitive information is being sent to the client as a response, although most often the listener will be placed on the server side to listen for client authentication information.:TECHNIQUE:Run wireshark or tcpdump on a device that is on the inside of a firewall, load balancer, or router of a network and capture traffic after SSL has been terminated::STEP:3:PHASE:Exploit:DESCRIPTION:[Gather information passed in the clear] If developers have not hashed or encrypted data sent in the sniffed request, the adversary will be able to read this data in the clear. Most commonly, they will now have a username or password that they can use to submit requests to the web service just as an authorized user::","::Opportunity to intercept must exist beyond the point where SSL is terminated.::The adversary must be able to insert a listener actively (proxying the communication) or passively (sniffing the communication) in the client-server communication path.::","::SKILL:To insert a network sniffer or other listener into the communication stream:LEVEL:Low::","","","::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::","::Implementation: Implement message level security such as HMAC in the HTTP communication::Design: Utilize defense in depth, do not rely on a single security mechanism like SSL::Design: Enforce principle of least privilege::","::The Rest service provider uses SSL to protect the communications between the service requester (client) to the service provider. In the instance where SSL is terminated before the communications reach the web server, it is very common in enterprise data centers to terminate SSL at a router, firewall, load balancer, proxy or other device, then the adversary can insert a sniffer into the communication stream and gather all the authentication tokens (such as session credentials, username/passwords combinations, and so on). The Rest service requester and service provider do not have any way to detect this attack.::","::300::287::693::","TAXONOMY NAME:ATTACK:ENTRY ID:1040:ENTRY NAME:Network Sniffing::","",
571,"Block Logging to Central Repository",Standard,Draft,"An adversary prevents host-generated logs being delivered to a central location in an attempt to hide indicators of compromise.","",,Low,"::NATURE:ChildOf:CAPEC ID:161::","","","","","","","","","","TAXONOMY NAME:ATTACK:ENTRY ID:1562.002:ENTRY NAME:Impair Defenses: Disable Windows Event Logging::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.002:ENTRY NAME:Impair Defenses: Impair Command History Logging::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.006:ENTRY NAME:Impair Defenses: Indicator Blocking::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.008:ENTRY NAME:Impair Defenses: Disable Cloud Logs::","",
572,"Artificially Inflate File Sizes",Standard,Draft,"An adversary modifies file contents by adding data to files for several reasons. Many different attacks could “follow” this pattern resulting in numerous outcomes. Adding data to a file could also result in a Denial of Service condition for devices with limited storage capacity.","",High,Medium,"::NATURE:ChildOf:CAPEC ID:165::","","","","","","::SCOPE:Availability:TECHNICAL IMPACT:Resource Consumption:NOTE:Denial of Service::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::","","::An adversary could potentially increase file sizes on devices containing limited storage resources, such as SCADA or IOT devices, resulting in denial of service conditions.::","","TAXONOMY NAME:ATTACK:ENTRY ID:1027.001:ENTRY NAME:Obfuscated Files or Information:Binary Padding::","",
573,"Process Footprinting",Standard,Stable,"An adversary exploits functionality meant to identify information about the currently running processes on the target system to an authorized user. By knowing what processes are running on the target system, the adversary can learn about the target environment as a means towards further malicious behavior.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:169::","","::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::","","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::","::Identify programs that may be used to acquire process information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist.::","::On a Windows system, the command, tasklist, displays information about processes. The same function on a Mac OS system is done with the command, ps.::In addition to manual discovery of running processes, an adversary can develop malware that carries out this attack pattern before subsequent malicious action.::","::200::","TAXONOMY NAME:ATTACK:ENTRY ID:1057:ENTRY NAME:Process Discovery::","",
574,"Services Footprinting",Standard,Stable,"An adversary exploits functionality meant to identify information about the services on the target system to an authorized user. By knowing what services are registered on the target system, the adversary can learn about the target environment as a means towards further malicious behavior. Depending on the operating system, commands that can obtain services information include sc and tasklist/svc using Tasklist, and net start using Net.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:169::","","::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::","","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::","::Identify programs that may be used to acquire service information and block them by using a software restriction policy or tools that restrict program execution by uaing a process allowlist.::","","::200::","TAXONOMY NAME:ATTACK:ENTRY ID:1007:ENTRY NAME:System Service Discovery::","",
575,"Account Footprinting",Standard,Stable,"An adversary exploits functionality meant to identify information about the domain accounts and their permissions on the target system to an authorized user. By knowing what accounts are registered on the target system, the adversary can inform further and more targeted malicious behavior. Example Windows commands which can acquire this information are: net user and dsquery.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:169::","","::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::","","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::","::Identify programs that may be used to acquire account information and block them by using a software restriction policy or tools that restrict program execution by uysing a process allowlist.::","","::200::","TAXONOMY NAME:ATTACK:ENTRY ID:1087:ENTRY NAME:Account Discovery::","",
576,"Group Permission Footprinting",Standard,Stable,"An adversary exploits functionality meant to identify information about user groups and their permissions on the target system to an authorized user. By knowing what users/permissions are registered on the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command which can list local groups is net localgroup.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:169::","","::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::","","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::","::Identify programs (such as net) that may be used to enumerate local group permissions and block them by using a software restriction Policy or tools that restrict program execution by using a process allowlist.::","","::200::","TAXONOMY NAME:ATTACK:ENTRY ID:1069:ENTRY NAME:Permission Groups Discovery::::TAXONOMY NAME:ATTACK:ENTRY ID:1615:ENTRY NAME:Group Policy Discovery::","",
577,"Owner Footprinting",Standard,Draft,"An adversary exploits functionality meant to identify information about the primary users on the target system to an authorized user. They may do this, for example, by reviewing logins or file modification times. By knowing what owners use the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command that may accomplish this is dir /A ntuser.dat. Which will display the last modified time of a user's ntuser.dat file when run within the root folder of a user. This time is synonymous with the last time that user was logged in.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:169::","","::The adversary must have gained access to the target system via physical or logical means in order to carry out this attack.::Administrator permissions are required to view the home folder of other users.::","","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Other::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities::","::Ensure that proper permissions on files and folders are enacted to limit accessibility.::","","::200::","TAXONOMY NAME:ATTACK:ENTRY ID:1033:ENTRY NAME:System Owner/User Discovery::","",
578,"Disable Security Software",Standard,Usable,"An adversary exploits a weakness in access control to disable security tools so that detection does not occur. This can take the form of killing processes, deleting registry keys so that tools do not start at run time, deleting log files, or other methods.","",Medium,Medium,"::NATURE:ChildOf:CAPEC ID:176::","","::The adversary must have the capability to interact with the configuration of the targeted system.::","","::None: No specialized resources are required to execute this type of attack.::","","::SCOPE:Availability:TECHNICAL IMPACT:Hide Activities:NOTE:By disabling certain security tools, the adversary can hide malicious activity and avoid detection.::","::Ensure proper permissions are in place to prevent adversaries from altering the execution status of security tools.::","","::284::","TAXONOMY NAME:ATTACK:ENTRY ID:1556.006:ENTRY NAME:Modify Authentication Process: Multi-Factor Authentication::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.001:ENTRY NAME:Impair Defenses: Disable or Modify Tools::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.002:ENTRY NAME:Impair Defenses: Disable Windows Event Logging::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.004:ENTRY NAME:Impair Defenses: Disable or Modify System Firewall::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.007:ENTRY NAME:Impair Defenses: Disable or Modify Cloud Firewall::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.008:ENTRY NAME:Impair Defenses: Disable Cloud Logs::::TAXONOMY NAME:ATTACK:ENTRY ID:1562.009:ENTRY NAME:Impair Defenses: Safe Mode Boot::","",
579,"Replace Winlogon Helper DLL",Detailed,Draft,"Winlogon is a part of Windows that performs logon actions. In Windows systems prior to Windows Vista, a registry key can be modified that causes Winlogon to load a DLL on startup. Adversaries may take advantage of this feature to load adversarial code at startup.","",,,"::NATURE:ChildOf:CAPEC ID:542::","","","","","","","::Changes to registry entries in HKLMSoftwareMicrosoftWindows NTWinlogonNotify that do not correlate with known software, patch cycles, etc are suspicious. New DLLs written to System32 which do not correlate with known good software or patching may be suspicious.::","","::15::","TAXONOMY NAME:ATTACK:ENTRY ID:1547.004:ENTRY NAME:Boot or Logon Autostart Execution: Winlogon helper DLL::","",
58,"Restful Privilege Elevation",Detailed,Draft,"An adversary identifies a Rest HTTP (Get, Put, Delete) style permission method allowing them to perform various malicious actions upon server data due to lack of access control mechanisms implemented within the application service accepting HTTP messages.","",High,High,"::NATURE:ChildOf:CAPEC ID:1::NATURE:ChildOf:CAPEC ID:180::","","::The attacker needs to be able to identify HTTP Get URLs. The Get methods must be set to call applications that perform operations other than get such as update and delete.::","::SKILL:It is relatively straightforward to identify an HTTP Get method that changes state on the server side and executes against an over-privileged system interface:LEVEL:Low::","","","::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::","::Design: Enforce principle of least privilege::Implementation: Ensure that HTTP Get methods only retrieve state and do not alter state on the server side::Implementation: Ensure that HTTP methods have proper ACLs based on what the functionality they expose::","::The HTTP Get method is designed to retrieve resources and not to alter the state of the application or resources on the server side. However, developers can easily code programs that accept a HTTP Get request that do in fact create, update or delete data on the server. Both Flickr (http://www.flickr.com/services/api/flickr.photosets.delete.html) and del.icio.us (http://del.icio.us/api/posts/delete) have implemented delete operations using standard HTTP Get requests. These HTTP Get methods do delete data on the server side, despite being called from Get which is not supposed to alter state.::","::267::269::","","",
580,"System Footprinting",Standard,Stable,"An adversary engages in active probing and exploration activities to determine security information about a remote target system. Often times adversaries will rely on remote applications that can be probed for system configurations.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:169::","","::The adversary must have logical access to the target network and system.::","::SKILL:The adversary needs to know basic linux commands.:LEVEL:Low::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::","::Keep patches up to date by installing weekly or daily if possible.::Identify programs that may be used to acquire peripheral information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist.::","","::204::205::208::","TAXONOMY NAME:ATTACK:ENTRY ID:1082:ENTRY NAME:System Information Discovery::","",
581,"Security Software Footprinting",Detailed,Draft,"Adversaries may attempt to get a listing of security tools that are installed on the system and their configurations. This may include security related system features (such as a built-in firewall or anti-spyware) as well as third-party security software.","",,,"::NATURE:ChildOf:CAPEC ID:580::","","","","","","","::Identify programs that may be used to acquire security tool information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist.::","","","TAXONOMY NAME:ATTACK:ENTRY ID:1518.001:ENTRY NAME:Software Discovery:Security Software Discovery::","",
582,"Route Disabling",Standard,Draft,"An adversary disables the network route between two targets. The goal is to completely sever the communications channel between two entities. This is often the result of a major error or the use of an Internet kill switch by those in control of critical infrastructure. This attack pattern differs from most other obstruction patterns by targeting the route itself, as opposed to the data passed over the route.","",Low,High,"::NATURE:ChildOf:CAPEC ID:607::","","::The adversary requires knowledge of and access to network route.::","","","","::SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Disabling a network route denies the availability of a service.::","","","","","",