CWE-ID,Name,Weakness Abstraction,Status,Description
6,J2EE Misconfiguration: Insufficient Session-ID Length,Variant,Incomplete,The J2EE application is configured to use an insufficient session ID length.
15,External Control of System or Configuration Setting,Base,Incomplete,One or more system settings or configuration elements can be externally controlled by a user.
20,Improper Input Validation,Class,Stable,The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.
59,Improper Link Resolution Before File Access ('Link Following'),Base,Draft,The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.
73,External Control of File Name or Path,Base,Draft,The product allows user input to control or influence paths or file names that are used in filesystem operations.
74,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),Class,Incomplete,The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.
75,Failure to Sanitize Special Elements into a Different Plane (Special Element Injection),Class,Draft,The product does not adequately filter user-controlled input for special elements with control implications.
76,Improper Neutralization of Equivalent Special Elements,Base,Draft,The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.
77,Improper Neutralization of Special Elements used in a Command ('Command Injection'),Class,Draft,The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.
78,Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),Base,Stable,The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.
79,Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),Base,Stable,The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.
88,Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'),Base,Draft,The product constructs a string for a command to executed by a separate component in another control sphere, but it does not properly delimit the intended arguments, options, or switches within that command string.
89,Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),Base,Stable,The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.
90,Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection'),Base,Draft,The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.
91,XML Injection (aka Blind XPath Injection),Base,Draft,The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.
93,Improper Neutralization of CRLF Sequences ('CRLF Injection'),Base,Draft,The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.
94,Improper Control of Generation of Code ('Code Injection'),Base,Draft,The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.
95,Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection'),Variant,Incomplete,The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. eval).
96,Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection'),Base,Draft,The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.
97,Improper Neutralization of Server-Side Includes (SSI) Within a Web Page,Variant,Draft,The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.
98,Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion'),Variant,Draft,The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in require, include, or similar functions.
99,Improper Control of Resource Identifiers ('Resource Injection'),Class,Draft,The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.
114,Process Control,Class,Incomplete,Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.
117,Improper Output Neutralization for Logs,Base,Draft,The product does not neutralize or incorrectly neutralizes output that is written to logs.
138,Improper Neutralization of Special Elements,Class,Draft,The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.
150,Improper Neutralization of Escape, Meta, or Control Sequences,Variant,Incomplete,The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.
201,Insertion of Sensitive Information Into Sent Data,Base,Draft,The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.
208,Observable Timing Discrepancy,Base,Incomplete,Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.
209,Generation of Error Message Containing Sensitive Information,Base,Draft,The product generates an error message that includes sensitive information about its environment, users, or associated data.
210,Self-generated Error Message Containing Sensitive Information,Base,Draft,The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.
211,Externally-Generated Error Message Containing Sensitive Information,Base,Incomplete,The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.
212,Improper Removal of Sensitive Information Before Storage or Transfer,Base,Incomplete,The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.
214,Invocation of Process Using Visible Sensitive Information,Base,Incomplete,A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.
219,Storage of File with Sensitive Data Under Web Root,Variant,Draft,The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.
220,Storage of File With Sensitive Data Under FTP Root,Variant,Draft,The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.
223,Omission of Security-relevant Information,Base,Draft,The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.
224,Obscured Security-relevant Information by Alternate Name,Base,Incomplete,The product records security-relevant information according to an alternate name of the affected entity, instead of the canonical name.
243,Creation of chroot Jail Without Changing Working Directory,Variant,Draft,The product uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail.
250,Execution with Unnecessary Privileges,Base,Draft,The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.
256,Plaintext Storage of a Password,Base,Incomplete,Storing a password in plaintext may result in a system compromise.
257,Storing Passwords in a Recoverable Format,Base,Incomplete,The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.
258,Empty Password in Configuration File,Variant,Incomplete,Using an empty string as a password is insecure.
259,Use of Hard-coded Password,Variant,Draft,The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.
260,Password in Configuration File,Base,Incomplete,The product stores a password in a configuration file that might be accessible to actors who do not know the password.
261,Weak Encoding for Password,Base,Incomplete,Obscuring a password with a trivial encoding does not protect the password.
262,Not Using Password Aging,Base,Draft,The product does not have a mechanism in place for managing password aging.
263,Password Aging with Long Expiration,Base,Draft,The product supports password aging, but the expiration period is too long.
266,Incorrect Privilege Assignment,Base,Draft,A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.
267,Privilege Defined With Unsafe Actions,Base,Incomplete,A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.
268,Privilege Chaining,Base,Draft,Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.
269,Improper Privilege Management,Class,Draft,The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.
270,Privilege Context Switching Error,Base,Draft,The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.
271,Privilege Dropping / Lowering Errors,Class,Incomplete,The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.
272,Least Privilege Violation,Base,Incomplete,The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.
273,Improper Check for Dropped Privileges,Base,Incomplete,The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.
274,Improper Handling of Insufficient Privileges,Base,Draft,The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.
276,Incorrect Default Permissions,Base,Draft,During installation, installed file permissions are set to allow anyone to modify those files.
277,Insecure Inherited Permissions,Variant,Draft,A product defines a set of insecure permissions that are inherited by objects that are created by the program.
279,Incorrect Execution-Assigned Permissions,Variant,Draft,While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.
280,Improper Handling of Insufficient Permissions or Privileges ,Base,Draft,The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.
281,Improper Preservation of Permissions,Base,Draft,The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.
282,Improper Ownership Management,Class,Draft,The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.
283,Unverified Ownership,Base,Draft,The product does not properly verify that a critical resource is owned by the proper entity.
284,Improper Access Control,Pillar,Incomplete,The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.
285,Improper Authorization,Class,Draft,The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.
286,Incorrect User Management,Class,Incomplete,The product does not properly manage a user within its environment.
287,Improper Authentication,Class,Draft,When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.
288,Authentication Bypass Using an Alternate Path or Channel,Base,Incomplete,A product requires authentication, but the product has an alternate path or channel that does not require authentication.
289,Authentication Bypass by Alternate Name,Base,Incomplete,The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.
290,Authentication Bypass by Spoofing,Base,Incomplete,This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.
291,Reliance on IP Address for Authentication,Variant,Incomplete,The product uses an IP address for authentication.
293,Using Referer Field for Authentication,Variant,Draft,The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.
294,Authentication Bypass by Capture-replay,Base,Incomplete,A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).
295,Improper Certificate Validation,Base,Draft,The product does not validate, or incorrectly validates, a certificate.
296,Improper Following of a Certificate's Chain of Trust,Base,Draft,The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.
297,Improper Validation of Certificate with Host Mismatch,Variant,Incomplete,The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.
298,Improper Validation of Certificate Expiration,Variant,Draft,A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.
299,Improper Check for Certificate Revocation,Base,Draft,The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.
300,Channel Accessible by Non-Endpoint,Class,Draft,The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.
301,Reflection Attack in an Authentication Protocol,Base,Draft,Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.
302,Authentication Bypass by Assumed-Immutable Data,Base,Incomplete,The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.
303,Incorrect Implementation of Authentication Algorithm,Base,Draft,The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.
304,Missing Critical Step in Authentication,Base,Draft,The product implements an authentication technique, but it skips a step that weakens the technique.
305,Authentication Bypass by Primary Weakness,Base,Draft,The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.
306,Missing Authentication for Critical Function,Base,Draft,The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.
307,Improper Restriction of Excessive Authentication Attempts,Base,Draft,The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.
308,Use of Single-factor Authentication,Base,Draft,The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.
311,Missing Encryption of Sensitive Data,Class,Draft,The product does not encrypt sensitive or critical information before storage or transmission.
312,Cleartext Storage of Sensitive Information,Base,Draft,The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.
313,Cleartext Storage in a File or on Disk,Variant,Draft,The product stores sensitive information in cleartext in a file, or on disk.
314,Cleartext Storage in the Registry,Variant,Draft,The product stores sensitive information in cleartext in the registry.
315,Cleartext Storage of Sensitive Information in a Cookie,Variant,Draft,The product stores sensitive information in cleartext in a cookie.
316,Cleartext Storage of Sensitive Information in Memory,Variant,Draft,The product stores sensitive information in cleartext in memory.
317,Cleartext Storage of Sensitive Information in GUI,Variant,Draft,The product stores sensitive information in cleartext within the GUI.
318,Cleartext Storage of Sensitive Information in Executable,Variant,Draft,The product stores sensitive information in cleartext in an executable.
319,Cleartext Transmission of Sensitive Information,Base,Draft,The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.
321,Use of Hard-coded Cryptographic Key,Variant,Draft,The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.
322,Key Exchange without Entity Authentication,Base,Draft,The product performs a key exchange with an actor without verifying the identity of that actor.
323,Reusing a Nonce, Key Pair in Encryption,Variant,Incomplete,Nonces should be used for the present occasion and only once.
324,Use of a Key Past its Expiration Date,Base,Draft,The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.
325,Missing Cryptographic Step,Base,Draft,The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.
326,Inadequate Encryption Strength,Class,Draft,The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.
327,Use of a Broken or Risky Cryptographic Algorithm,Class,Draft,The product uses a broken or risky cryptographic algorithm or protocol.
328,Use of Weak Hash,Base,Draft,The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).
330,Use of Insufficiently Random Values,Class,Stable,The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.
331,Insufficient Entropy,Base,Draft,The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.
332,Insufficient Entropy in PRNG,Variant,Draft,The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.
333,Improper Handling of Insufficient Entropy in TRNG,Variant,Draft,True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.
334,Small Space of Random Values,Base,Draft,The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.
335,Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG),Base,Draft,The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.
336,Same Seed in Pseudo-Random Number Generator (PRNG),Variant,Draft,A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.
337,Predictable Seed in Pseudo-Random Number Generator (PRNG),Variant,Draft,A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.
338,Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG),Base,Draft,The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.
339,Small Seed Space in PRNG,Variant,Draft,A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks.
341,Predictable from Observable State,Base,Draft,A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.
345,Insufficient Verification of Data Authenticity,Class,Draft,The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.
346,Origin Validation Error,Class,Draft,The product does not properly verify that the source of data or communication is valid.
347,Improper Verification of Cryptographic Signature,Base,Draft,The product does not verify, or incorrectly verifies, the cryptographic signature for data.
349,Acceptance of Extraneous Untrusted Data With Trusted Data,Base,Draft,The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.
352,Cross-Site Request Forgery (CSRF),Compound,Stable,The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.
353,Missing Support for Integrity Check,Base,Draft,The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.
354,Improper Validation of Integrity Check Value,Base,Draft,The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.
359,Exposure of Private Personal Information to an Unauthorized Actor,Base,Incomplete,The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.
370,Missing Check for Certificate Revocation after Initial Check,Variant,Draft,The product does not check the revocation status of a certificate after its initial revocation check, which can cause the product to perform privileged actions even after the certificate is revoked at a later time.
384,Session Fixation,Compound,Incomplete,Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.
390,Detection of Error Condition Without Action,Base,Draft,The product detects a specific error, but takes no actions to handle the error.
391,Unchecked Error Condition,Base,Incomplete,[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDER CWE-252, CWE-248, OR CWE-1069.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed.
392,Missing Report of Error Condition,Base,Draft,The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.
403,Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak'),Base,Draft,A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors.
419,Unprotected Primary Channel,Base,Draft,The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.
420,Unprotected Alternate Channel,Base,Draft,The product protects a primary channel, but it does not use the same level of protection for an alternate channel.
425,Direct Request ('Forced Browsing'),Base,Incomplete,The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.
426,Untrusted Search Path,Base,Stable,The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.
434,Unrestricted Upload of File with Dangerous Type,Base,Draft,The product allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.
441,Unintended Proxy or Intermediary ('Confused Deputy'),Class,Draft,The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.
460,Improper Cleanup on Thrown Exception,Base,Draft,The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.
472,External Control of Assumed-Immutable Web Parameter,Base,Draft,The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.
473,PHP External Variable Modification,Variant,Draft,A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.
488,Exposure of Data Element to Wrong Session,Base,Draft,The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.
494,Download of Code Without Integrity Check,Base,Draft,The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.
502,Deserialization of Untrusted Data,Base,Draft,The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.
521,Weak Password Requirements,Base,Draft,The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.
522,Insufficiently Protected Credentials,Class,Incomplete,The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.
523,Unprotected Transport of Credentials,Base,Incomplete,Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.
527,Exposure of Version-Control Repository to an Unauthorized Control Sphere,Variant,Incomplete,The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.
528,Exposure of Core Dump File to an Unauthorized Control Sphere,Variant,Draft,The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.
529,Exposure of Access Control List Files to an Unauthorized Control Sphere,Variant,Incomplete,The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.
530,Exposure of Backup File to an Unauthorized Control Sphere,Variant,Incomplete,A backup file is stored in a directory or archive that is made accessible to unauthorized actors.
532,Insertion of Sensitive Information into Log File,Base,Incomplete,Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.
538,Insertion of Sensitive Information into Externally-Accessible File or Directory,Base,Draft,The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.
544,Missing Standardized Error Handling Mechanism,Base,Draft,The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.
550,Server-generated Error Message Containing Sensitive Information,Variant,Incomplete,Certain conditions, such as network failure, will cause a server error message to be displayed.
551,Incorrect Behavior Order: Authorization Before Parsing and Canonicalization,Base,Incomplete,If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.
552,Files or Directories Accessible to External Parties,Base,Draft,The product makes files or directories accessible to unauthorized actors, even though they should not be.
565,Reliance on Cookies without Validation and Integrity Checking,Base,Incomplete,The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.
566,Authorization Bypass Through User-Controlled SQL Primary Key,Variant,Incomplete,The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.
579,J2EE Bad Practices: Non-serializable Object Stored in Session,Variant,Draft,The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.
593,Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created,Variant,Draft,The product modifies the SSL context after connection creation has begun.
599,Missing Validation of OpenSSL Certificate,Variant,Incomplete,The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.
601,URL Redirection to Untrusted Site ('Open Redirect'),Base,Draft,A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.
602,Client-Side Enforcement of Server-Side Security,Class,Draft,The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.
603,Use of Client-Side Authentication,Base,Draft,A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.
610,Externally Controlled Reference to a Resource in Another Sphere,Class,Draft,The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.
611,Improper Restriction of XML External Entity Reference,Base,Draft,The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.
613,Insufficient Session Expiration,Base,Incomplete,According to WASC, Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.
620,Unverified Password Change,Base,Draft,When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.
639,Authorization Bypass Through User-Controlled Key,Base,Incomplete,The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.
640,Weak Password Recovery Mechanism for Forgotten Password,Base,Incomplete,The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.
641,Improper Restriction of Names for Files and Other Resources,Base,Incomplete,The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.
642,External Control of Critical State Data,Class,Draft,The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.
643,Improper Neutralization of Data within XPath Expressions ('XPath Injection'),Base,Incomplete,The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
645,Overly Restrictive Account Lockout Mechanism,Base,Incomplete,The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.
647,Use of Non-Canonical URL Paths for Authorization Decisions,Variant,Incomplete,The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.
649,Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking,Base,Incomplete,The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.
652,Improper Neutralization of Data within XQuery Expressions ('XQuery Injection'),Base,Incomplete,The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
653,Improper Isolation or Compartmentalization,Base,Draft,The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.
656,Reliance on Security Through Obscurity,Base,Draft,The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.
668,Exposure of Resource to Wrong Sphere,Class,Draft,The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.
669,Incorrect Resource Transfer Between Spheres,Class,Draft,The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.
671,Lack of Administrator Control over Security,Class,Draft,The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.
673,External Influence of Sphere Definition,Class,Draft,The product does not prevent the definition of control spheres from external actors.
703,Improper Check or Handling of Exceptional Conditions,Pillar,Incomplete,The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.
707,Improper Neutralization,Pillar,Incomplete,The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.
708,Incorrect Ownership Assignment,Base,Incomplete,The product assigns an owner to a resource, but the owner is outside of the intended control sphere.
732,Incorrect Permission Assignment for Critical Resource,Class,Draft,The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
754,Improper Check for Unusual or Exceptional Conditions,Class,Incomplete,The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.
755,Improper Handling of Exceptional Conditions,Class,Incomplete,The product does not handle or incorrectly handles an exceptional condition.
757,Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade'),Base,Incomplete,A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.
759,Use of a One-Way Hash without a Salt,Variant,Incomplete,The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.
760,Use of a One-Way Hash with a Predictable Salt,Variant,Incomplete,The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.
770,Allocation of Resources Without Limits or Throttling,Base,Incomplete,The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.
778,Insufficient Logging,Base,Draft,When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.
779,Logging of Excessive Data,Base,Draft,The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.
780,Use of RSA Algorithm without OAEP,Variant,Incomplete,The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.
782,Exposed IOCTL with Insufficient Access Control,Variant,Draft,The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.
784,Reliance on Cookies without Validation and Integrity Checking in a Security Decision,Variant,Draft,The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.
790,Improper Filtering of Special Elements,Class,Incomplete,The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.
791,Incomplete Filtering of Special Elements,Base,Incomplete,The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.
792,Incomplete Filtering of One or More Instances of Special Elements,Variant,Incomplete,The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.
793,Only Filtering One Instance of a Special Element,Variant,Incomplete,The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.
794,Incomplete Filtering of Multiple Instances of Special Elements,Variant,Incomplete,The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.
795,Only Filtering Special Elements at a Specified Location,Base,Incomplete,The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.
796,Only Filtering Special Elements Relative to a Marker,Variant,Incomplete,The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. at the beginning/end of a string; the second argument), thereby missing remaining special elements that may exist before sending it to a downstream component.
797,Only Filtering Special Elements at an Absolute Position,Variant,Incomplete,The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. byte number 10), thereby missing remaining special elements that may exist before sending it to a downstream component.
798,Use of Hard-coded Credentials,Base,Draft,The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.
807,Reliance on Untrusted Inputs in a Security Decision,Base,Incomplete,The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.
827,Improper Control of Document Type Definition,Variant,Incomplete,The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.
829,Inclusion of Functionality from Untrusted Control Sphere,Base,Incomplete,The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.
830,Inclusion of Web Functionality from an Untrusted Source,Variant,Incomplete,The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.
836,Use of Password Hash Instead of Password for Authentication,Base,Incomplete,The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.
841,Improper Enforcement of Behavioral Workflow,Base,Incomplete,The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.
862,Missing Authorization,Class,Incomplete,The product does not perform an authorization check when an actor attempts to access a resource or perform an action.
863,Incorrect Authorization,Class,Incomplete,The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.
916,Use of Password Hash With Insufficient Computational Effort,Base,Incomplete,The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.
921,Storage of Sensitive Data in a Mechanism without Access Control,Base,Incomplete,The product stores sensitive information in a file system or device that does not have built-in access control.
922,Insecure Storage of Sensitive Information,Class,Incomplete,The product stores sensitive information without properly limiting read or write access by unauthorized actors.
923,Improper Restriction of Communication Channel to Intended Endpoints,Class,Incomplete,The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.
924,Improper Enforcement of Message Integrity During Transmission in a Communication Channel,Base,Incomplete,The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.
939,Improper Authorization in Handler for Custom URL Scheme,Base,Incomplete,The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.
940,Improper Verification of Source of a Communication Channel,Base,Incomplete,The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.
941,Incorrectly Specified Destination in a Communication Channel,Base,Incomplete,The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.
942,Permissive Cross-domain Policy with Untrusted Domains,Variant,Incomplete,The product uses a cross-domain policy file that includes domains that should not be trusted.
943,Improper Neutralization of Special Elements in Data Query Logic,Class,Incomplete,The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.
