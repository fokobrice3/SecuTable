'ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
414,"Pretexting via Delivery Person",Detailed,Draft,"An adversary engages in pretexting behavior, assuming the role of a delivery person, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. Impersonating a delivery person is an effective attack and an easy attack since not much acting is involved. Usually the hardest part is looking the part and having all of the proper credentials, papers and deliveries in order to be able to pull it off.","",,Low,"::NATURE:ChildOf:CAPEC ID:407::","","","","","","","","","","","",
415,"Pretexting via Phone",Detailed,Draft,"An adversary engages in pretexting behavior, assuming some sort of trusted role, and contacting the targeted individual or organization via phone to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. This is the most common social engineering attack. Some of the most commonly effective approaches are to impersonate a fellow employee, impersonate a computer technician or to target help desk personnel.","",,Low,"::NATURE:ChildOf:CAPEC ID:407::","","","","","","","","","","","",
416,"Manipulate Human Behavior",Meta,Stable,"An adversary exploits inherent human psychological predisposition to influence a targeted individual or group to solicit information or manipulate the target into performing an action that serves the adversary's interests. Many interpersonal social engineering techniques do not involve outright deception, although they can; many are subtle ways of manipulating a target to remove barriers, make the target feel comfortable, and produce an exchange in which the target is either more likely to share information directly, or let key information slip out unintentionally. A skilled adversary uses these techniques when appropriate to produce the desired outcome. Manipulation techniques vary from the overt, such as pretending to be a supervisor to a help desk, to the subtle, such as making the target feel comfortable with the adversary's speech and thought patterns.","",Medium,Medium,"","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","","","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attack patterns that manipulate human behavior can result in a wide variety of consequences and potentially affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent successful social engineering attacks.::","","","","",
417,"Influence Perception",Standard,Stable,"The adversary uses social engineering to exploit the target's perception of the relationship between the adversary and themselves. This goal is to persuade the target to unknowingly perform an action or divulge information that is advantageous to the adversary.","",High,Low,"::NATURE:ChildOf:CAPEC ID:416::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","::There are no necessary resources required for this attack.::","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that influence the perception of the target can result in a wide variety of consequences and negatively affect potentially the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","","","","",
418,"Influence Perception of Reciprocation",Detailed,Draft,"An adversary uses a social engineering techniques to produce a sense of obligation in the target to perform a certain action or concede some sensitive or key piece of information. Obligation has to do with actions one feels they need to take due to some sort of social, legal, or moral requirement, duty, contract, or promise. There are various techniques for fostering a sense of obligation to reciprocate or concede during ordinary modes of communication. One method is to compliment the target, and follow up the compliment with a question. If performed correctly the target may volunteer a key piece of information, sometimes involuntarily.","",Medium,Medium,"::NATURE:ChildOf:CAPEC ID:417::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","::None: No specialized resources are required to execute this type of attack.::","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that influence the perception of the target can result in a wide variety of consequences and negatively affect potentially the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","::An adversary develops a relationship with the target to foster a feeling of obligation in them to perform a certain action or concede some information. A perception of obligation/concession means that the target feels they need to behave in some way or perform some sort of action due to being morally or legally bound to do so.::","","","",
42,"MIME Conversion",Detailed,Draft,"An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.","",High,High,"::NATURE:ChildOf:CAPEC ID:100::","::STEP:1:PHASE:Explore:DESCRIPTION:[Identify target mail server] The adversary identifies a target mail server that they wish to attack.:TECHNIQUE:Use Nmap on a system to identify a mail server service.::STEP:2:PHASE:Explore:DESCRIPTION:[Determine viability of attack] Determine whether the mail server is unpatched and is potentially vulnerable to one of the known MIME conversion buffer overflows (e.g. Sendmail 8.8.3 and 8.8.4).::STEP:3:PHASE:Experiment:DESCRIPTION:[Find injection vector] Identify places in the system where vulnerable MIME conversion routines may be used.::STEP:4:PHASE:Experiment:DESCRIPTION:[Craft overflow content] The adversary crafts e-mail messages with special headers that will cause a buffer overflow for the vulnerable MIME conversion routine. The intent of this attack is to leverage the overflow for execution of arbitrary code and gain access to the mail server machine, so the adversary will craft an email that not only overflows the targeted buffer but does so in such a way that the overwritten return address is replaced with one of the adversary's choosing.:TECHNIQUE:Create malicious shellcode that will execute when the program execution is returned to it.:TECHNIQUE:Use a NOP-sled in the overflow content to more easily slide into the malicious code. This is done so that the exact return address need not be correct, only in the range of all of the NOPs::STEP:4:PHASE:Exploit:DESCRIPTION:[Overflow the buffer] Send e-mail messages to the target system with specially crafted headers that trigger the buffer overflow and execute the shell code.::","::The target system uses a mail server.::Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system.::","::SKILL:It may be trivial to cause a DoS via this attack pattern:LEVEL:Low::SKILL:Causing arbitrary code to execute on the target system.:LEVEL:High::","","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Run Arbitrary Code::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::SCOPE:Availability:TECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::","::Stay up to date with third party vendor patches::Disable the 7 to 8 bit conversion. This can be done by removing the F=9 flag from all Mailer specifications in the sendmail.cf file. For example, a sendmail.cf file with these changes applied should look similar to (depending on your system and configuration): Mlocal, P=/usr/libexec/mail.local, F=lsDFMAw5:/|@qrmn, S=10/30, R=20/40,T=DNS/RFC822/X-Unix,A=mail -d $u Mprog, P=/bin/sh, F=lsDFMoqeu, S=10/30, R=20/40,D=$z:/,T=X-Unix,A=sh -c $u This can be achieved for the Mlocal and Mprog Mailers by modifying the .mc file to include the following lines: define(`LOCAL_MAILER_FLAGS',ifdef(`LOCAL_MAILER_FLAGS',`translit(LOCAL_MAILER_FLAGS, `9')',`rmn')) define(`LOCAL_SHELL_FLAGS',ifdef(`LOCAL_SHELL_FLAGS',`translit(LOCAL_SHELL_FLAGS, `9')',`eu')) and then rebuilding the sendmail.cf file using m4(1). From Exploiting Software, please see reference below.::Use the sendmail restricted shell program (smrsh)::Use mail.local::","::A MIME conversion buffer overflow exists in Sendmail versions 8.8.3 and 8.8.4. Sendmail versions 8.8.3 and 8.8.4 are vulnerable to a buffer overflow in the MIME handling code. By sending a message with specially-crafted headers to the server, a remote attacker can overflow a buffer and execute arbitrary commands on the system with root privileges. Sendmail performs a 7 bit to 8 bit conversion on email messages. This vulnerability is due to the fact that insufficient bounds checking was performed while performing these conversions. This gave attacker an opportunity to overwrite the internal stack of sendmail while it is executing with root privileges. An attacker first probes the target system to figure out what mail server is used on the system and what version. An attacker could then test out the exploit at their leisure on their own machine running the same version of the mail server before using it in the wild.See also: CVE-1999-0047::","::120::119::74::20::","","",
420,"Influence Perception of Scarcity",Detailed,Stable,"The adversary leverages a perception of scarcity to persuade the target to perform an action or divulge information that is advantageous to the adversary. By conveying a perception of scarcity, or a situation of limited supply, the adversary aims to create a sense of urgency in the context of a target's decision-making process.","",High,Low,"::NATURE:ChildOf:CAPEC ID:417::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","::None: No specialized resources are required to execute this type of attack.::","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","::An adversary sends an email to a target about a limited-time opportunity to claim a considerable monetary reward. The email contains a link to a site which the adversary says is only active for a short time and to the first person to claim it. By convincing the user of the scarcity of the monetary reward, the adversary aims to persuade them to click on the malicious link in the email.::","","","",
421,"Influence Perception of Authority",Detailed,Stable,"An adversary uses a social engineering technique to convey a sense of authority that motivates the target to reveal specific information or take specific action. There are various techniques for producing a sense of authority during ordinary modes of communication. One common method is impersonation. By impersonating someone with a position of power within an organization, an adversary may motivate the target individual to reveal some piece of sensitive information or perform an action that benefits the adversary.","",High,Low,"::NATURE:ChildOf:CAPEC ID:417::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","::None: No specialized resources are required to execute this type of attack.::","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","::The adversary calls the target and announces that they are the head of IT at the target's company. The adversary goes on to say that there has been a technical issue and they need the target's login credentials for their account. By convincing the target of their authority, the adversary hopes the target will reveal the sensitive information.::","","","",
422,"Influence Perception of Commitment and Consistency",Detailed,Stable,"An adversary uses social engineering to convince the target to do minor tasks as opposed to larger actions. After complying with a request, individuals are more likely to agree to subsequent requests that are similar in type and required effort.","",High,Low,"::NATURE:ChildOf:CAPEC ID:417::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","::None: No specialized resources are required to execute this type of attack.::","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that leverage the principle of scarcity can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::Individuals should avoid complying with suspicious requests.::","","","","",
423,"Influence Perception of Liking",Detailed,Stable,"The adversary influences the target's actions by building a relationship where the target has a liking to the adversary. People are more likely to be influenced by people of whom they are fond, so the adversary attempts to ingratiate themself with the target via actions, appearance, or a combination thereof.","",Medium,Low,"::NATURE:ChildOf:CAPEC ID:417::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the types of things that the target likes.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that leverage the principle of liking can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","","","","",
424,"Influence Perception of Consensus or Social Proof",Detailed,Draft,"The adversary influences the target's actions by leveraging the inherent human nature to assume behavior of others is appropriate. In situations of uncertainty, people tend to behave in ways they see others behaving. The adversary convinces the target of adopting behavior or actions that is advantageous to the adversary.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:417::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that leverage the principle of liking can lead to the target performing an action that results in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","","","","",
425,"Target Influence via Framing",Standard,Draft,"An adversary uses framing techniques to contextualize a conversation so that the target is more likely to be influenced by the adversary's point of view. Framing is information and experiences in life that alter the way we react to decisions we must make. This type of persuasive technique exploits the way people are conditioned to perceive data and its significance, while avoiding negative or avoidance responses from the target. Rather than a specific technique framing is a methodology of conversation that slowly encourages the target to adopt to the adversary's perspective. One technique of framing is to avoid the use of the word No and to contextualize responses in a manner that is positive. When performed skillfully the target is much more likely to volunteer information or perform actions favorable to the adversary.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:416::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Other:NOTE:Successful attacks that influence the target via framing into performing an action or sharing sensitive information can result in a variety of consequences that negatively affect the confidentiality of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::Avoid sharing unnecessary information during interactions beyond what is absolutely required for effective communication.::","","","","",
426,"Influence via Incentives",Standard,Stable,"The adversary incites a behavior from the target by manipulating something of influence. This is commonly associated with financial, social, or ideological incentivization. Examples include monetary fraud, peer pressure, and preying on the target's morals or ethics. The most effective incentive against one target might not be as effective against another, therefore the adversary must gather information about the target's vulnerability to particular incentives.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:416::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.The adversary must have knowledge of the incentives that would influence the actions of the specific target.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that successfully incentivize the target into performing an action beneficial to the adversary can result in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","","","","",
427,"Influence via Psychological Principles",Standard,Draft,"The adversary shapes the target's actions or behavior by focusing on the ways human interact and learn, leveraging such elements as cognitive and social psychology. In a variety of ways, a target can be influenced to behave or perform an action through capitalizing on what scholarship and research has learned about how and why humans react to specific scenarios and cues.","",Low,Low,"::NATURE:ChildOf:CAPEC ID:416::","","::The adversary must have the means and knowledge of how to communicate with the target in some manner.::","::SKILL:The adversary requires strong inter-personal and communication skills.:LEVEL:Low::","","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Other:NOTE:Attacks that successfully influence the target into performing an action via psychological principles can result in a variety of consequences that negatively affect the confidentiality, availability, and/or integrity of an application or system.::","::An organization should provide regular, robust cybersecurity training to its employees to prevent social engineering attacks.::","","","","",
428,"Influence via Modes of Thinking",Detailed,Draft,"The adversary tailors their communication to the language and thought patterns of the target thereby weakening barriers or reluctance to communication. This method is a way of building rapport with a target by matching their speech patterns and the primary ways or dominant senses with which they make abstractions. This technique can be used to make the target more receptive to sharing information because the adversary has adapted their communication forms to match those of the target. When skillfully employed, the target is likely to be unaware that they are being manipulated.","",,Low,"::NATURE:ChildOf:CAPEC ID:427::","","","","","","","","","","","",
429,"Target Influence via Eye Cues",Detailed,Draft,"The adversary gains information via non-verbal means from the target through eye movements.","",,Low,"::NATURE:ChildOf:CAPEC ID:427::","","","","","","","","","","","",
43,"Exploiting Multiple Input Interpretation Layers",Detailed,Draft,"An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a layer of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:267::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine application/system inputs where bypassing input validation is desired] The attacker first needs to determine all of the application's/system's inputs where input validation is being performed and where they want to bypass it.:TECHNIQUE:While using an application/system, the attacker discovers an input where validation is stopping them from performing some malicious or unauthorized actions.::STEP:2:PHASE:Experiment:DESCRIPTION:[Determine which character encodings are accepted by the application/system] The attacker then needs to provide various character encodings to the application/system and determine which ones are accepted. The attacker will need to observe the application's/system's response to the encoded data to determine whether the data was interpreted properly.:TECHNIQUE:Determine which escape characters are accepted by the application/system. A common escape character is the backslash character, '':TECHNIQUE:Determine whether URL encoding is accepted by the application/system.:TECHNIQUE:Determine whether UTF-8 encoding is accepted by the application/system.:TECHNIQUE:Determine whether UTF-16 encoding is accepted by the application/system.:TECHNIQUE:Determine if any other encodings are accepted by the application/system.::STEP:3:PHASE:Experiment:DESCRIPTION:[Combine multiple encodings accepted by the application.] The attacker now combines encodings accepted by the application. The attacker may combine different encodings or apply the same encoding multiple times.:TECHNIQUE:Combine same encoding multiple times and observe its effects. For example, if special characters are encoded with a leading backslash, then the following encoding may be accepted by the application/system: .. With two parsing layers, this may get converted to . after the first parsing layer, and then, to . after the second. If the input validation layer is between the two parsing layers, then .. might pass a test for .. but still get converted to .. afterwards. This may enable directory traversal attacks.:TECHNIQUE:Combine multiple encodings and observe the effects. For example, the attacker might encode . as ., and then, encode . as &#92;&#46;, and then, encode that using URL encoding to %26%2392%3B%26%2346%3B::STEP:4:PHASE:Exploit:DESCRIPTION:[Leverage ability to bypass input validation] Attacker leverages their ability to bypass input validation to gain unauthorized access to system. There are many attacks possible, and a few examples are mentioned here.:TECHNIQUE:Gain access to sensitive files.:TECHNIQUE:Perform command injection.:TECHNIQUE:Perform SQL injection.:TECHNIQUE:Perform XSS attacks.::","::User input is used to construct a command to be executed on the target system or as part of the file name.::Multiple parser passes are performed on the data supplied by the user.::","::SKILL:Knowledge of various escaping schemes, such as URL escape encoding and XML escape characters.:LEVEL:Medium::","","::Control characters are being detected by the filters repeatedly.::","::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::","::An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.::Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.::Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system.::","::The backslash character provides a good example of the multiple-parser issue. A backslash is used to escape characters in strings, but is also used to delimit directories on the NT file system. When performing a command injection that includes NT paths, there is usually a need to double escape the backslash. In some cases, a quadruple escape is necessary. Original String: C:winntsystem32cmd.exe /c <parsing layer> Interim String: C:winntsystem32cmd.exe /c <parsing layer> Final String: C:winntsystem32cmd.exe /c This diagram shows each successive layer of parsing translating the backslash character. A double backslash becomes a single as it is parsed. By using quadruple backslashes, the attacker is able to control the result in the final string. [REF-1]::","::179::181::184::183::77::78::74::20::697::707::","","",
433,"Target Influence via The Human Buffer Overflow",Detailed,Draft,"An attacker utilizes a technique to insinuate commands to the subconscious mind of the target via communication patterns. The human buffer overflow methodology does not rely on over-stimulating the mind of the target, but rather embedding messages within communication that the mind of the listener assembles at a subconscious level. The human buffer-overflow method is similar to subconscious programming to the extent that messages are embedded within the message.","",,Low,"::NATURE:ChildOf:CAPEC ID:427::","","","","","","","","","","","",
434,"Target Influence via Interview and Interrogation",Detailed,Draft,"","",,Low,"::NATURE:ChildOf:CAPEC ID:427::","","","","","","","","","","","",
435,"Target Influence via Instant Rapport",Detailed,Draft,"","",,Low,"::NATURE:ChildOf:CAPEC ID:427::","","","","","","","","","","","",
438,"Modification During Manufacture",Meta,Draft,"An attacker modifies a technology, product, or component during a stage in its manufacture for the purpose of carrying out an attack against some entity involved in the supply chain lifecycle. There are an almost limitless number of ways an attacker can modify a technology when they are involved in its manufacture, as the attacker has potential inroads to the software composition, hardware design and assembly, firmware, or basic design mechanics. Additionally, manufacturing of key components is often outsourced with the final product assembled by the primary manufacturer. The greatest risk, however, is deliberate manipulation of design specifications to produce malicious hardware or devices. There are billions of transistors in a single integrated circuit and studies have shown that fewer than 10 transistors are required to create malicious functionality.","",,,"","","","","","","","","","","TAXONOMY NAME:ATTACK:ENTRY ID:1195:ENTRY NAME:Supply Chain Compromise::","",
439,"Manipulation During Distribution",Meta,Draft,"An attacker undermines the integrity of a product, software, or technology at some stage of the distribution channel. The core threat of modification or manipulation during distribution arise from the many stages of distribution, as a product may traverse multiple suppliers and integrators as the final asset is delivered. Components and services provided from a manufacturer to a supplier may be tampered with during integration or packaging.","",,,"","","","","","","","","::A malicious OEM provider, or OEM provider employee or contractor, may install software, or modify existing code, during distribution.::External contractors involved in the packaging or testing of products or components may install software, or modify existing code, during distribution.::","::1269::","TAXONOMY NAME:ATTACK:ENTRY ID:1195:ENTRY NAME:Supply Chain Compromise::","",
44,"Overflow Binary Resource File",Detailed,Draft,"An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the adversary access to the execution stack and execute arbitrary code in the target process.","",High,Very High,"::NATURE:ChildOf:CAPEC ID:100::NATURE:ChildOf:CAPEC ID:23::","::STEP:1:PHASE:Explore:DESCRIPTION:[Identify target software] The adversary identifies software that uses external binary files in some way. This could be a file upload, downloading a file from a shared location, or other means.::STEP:2:PHASE:Experiment:DESCRIPTION:[Find injection vector] The adversary creates a malicious binary file by altering the header to make the file seem shorter than it is. Additional bytes are added to the end of the file to be placed in the overflowed location. The adversary then deploys the file to the software to determine if a buffer overflow was successful.::STEP:3:PHASE:Experiment:DESCRIPTION:[Craft overflow content] Once the adversary has determined that this attack is viable, they will specially craft the binary file in a way that achieves the desired behavior. If the source code is available, the adversary can carefully craft the malicious file so that the return address is overwritten to an intended value. If the source code is not available, the adversary will iteratively alter the file in order to overwrite the return address correctly.:TECHNIQUE:Create malicious shellcode that will execute when the program execution is returned to it.:TECHNIQUE:Use a NOP-sled in the overflow content to more easily slide into the malicious code. This is done so that the exact return address need not be correct, only in the range of all of the NOPs::STEP:4:PHASE:Exploit:DESCRIPTION:[Overflow the buffer] Once the adversary has constructed a file that will effectively overflow the targeted software in the intended way. The file is deployed to the software, either by serving it directly to the software or placing it in a shared location for a victim to load into the software.::","::Target software processes binary resource files.::Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file.::","::SKILL:To modify file, deceive client into downloading, locate and exploit remote stack or heap vulnerability:LEVEL:Medium::","","","::SCOPE:Availability:TECHNICAL IMPACT:Unreliable Execution::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Run Arbitrary Code::","::Perform appropriate bounds checking on all buffers.::Design: Enforce principle of least privilege::Design: Static code analysis::Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes::Implementation: Keep software patched to ensure that known vulnerabilities are not available for adversaries to target on host.::","::Binary files like music and video files are appended with additional data to cause buffer overflow on target systems. Because these files may be filled with otherwise popular content, the adversary has an excellent vector for wide distribution. There have been numerous cases, for example of malicious screen savers for sports teams that are distributed on the event of the team winning a championship.::","::120::119::697::","","",
440,"Hardware Integrity Attack",Meta,Stable,"An adversary exploits a weakness in the system maintenance process and causes a change to be made to a technology, product, component, or sub-component or a new one installed during its deployed use at the victim location for the purpose of carrying out an attack.","",Low,High,"","","::Influence over the deployed system at a victim location.::","","","","::SCOPE:Integrity:TECHNICAL IMPACT:Execute Unauthorized Commands::","","","","TAXONOMY NAME:ATTACK:ENTRY ID:1195.003:ENTRY NAME:Supply Chain Compromise: Compromise Hardware Supply Chain::::TAXONOMY NAME:ATTACK:ENTRY ID:1200:ENTRY NAME:Hardware Additions::","",
441,"Malicious Logic Insertion",Meta,Stable,"An adversary installs or adds malicious logic (also known as malware) into a seemingly benign component of a fielded system. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. With the proliferation of mass digital storage and inexpensive multimedia devices, Bluetooth and 802.11 support, new attack vectors for spreading malware are emerging for things we once thought of as innocuous greeting cards, picture frames, or digital projectors. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems and their components that are still under development and part of the supply chain.","",Medium,High,"","","::Access to the component currently deployed at a victim location.::","","","","::SCOPE:Authorization:TECHNICAL IMPACT:Execute Unauthorized Commands::","","","::284::","","",
442,"Infected Software",Standard,Stable,"An adversary adds malicious logic, often in the form of a computer virus, to otherwise benign software. This logic is often hidden from the user of the software and works behind the scenes to achieve negative impacts. Many times, the malicious logic is inserted into empty space between legitimate code, and is then called when the software is executed. This pattern of attack focuses on software already fielded and used in operation as opposed to software that is still under development and part of the supply chain.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:441::","","::Access to the software currently deployed at a victim location. This access is often obtained by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have.::","","","","::SCOPE:Authorization:TECHNICAL IMPACT:Execute Unauthorized Commands::","::Leverage anti-virus products to detect and quarantine software with known virus.::","","::506::","TAXONOMY NAME:ATTACK:ENTRY ID:1195.001:ENTRY NAME:Supply Chain Compromise: Compromise Software Dependencies and Development Tools::::TAXONOMY NAME:ATTACK:ENTRY ID:1195.002:ENTRY NAME:Supply Chain Compromise: Compromise Software Supply Chain::","",
443,"Malicious Logic Inserted Into Product by Authorized Developer",Detailed,Stable,"An adversary uses their privileged position within an authorized development organization to inject malicious logic into a codebase or product.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:444::","","::Access to the product during the initial or continuous development.::","","","","::SCOPE:Authorization:TECHNICAL IMPACT:Execute Unauthorized Commands::","::Assess software and hardware during development and prior to deployment to ensure that it functions as intended and without any malicious functionality. This includes both initial development, as well as updates propagated to the product after deployment.::","::In January 2022 the author of popular JavaScript packages Faker and colors, used for generating mock data and including colored text within NodeJS consoles respectively, introduced malicious code that resulted in a Denial of Service (DoS) via an infinite loop. When applications that leveraged these packages updated to the malicious version, their applications executed the infinite loop and output gibberish ASCI characters endlessly. This resulted in the application being unusable until a stable version of the package was obtained. [REF-705]::During initial development, an authorized hardware developer implants a malicious microcontroller within an Internet of Things (IOT) device and programs the microcontroller to communicate with the vulnerable device. Each time the device initializes, the malicious microcontroller's code is executed, which ultimately provides the adversary with backdoor access to the vulnerable device. This can further allow the adversary to sniff network traffic, exfiltrate date, execute unauthorized commands, and/or pivot to other vulnerable devices.::","","TAXONOMY NAME:ATTACK:ENTRY ID:1195.002:ENTRY NAME:Supply Chain Compromise: Compromise Software Supply Chain::::TAXONOMY NAME:ATTACK:ENTRY ID:1195.003:ENTRY NAME:Supply Chain Compromise: Compromise Hardware Supply Chain::","",
444,"Development Alteration",Standard,Stable,"An adversary modifies a technology, product, or component during its development to acheive a negative impact once the system is deployed. The goal of the adversary is to modify the system in such a way that the negative impact can be leveraged when the system is later deployed. Development alteration attacks may include attacks that insert malicious logic into the system's software, modify or replace hardware components, and other attacks which negatively impact the system during development. These attacks generally require insider access to modify source code or to tamper with hardware components. The product is then delivered to the user where the negative impact can be leveraged at a later time.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:438::","","::Access to the system during the development phase to alter and/or modify software and hardware components. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have.::","","","","::SCOPE:Authorization:TECHNICAL IMPACT:Execute Unauthorized Commands::SCOPE:Availability:TECHNICAL IMPACT:Unreliable Execution::SCOPE:Integrity:TECHNICAL IMPACT:Alter Execution Logic::","::Assess software and software components during development and prior to deployment to ensure that they function as intended and without any malicious functionality.::","","","","",
445,"Malicious Logic Insertion into Product Software via Configuration Management Manipulation",Detailed,Stable,"An adversary exploits a configuration management system so that malicious logic is inserted into a software products build, update or deployed environment. If an adversary can control the elements included in a product's configuration management for build they can potentially replace, modify or insert code files containing malicious logic. If an adversary can control elements of a product's ongoing operational configuration management baseline they can potentially force clients receiving updates from the system to install insecure software when receiving updates from the server.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:444::","","::Access to the configuration management system during deployment or currently deployed at a victim location. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have.::","","","","::SCOPE:Authorization:TECHNICAL IMPACT:Execute Unauthorized Commands::","::Assess software during development and prior to deployment to ensure that it functions as intended and without any malicious functionality.::Leverage anti-virus products to detect and quarantine software with known virus.::","::In 2016, the policy-based configuration management system Chef was shown to be vulnerable to remote code execution attacks based on its Chef Manage add-on improperly deserializing user-driven cookie data. This allowed unauthenticated users the ability to craft cookie data that executed arbitrary code with the web server's privileges. [REF-706]::","","TAXONOMY NAME:ATTACK:ENTRY ID:1195.001:ENTRY NAME:Supply Chain Compromise: Compromise Software Dependencies and Development Tools::","",
446,"Malicious Logic Insertion into Product via Inclusion of Third-Party Component",Detailed,Stable,"An adversary conducts supply chain attacks by the inclusion of insecure third-party components into a technology, product, or code-base, possibly packaging a malicious driver or component along with the product before shipping it to the consumer or acquirer.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:444::","","::Access to the product during the initial or continuous development. This access is often obtained via insider access to include the third-party component after deployment.::","","","","::SCOPE:Authorization:TECHNICAL IMPACT:Execute Unauthorized Commands::","::Assess software and hardware during development and prior to deployment to ensure that it functions as intended and without any malicious functionality. This includes both initial development, as well as updates propagated to the product after deployment.::Don't assume popular third-party components are free from malware or vulnerabilities. For software, assess for malicious functionality via update/commit reviews or automated static/dynamic analysis prior to including the component within the application and deploying in a production environment.::","::From mid-2014 to early 2015, Lenovo computers were shipped with the Superfish Visual Search software that ultimately functioned as adware on the system. The Visual Search installation included a self-signed root HTTPS certificate that was able to intercept encrypted traffic for any site visited by the user. Of more concern was the fact that the certificate's corresponding private key was the same for every Lenovo machine. Once the private key was discovered [REF-709], an adversary could then conduct an Adversary-in-the-Middle (AitM) attack that would go undetected by machines that had this certificate installed on it. Adversaries could then masquerade as legitimate entities such as financial institutions, popular corporations, or other secure destinations on the Internet. [REF-708]::In 2018 it was discovered that Chinese spies infiltrated several U.S. government agencies and corporations as far back as 2015 by including a malicious microchip within the motherboard of servers sold by Elemental Technologies to the victims. Although these servers were assembled via a U.S. based company, the motherboards used within the servers were manufactured and maliciously altered via a Chinese subcontractor. Elemental Technologies then sold these malicious servers to various U.S. government agencies, such as the DoD and CIA, and corporations like Amazon and Apple. The malicious microchip provided adversaries with a backdoor into the system, which further allowed them to access any network that contained the exploited systems, to exfiltrate data to be sent to the Chinese government.[REF-713]::","","TAXONOMY NAME:ATTACK:ENTRY ID:1195:ENTRY NAME:Supply Chain Compromise::","",
447,"Design Alteration",Standard,Stable,"An adversary modifies the design of a technology, product, or component to acheive a negative impact once the system is deployed. In this type of attack, the goal of the adversary is to modify the design of the system, prior to development starting, in such a way that the negative impact can be leveraged when the system is later deployed. Design alteration attacks differ from development alteration attacks in that design alteration attacks take place prior to development and which then may or may not be developed by the adverary. Design alteration attacks include modifying system designs to degrade system performance, cause unexpected states or errors, and general design changes that may lead to additional vulnerabilities. These attacks generally require insider access to modify design documents, but they may also be spoofed via web communications. The product is then developed and delivered to the user where the negative impact can be leveraged at a later time.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:438::","","::Access to system design documentation prior to the development phase. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have.::Ability to forge web communications to deliver modified design documentation.::","","","","::SCOPE:Authorization:TECHNICAL IMPACT:Execute Unauthorized Commands::SCOPE:Availability:TECHNICAL IMPACT:Unreliable Execution::SCOPE:Integrity:TECHNICAL IMPACT:Alter Execution Logic::","::Assess design documentation prior to development to ensure that they function as intended and without any malicious functionality.::Ensure that design documentation is saved in a secure location and has proper access controls set in place to avoid unnecessary modification.::","","","","",