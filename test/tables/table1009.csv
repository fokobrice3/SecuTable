"Name","Status","Description","References","Phase","Votes","Comments"
CVE-2021-37616,Candidate,"Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. A null pointer dereference was found in Exiv2 versions v0.27.4 and earlier. The null pointer dereference is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the interpreted (translated) data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p t` or `-P t`). The bug is fixed in version v0.27.5.","CONFIRM:https://github.com/Exiv2/exiv2/security/advisories/GHSA-54f7-vvj7-545w   |   URL:https://github.com/Exiv2/exiv2/security/advisories/GHSA-54f7-vvj7-545w   |   FEDORA:FEDORA-2021-399f869889   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMDT4PJB7P43WSOM3TRQIY3J33BAFVVE/   |   FEDORA:FEDORA-2021-cbaef8e2d5   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UYGDELIFFJWKUU7SO3QATCIXCZJERGAC/   |   MISC:https://github.com/Exiv2/exiv2/pull/1758   |   URL:https://github.com/Exiv2/exiv2/pull/1758",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37617,Candidate,"The Nextcloud Desktop Client is a tool to synchronize files from Nextcloud Server with a computer. The Nextcloud Desktop Client invokes its uninstaller script when being installed to make sure there are no remnants of previous installations. In versions 3.0.3 through 3.2.4, the Client searches the `Uninstall.exe` file in a folder that can be written by regular users. This could lead to a case where a malicious user creates a malicious `Uninstall.exe`, which would be executed with administrative privileges on the Nextcloud Desktop Client installation. This issue is fixed in Nextcloud Desktop Client version 3.3.0. As a workaround, do not allow untrusted users to create content in the `C:\` system folder and verify that there is no malicious `C:\Uninstall.exe` file on the system.","CONFIRM:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-6q2w-v879-q24v   |   URL:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-6q2w-v879-q24v   |   MISC:https://github.com/nextcloud/desktop/pull/3497   |   URL:https://github.com/nextcloud/desktop/pull/3497   |   MISC:https://hackerone.com/reports/1240749   |   URL:https://hackerone.com/reports/1240749",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37618,Candidate,"Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the image ICC profile, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p C`). The bug is fixed in version v0.27.5.","CONFIRM:https://github.com/Exiv2/exiv2/security/advisories/GHSA-583f-w9pm-99r2   |   URL:https://github.com/Exiv2/exiv2/security/advisories/GHSA-583f-w9pm-99r2   |   FEDORA:FEDORA-2021-399f869889   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMDT4PJB7P43WSOM3TRQIY3J33BAFVVE/   |   FEDORA:FEDORA-2021-cbaef8e2d5   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UYGDELIFFJWKUU7SO3QATCIXCZJERGAC/   |   MISC:https://github.com/Exiv2/exiv2/pull/1759   |   URL:https://github.com/Exiv2/exiv2/pull/1759",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37619,Candidate,"Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service by crashing Exiv2, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when writing the metadata, which is a less frequently used Exiv2 operation than reading the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as insert. The bug is fixed in version v0.27.5.","CONFIRM:https://github.com/Exiv2/exiv2/security/advisories/GHSA-mxw9-qx4c-6m8v   |   URL:https://github.com/Exiv2/exiv2/security/advisories/GHSA-mxw9-qx4c-6m8v   |   FEDORA:FEDORA-2021-399f869889   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMDT4PJB7P43WSOM3TRQIY3J33BAFVVE/   |   FEDORA:FEDORA-2021-cbaef8e2d5   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UYGDELIFFJWKUU7SO3QATCIXCZJERGAC/   |   MISC:https://github.com/Exiv2/exiv2/pull/1752   |   URL:https://github.com/Exiv2/exiv2/pull/1752",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3762,Candidate,"A directory traversal vulnerability was found in the ClairCore engine of Clair. An attacker can exploit this by supplying a crafted container image which, when scanned by Clair, allows for arbitrary file write on the filesystem, potentially allowing for remote code execution.","MISC:https://bugzilla.redhat.com/show_bug.cgi?id=2000795   |   URL:https://bugzilla.redhat.com/show_bug.cgi?id=2000795   |   MISC:https://github.com/quay/clair/pull/1379   |   URL:https://github.com/quay/clair/pull/1379   |   MISC:https://github.com/quay/clair/pull/1380   |   URL:https://github.com/quay/clair/pull/1380   |   MISC:https://github.com/quay/claircore/commit/691f2023a1720a0579e688b69a2f4bfe1f4b7821   |   URL:https://github.com/quay/claircore/commit/691f2023a1720a0579e688b69a2f4bfe1f4b7821   |   MISC:https://github.com/quay/claircore/pull/478   |   URL:https://github.com/quay/claircore/pull/478   |   MISC:https://vulmon.com/exploitdetails?qidtp=maillist_oss_security&qid=d19fce9ede06e13dfb5630ece7f14f83   |   URL:https://vulmon.com/exploitdetails?qidtp=maillist_oss_security&qid=d19fce9ede06e13dfb5630ece7f14f83",Assigned (20210903),"None (candidate not yet proposed)",""
CVE-2021-37620,Candidate,"Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 versions v0.27.4 and earlier. The out-of-bounds read is triggered when Exiv2 is used to read the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.5.","CONFIRM:https://github.com/Exiv2/exiv2/security/advisories/GHSA-v5g7-46xf-h728   |   URL:https://github.com/Exiv2/exiv2/security/advisories/GHSA-v5g7-46xf-h728   |   FEDORA:FEDORA-2021-399f869889   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMDT4PJB7P43WSOM3TRQIY3J33BAFVVE/   |   FEDORA:FEDORA-2021-cbaef8e2d5   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UYGDELIFFJWKUU7SO3QATCIXCZJERGAC/   |   MISC:https://github.com/Exiv2/exiv2/pull/1769   |   URL:https://github.com/Exiv2/exiv2/pull/1769   |   MLIST:[debian-lts-announce] 20230110 [SECURITY] [DLA 3265-1] exiv2 security update   |   URL:https://lists.debian.org/debian-lts-announce/2023/01/msg00004.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37621,Candidate,"Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to print the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when printing the image ICC profile, which is a less frequently used Exiv2 operation that requires an extra command line option (`-p C`). The bug is fixed in version v0.27.5.","CONFIRM:https://github.com/Exiv2/exiv2/security/advisories/GHSA-m479-7frc-gqqg   |   URL:https://github.com/Exiv2/exiv2/security/advisories/GHSA-m479-7frc-gqqg   |   FEDORA:FEDORA-2021-399f869889   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMDT4PJB7P43WSOM3TRQIY3J33BAFVVE/   |   FEDORA:FEDORA-2021-cbaef8e2d5   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UYGDELIFFJWKUU7SO3QATCIXCZJERGAC/   |   MISC:https://github.com/Exiv2/exiv2/pull/1778   |   URL:https://github.com/Exiv2/exiv2/pull/1778   |   MLIST:[debian-lts-announce] 20230110 [SECURITY] [DLA 3265-1] exiv2 security update   |   URL:https://lists.debian.org/debian-lts-announce/2023/01/msg00004.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37622,Candidate,"Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when deleting the IPTC data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-d I rm`). The bug is fixed in version v0.27.5.","CONFIRM:https://github.com/Exiv2/exiv2/security/advisories/GHSA-9jh3-fcc3-g6hv   |   URL:https://github.com/Exiv2/exiv2/security/advisories/GHSA-9jh3-fcc3-g6hv   |   FEDORA:FEDORA-2021-399f869889   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMDT4PJB7P43WSOM3TRQIY3J33BAFVVE/   |   FEDORA:FEDORA-2021-cbaef8e2d5   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UYGDELIFFJWKUU7SO3QATCIXCZJERGAC/   |   MISC:https://github.com/Exiv2/exiv2/pull/1788   |   URL:https://github.com/Exiv2/exiv2/pull/1788   |   MLIST:[debian-lts-announce] 20230110 [SECURITY] [DLA 3265-1] exiv2 security update   |   URL:https://lists.debian.org/debian-lts-announce/2023/01/msg00004.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37623,Candidate,"Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An infinite loop was found in Exiv2 versions v0.27.4 and earlier. The infinite loop is triggered when Exiv2 is used to modify the metadata of a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. Note that this bug is only triggered when deleting the IPTC data, which is a less frequently used Exiv2 operation that requires an extra command line option (`-d I rm`). The bug is fixed in version v0.27.5.","CONFIRM:https://github.com/Exiv2/exiv2/security/advisories/GHSA-mvc4-g5pv-4qqq   |   URL:https://github.com/Exiv2/exiv2/security/advisories/GHSA-mvc4-g5pv-4qqq   |   FEDORA:FEDORA-2021-399f869889   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMDT4PJB7P43WSOM3TRQIY3J33BAFVVE/   |   FEDORA:FEDORA-2021-cbaef8e2d5   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UYGDELIFFJWKUU7SO3QATCIXCZJERGAC/   |   MISC:https://github.com/Exiv2/exiv2/pull/1790   |   URL:https://github.com/Exiv2/exiv2/pull/1790",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37624,Candidate,"FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a software implementation that runs on any commodity hardware. Prior to version 1.10.7, FreeSWITCH does not authenticate SIP MESSAGE requests, leading to spam and message spoofing. By default, SIP requests of the type MESSAGE (RFC 3428) are not authenticated in the affected versions of FreeSWITCH. MESSAGE requests are relayed to SIP user agents registered with the FreeSWITCH server without requiring any authentication. Although this behaviour can be changed by setting the `auth-messages` parameter to `true`, it is not the default setting. Abuse of this security issue allows attackers to send SIP MESSAGE messages to any SIP user agent that is registered with the server without requiring authentication. Additionally, since no authentication is required, chat messages can be spoofed to appear to come from trusted entities. Therefore, abuse can lead to spam and enable social engineering, phishing and similar attacks. This issue is patched in version 1.10.7. Maintainers recommend that this SIP message type is authenticated by default so that FreeSWITCH administrators do not need to be explicitly set the `auth-messages` parameter. When following such a recommendation, a new parameter can be introduced to explicitly disable authentication.","CONFIRM:https://github.com/signalwire/freeswitch/security/advisories/GHSA-mjcm-q9h8-9xv3   |   URL:https://github.com/signalwire/freeswitch/security/advisories/GHSA-mjcm-q9h8-9xv3   |   FULLDISC:20211026 [ES2021-07] FreeSWITCH does not authenticate SIP MESSAGE requests, leading to spam and message spoofing   |   URL:http://seclists.org/fulldisclosure/2021/Oct/44   |   MISC:http://packetstormsecurity.com/files/164628/FreeSWITCH-1.10.6-Missing-SIP-MESSAGE-Authentication.html   |   MISC:https://github.com/signalwire/freeswitch/releases/tag/v1.10.7   |   URL:https://github.com/signalwire/freeswitch/releases/tag/v1.10.7   |   MLIST:[oss-security] 20211025 [ES2021-07] FreeSWITCH does not authenticate SIP MESSAGE requests, leading to spam and message spoofing   |   URL:http://www.openwall.com/lists/oss-security/2021/10/25/6",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37625,Candidate,"Skytable is an open source NoSQL database. In versions prior to 0.6.4 an incorrect check of return value of the accept function in the run-loop for a TCP socket/TLS socket/TCP+TLS multi-socket causes an early exit from the run loop that should continue infinitely unless terminated by a local user, effectively causing the whole database server to shut down. This has severe impact and can be used to easily cause DoS attacks without the need to use much bandwidth. The attack vectors include using an incomplete TLS connection for example by not providing the certificate for the connection and using a specially crafted TCP packet that triggers the application layer backoff algorithm.","CONFIRM:https://github.com/skytable/skytable/security/advisories/GHSA-q27r-h25m-hcc7   |   URL:https://github.com/skytable/skytable/security/advisories/GHSA-q27r-h25m-hcc7   |   MISC:https://github.com/skytable/skytable/commit/bb19d024ea1e5e0c9a3d75a9ee58ff03c70c7e5d   |   URL:https://github.com/skytable/skytable/commit/bb19d024ea1e5e0c9a3d75a9ee58ff03c70c7e5d   |   MISC:https://security.skytable.io/ve/s/00002.html   |   URL:https://security.skytable.io/ve/s/00002.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37626,Candidate,"Contao is an open source CMS that allows you to create websites and scalable web applications. In affected versions it is possible to load PHP files by entering insert tags in the Contao back end. Installations are only affected if they have untrusted back end users who have the rights to modify fields that are shown in the front end. Update to Contao 4.4.56, 4.9.18 or 4.11.7 to resolve. If you cannot update then disable the login for untrusted back end users.","CONFIRM:https://github.com/contao/contao/security/advisories/GHSA-r6mv-ppjc-4hgr   |   URL:https://github.com/contao/contao/security/advisories/GHSA-r6mv-ppjc-4hgr   |   MISC:https://contao.org/en/security-advisories/php-file-inclusion-via-insert-tags.html   |   URL:https://contao.org/en/security-advisories/php-file-inclusion-via-insert-tags.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37627,Candidate,"Contao is an open source CMS that allows creation of websites and scalable web applications. In affected versions it is possible to gain privileged rights in the Contao back end. Installations are only affected if they have untrusted back end users who have access to the form generator. All users are advised to update to Contao 4.4.56, 4.9.18 or 4.11.7. As a workaround users may disable the form generator or disable the login for untrusted back end users.","CONFIRM:https://github.com/contao/contao/security/advisories/GHSA-hq5m-mqmx-fw6m   |   URL:https://github.com/contao/contao/security/advisories/GHSA-hq5m-mqmx-fw6m   |   MISC:https://contao.org/en/security-advisories/privilege-escalation-with-the-form-generator.html   |   URL:https://contao.org/en/security-advisories/privilege-escalation-with-the-form-generator.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37628,Candidate,"Nextcloud Richdocuments is an open source collaborative office suite. In affected versions the File Drop features (""Upload Only"" public link shares in Nextcloud) can be bypassed using the Nextcloud Richdocuments app. An attacker was able to read arbitrary files in such a share. It is recommended that the Nextcloud Richdocuments is upgraded to 3.8.4 or 4.2.1. If upgrading is not possible then it is recommended to disable the Richdocuments application.","CONFIRM:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-pxhh-954f-8w7w   |   URL:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-pxhh-954f-8w7w   |   MISC:https://github.com/nextcloud/richdocuments/pull/1664   |   URL:https://github.com/nextcloud/richdocuments/pull/1664   |   MISC:https://hackerone.com/reports/1253403   |   URL:https://hackerone.com/reports/1253403",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37629,Candidate,"Nextcloud Richdocuments is an open source collaborative office suite. In affected versions there is a lack of rate limiting on the Richdocuments OCS endpoint. This may have allowed an attacker to enumerate potentially valid share tokens. It is recommended that the Nextcloud Richdocuments app is upgraded to either 3.8.4 or 4.2.1 to resolve. For users unable to upgrade it is recommended that the Richdocuments application be disabled.","CONFIRM:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-gvvr-h36p-8mjx   |   URL:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-gvvr-h36p-8mjx   |   MISC:https://github.com/nextcloud/richdocuments/pull/1663   |   URL:https://github.com/nextcloud/richdocuments/pull/1663   |   MISC:https://hackerone.com/reports/1258750   |   URL:https://hackerone.com/reports/1258750",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3763,Candidate,"A flaw was found in the Red Hat AMQ Broker management console in version 7.8 where an existing user is able to access some limited information even when the role the user is assigned to should not be allow access to the management console. The main impact is to confidentiality as this flaw means some role bindings are incorrectly checked, some privileged meta information such as queue names and configuration details are disclosed but the impact is limited as not all information is accessible and there is no affect to integrity.","MISC:https://access.redhat.com/security/cve/CVE-2021-3763   |   URL:https://access.redhat.com/security/cve/CVE-2021-3763   |   MISC:https://bugzilla.redhat.com/show_bug.cgi?id=2000654   |   URL:https://bugzilla.redhat.com/show_bug.cgi?id=2000654   |   MISC:https://issues.redhat.com/browse/ENTMQBR-5372   |   URL:https://issues.redhat.com/browse/ENTMQBR-5372",Assigned (20210903),"None (candidate not yet proposed)",""
CVE-2021-37630,Candidate,"Nextcloud Circles is an open source social network built for the nextcloud ecosystem. In affected versions the Nextcloud Circles application allowed any user to join any ""Secret Circle"" without approval by the Circle owner leaking private information. It is recommended that Nextcloud Circles is upgraded to 0.19.15, 0.20.11 or 0.21.4. There are no workarounds for this issue.","CONFIRM:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-56j9-3rj4-wvgm   |   URL:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-56j9-3rj4-wvgm   |   MISC:https://github.com/nextcloud/circles/pull/768   |   URL:https://github.com/nextcloud/circles/pull/768   |   MISC:https://hackerone.com/reports/1257624   |   URL:https://hackerone.com/reports/1257624",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37631,Candidate,"Deck is an open source kanban style organization tool aimed at personal planning and project organization for teams integrated with Nextcloud. In affected versions the Deck application didn't properly check membership of users in a Circle. This allowed other users in the instance to gain access to boards that have been shared with a Circle, even if the user was not a member of the circle. It is recommended that Nextcloud Deck is upgraded to 1.5.1, 1.4.4 or 1.2.9. If you are unable to update it is advised to disable the Deck plugin.","CONFIRM:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-4mxp-j277-82hr   |   URL:https://github.com/nextcloud/security-advisories/security/advisories/GHSA-4mxp-j277-82hr   |   MISC:https://github.com/nextcloud/deck/pull/3217   |   URL:https://github.com/nextcloud/deck/pull/3217   |   MISC:https://hackerone.com/reports/1256021   |   URL:https://hackerone.com/reports/1256021   |   MISC:https://hackerone.com/reports/1280931   |   URL:https://hackerone.com/reports/1280931",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37632,Candidate,"SuperMartijn642's Config Lib is a library used by a number of mods for the game Minecraft. The versions of SuperMartijn642's Config Lib between 1.0.4 and 1.0.8 are affected by a vulnerability and can be exploited on both servers and clients. Using SuperMartijn642's Config Lib, servers will send a packet to clients with the server's config values. In order to read `enum` values from the packet data, `ObjectInputStream#readObject` is used. `ObjectInputStream#readObject` will instantiate a class based on the input data. Since, the packet data is not validated before `ObjectInputStream#readObject` is called, an attacker can instantiate any class by sending a malicious packet. If a suitable class is found, the vulnerability can lead to a number of exploits, including remote code execution. Although the vulnerable packet is typically only send from server to client, it can theoretically also be send from client to server. This means both clients and servers running SuperMartijn642's Config Lib between 1.0.4 and 1.0.8 are vulnerable. The vulnerability has been patched in SuperMartijn642's Config lib 1.0.9. Both, players and server owners, should update to 1.0.9 or higher.","CONFIRM:https://github.com/SuperMartijn642/SuperMartijn642sConfigLib/security/advisories/GHSA-f4r5-w453-2jx6   |   URL:https://github.com/SuperMartijn642/SuperMartijn642sConfigLib/security/advisories/GHSA-f4r5-w453-2jx6",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37633,Candidate,"Discourse is an open source discussion platform. In versions prior to 2.7.8 rendering of d-popover tooltips can be susceptible to XSS attacks. This vulnerability only affects sites which have modified or disabled Discourse's default Content Security Policy. This issue is patched in the latest `stable` 2.7.8 version of Discourse. As a workaround users may ensure that the Content Security Policy is enabled, and has not been modified in a way which would make it more vulnerable to XSS attacks.","CONFIRM:https://github.com/discourse/discourse/security/advisories/GHSA-v3v8-3m5w-pjp9   |   URL:https://github.com/discourse/discourse/security/advisories/GHSA-v3v8-3m5w-pjp9   |   MISC:https://github.com/discourse/discourse/commit/38199424bc840d2ef002cd1e9bffdbb99191eb47   |   URL:https://github.com/discourse/discourse/commit/38199424bc840d2ef002cd1e9bffdbb99191eb47",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37634,Candidate,"Leafkit is a templating language with Swift-inspired syntax. Versions prior to 1.3.0 are susceptible to Cross-site Scripting (XSS) attacks. This affects anyone passing unsanitised data to Leaf's variable tags. Before this fix, Leaf would not escape any strings passed to tags as variables. If an attacker managed to find a variable that was rendered with their unsanitised data, they could inject scripts into a generated Leaf page, which could enable XSS attacks if other mitigations such as a Content Security Policy were not enabled. This has been patched in 1.3.0. As a workaround sanitize any untrusted input before passing it to Leaf and enable a CSP to block inline script and CSS data.","CONFIRM:https://github.com/vapor/leaf-kit/security/advisories/GHSA-rv3x-xq3r-8j9h   |   URL:https://github.com/vapor/leaf-kit/security/advisories/GHSA-rv3x-xq3r-8j9h   |   MISC:https://github.com/vapor/leaf-kit-ghsa-rv3x-xq3r-8j9h/pull/1   |   URL:https://github.com/vapor/leaf-kit-ghsa-rv3x-xq3r-8j9h/pull/1",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37635,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data. The [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_reduce_op.cc#L217-L228) fails to validate that each reduction group does not overflow and that each corresponding index does not point to outside the bounds of the input tensor. We have patched the issue in GitHub commit 87158f43f05f2720a374f3e6d22a7aaa3a33f750. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cgfm-62j4-v4rf   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cgfm-62j4-v4rf   |   MISC:https://github.com/tensorflow/tensorflow/commit/87158f43f05f2720a374f3e6d22a7aaa3a33f750   |   URL:https://github.com/tensorflow/tensorflow/commit/87158f43f05f2720a374f3e6d22a7aaa3a33f750",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37636,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.SparseDenseCwiseDiv` is vulnerable to a division by 0 error. The [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_dense_binary_op_shared.cc#L56) uses a common class for all binary operations but fails to treat the division by 0 case separately. We have patched the issue in GitHub commit d9204be9f49520cdaaeb2541d1dc5187b23f31d9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hp4c-x6r7-6555   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hp4c-x6r7-6555   |   MISC:https://github.com/tensorflow/tensorflow/commit/d9204be9f49520cdaaeb2541d1dc5187b23f31d9   |   URL:https://github.com/tensorflow/tensorflow/commit/d9204be9f49520cdaaeb2541d1dc5187b23f31d9",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37637,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. It is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to `tf.raw_ops.CompressElement`. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/data/compression_utils.cc#L34) was accessing the size of a buffer obtained from the return of a separate function call before validating that said buffer is valid. We have patched the issue in GitHub commit 5dc7f6981fdaf74c8c5be41f393df705841fb7c5. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c9qf-r67m-p7cg   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c9qf-r67m-p7cg   |   MISC:https://github.com/tensorflow/tensorflow/commit/5dc7f6981fdaf74c8c5be41f393df705841fb7c5   |   URL:https://github.com/tensorflow/tensorflow/commit/5dc7f6981fdaf74c8c5be41f393df705841fb7c5",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37638,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. Sending invalid argument for `row_partition_types` of `tf.raw_ops.RaggedTensorToTensor` API results in a null pointer dereference and undefined behavior. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc#L328) accesses the first element of a user supplied list of values without validating that the provided list is not empty. We have patched the issue in GitHub commit 301ae88b331d37a2a16159b65b255f4f9eb39314. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hwr7-8gxx-fj5p   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hwr7-8gxx-fj5p   |   MISC:https://github.com/tensorflow/tensorflow/commit/301ae88b331d37a2a16159b65b255f4f9eb39314   |   URL:https://github.com/tensorflow/tensorflow/commit/301ae88b331d37a2a16159b65b255f4f9eb39314",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37639,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. When restoring tensors via raw APIs, if the tensor name is not provided, TensorFlow can be tricked into dereferencing a null pointer. Alternatively, attackers can read memory outside the bounds of heap allocated data by providing some tensor names but not enough for a successful restoration. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/save_restore_tensor.cc#L158-L159) retrieves the tensor list corresponding to the `tensor_name` user controlled input and immediately retrieves the tensor at the restoration index (controlled via `preferred_shard` argument). This occurs without validating that the provided list has enough values. If the list is empty this results in dereferencing a null pointer (undefined behavior). If, however, the list has some elements, if the restoration index is outside the bounds this results in heap OOB read. We have patched the issue in GitHub commit 9e82dce6e6bd1f36a57e08fa85af213e2b2f2622. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gh6x-4whr-2qv4   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gh6x-4whr-2qv4   |   MISC:https://github.com/tensorflow/tensorflow/commit/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622   |   URL:https://github.com/tensorflow/tensorflow/commit/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3764,Candidate,"A memory leak flaw was found in the Linux kernel's ccp_run_aes_gcm_cmd() function that allows an attacker to cause a denial of service. The vulnerability is similar to the older CVE-2019-18808. The highest threat from this vulnerability is to system availability.","MISC:https://access.redhat.com/security/cve/CVE-2021-3764   |   URL:https://access.redhat.com/security/cve/CVE-2021-3764   |   MISC:https://bugzilla.redhat.com/show_bug.cgi?id=1997467   |   URL:https://bugzilla.redhat.com/show_bug.cgi?id=1997467   |   MISC:https://github.com/torvalds/linux/commit/505d9dcb0f7ddf9d075e729523a33d38642ae680   |   URL:https://github.com/torvalds/linux/commit/505d9dcb0f7ddf9d075e729523a33d38642ae680   |   MISC:https://security-tracker.debian.org/tracker/CVE-2021-3764   |   URL:https://security-tracker.debian.org/tracker/CVE-2021-3764",Assigned (20210903),"None (candidate not yet proposed)",""
CVE-2021-37640,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.SparseReshape` can be made to trigger an integral division by 0 exception. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L176-L181) calls the reshaping functor whenever there is at least an index in the input but does not check that shape of the input or the target shape have both a non-zero number of elements. The [reshape functor](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L40-L78) blindly divides by the dimensions of the target shape. Hence, if this is not checked, code will result in a division by 0. We have patched the issue in GitHub commit 4923de56ec94fff7770df259ab7f2288a74feb41. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1 as this is the other affected version.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-95xm-g58g-3p88   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-95xm-g58g-3p88   |   MISC:https://github.com/tensorflow/tensorflow/commit/4923de56ec94fff7770df259ab7f2288a74feb41   |   URL:https://github.com/tensorflow/tensorflow/commit/4923de56ec94fff7770df259ab7f2288a74feb41",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37641,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions if the arguments to `tf.raw_ops.RaggedGather` don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/ragged_gather_op.cc#L70) directly reads the first dimension of a tensor shape before checking that said tensor has rank of at least 1 (i.e., it is not a scalar). Furthermore, the implementation does not check that the list given by `params_nested_splits` is not an empty list of tensors. We have patched the issue in GitHub commit a2b743f6017d7b97af1fe49087ae15f0ac634373. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c8h-vvrj-w2p8   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c8h-vvrj-w2p8   |   MISC:https://github.com/tensorflow/tensorflow/commit/a2b743f6017d7b97af1fe49087ae15f0ac634373   |   URL:https://github.com/tensorflow/tensorflow/commit/a2b743f6017d7b97af1fe49087ae15f0ac634373",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37642,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.ResourceScatterDiv` is vulnerable to a division by 0 error. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/resource_variable_ops.cc#L865) uses a common class for all binary operations but fails to treat the division by 0 case separately. We have patched the issue in GitHub commit 4aacb30888638da75023e6601149415b39763d76. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-ch4f-829c-v5pw   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-ch4f-829c-v5pw   |   MISC:https://github.com/tensorflow/tensorflow/commit/4aacb30888638da75023e6601149415b39763d76   |   URL:https://github.com/tensorflow/tensorflow/commit/4aacb30888638da75023e6601149415b39763d76",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37643,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. If a user does not provide a valid padding value to `tf.raw_ops.MatrixDiagPartOp`, then the code triggers a null pointer dereference (if input is empty) or produces invalid behavior, ignoring all values after the first. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/linalg/matrix_diag_op.cc#L89) reads the first value from a tensor buffer without first checking that the tensor has values to read from. We have patched the issue in GitHub commit 482da92095c4d48f8784b1f00dda4f81c28d2988. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fcwc-p4fc-c5cc   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fcwc-p4fc-c5cc   |   MISC:https://github.com/tensorflow/tensorflow/commit/482da92095c4d48f8784b1f00dda4f81c28d2988   |   URL:https://github.com/tensorflow/tensorflow/commit/482da92095c4d48f8784b1f00dda4f81c28d2988",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37644,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions providing a negative element to `num_elements` list argument of `tf.raw_ops.TensorListReserve` causes the runtime to abort the process due to reallocating a `std::vector` to have a negative number of elements. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/list_kernels.cc#L312) calls `std::vector.resize()` with the new size controlled by input given by the user, without checking that this input is valid. We have patched the issue in GitHub commit 8a6e874437670045e6c7dc6154c7412b4a2135e2. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-27j5-4p9v-pp67   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-27j5-4p9v-pp67   |   MISC:https://github.com/tensorflow/tensorflow/commit/8a6e874437670045e6c7dc6154c7412b4a2135e2   |   URL:https://github.com/tensorflow/tensorflow/commit/8a6e874437670045e6c7dc6154c7412b4a2135e2",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37645,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.QuantizeAndDequantizeV4Grad` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/quantize_and_dequantize_op.cc#L126) uses the `axis` value as the size argument to `absl::InlinedVector` constructor. But, the constructor uses an unsigned type for the argument, so the implicit conversion transforms the negative value to a large integer. We have patched the issue in GitHub commit 96f364a1ca3009f98980021c4b32be5fdcca33a1. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, and TensorFlow 2.4.3, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9w2p-5mgw-p94c   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9w2p-5mgw-p94c   |   MISC:https://github.com/tensorflow/tensorflow/commit/96f364a1ca3009f98980021c4b32be5fdcca33a1   |   URL:https://github.com/tensorflow/tensorflow/commit/96f364a1ca3009f98980021c4b32be5fdcca33a1",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37646,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.StringNGrams` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/string_ngrams_op.cc#L184) calls `reserve` on a `tstring` with a value that sometimes can be negative if user supplies negative `ngram_widths`. The `reserve` method calls `TF_TString_Reserve` which has an `unsigned long` argument for the size of the buffer. Hence, the implicit conversion transforms the negative value to a large integer. We have patched the issue in GitHub commit c283e542a3f422420cfdb332414543b62fc4e4a5. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6jh-7gv5-28vg   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6jh-7gv5-28vg   |   MISC:https://github.com/tensorflow/tensorflow/commit/c283e542a3f422420cfdb332414543b62fc4e4a5   |   URL:https://github.com/tensorflow/tensorflow/commit/c283e542a3f422420cfdb332414543b62fc4e4a5",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37647,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. When a user does not supply arguments that determine a valid sparse tensor, `tf.raw_ops.SparseTensorSliceDataset` implementation can be made to dereference a null pointer. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L240-L251) has some argument validation but fails to consider the case when either `indices` or `values` are provided for an empty sparse tensor when the other is not. If `indices` is empty, then [code that performs validation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L260-L261) (i.e., checking that the indices are monotonically increasing) results in a null pointer dereference. If `indices` as provided by the user is empty, then `indices` in the C++ code above is backed by an empty `std::vector`, hence calling `indices->dim_size(0)` results in null pointer dereferencing (same as calling `std::vector::at()` on an empty vector). We have patched the issue in GitHub commit 02cc160e29d20631de3859c6653184e3f876b9d7. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c5x2-p679-95wc   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c5x2-p679-95wc   |   MISC:https://github.com/tensorflow/tensorflow/commit/02cc160e29d20631de3859c6653184e3f876b9d7   |   URL:https://github.com/tensorflow/tensorflow/commit/02cc160e29d20631de3859c6653184e3f876b9d7",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37648,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the code for `tf.raw_ops.SaveV2` does not properly validate the inputs and an attacker can trigger a null pointer dereference. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/save_restore_v2_ops.cc) uses `ValidateInputs` to check that the input arguments are valid. This validation would have caught the illegal state represented by the reproducer above. However, the validation uses `OP_REQUIRES` which translates to setting the `Status` object of the current `OpKernelContext` to an error status, followed by an empty `return` statement which just terminates the execution of the function it is present in. However, this does not mean that the kernel execution is finalized: instead, execution continues from the next line in `Compute` that follows the call to `ValidateInputs`. This is equivalent to lacking the validation. We have patched the issue in GitHub commit 9728c60e136912a12d99ca56e106b7cce7af5986. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wp77-4gmm-7cq8   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wp77-4gmm-7cq8   |   MISC:https://github.com/tensorflow/tensorflow/commit/9728c60e136912a12d99ca56e106b7cce7af5986   |   URL:https://github.com/tensorflow/tensorflow/commit/9728c60e136912a12d99ca56e106b7cce7af5986",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37649,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. The code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`. We have patched the issue in GitHub commit 7bdf50bb4f5c54a4997c379092888546c97c3ebd. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6gv8-p3vj-pxvr   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6gv8-p3vj-pxvr   |   MISC:https://github.com/tensorflow/tensorflow/commit/7bdf50bb4f5c54a4997c379092888546c97c3ebd   |   URL:https://github.com/tensorflow/tensorflow/commit/7bdf50bb4f5c54a4997c379092888546c97c3ebd",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3765,Candidate,"validator.js is vulnerable to Inefficient Regular Expression Complexity","CONFIRM:https://huntr.dev/bounties/c37e975c-21a3-4c5f-9b57-04d63b28cfc9   |   URL:https://huntr.dev/bounties/c37e975c-21a3-4c5f-9b57-04d63b28cfc9   |   MISC:https://github.com/validatorjs/validator.js/commit/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1   |   URL:https://github.com/validatorjs/validator.js/commit/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1",Assigned (20210903),"None (candidate not yet proposed)",""
CVE-2021-37650,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.ExperimentalDatasetToTFRecord` and `tf.raw_ops.DatasetToTFRecord` can trigger heap buffer overflow and segmentation fault. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/to_tf_record_op.cc#L93-L102) assumes that all records in the dataset are of string type. However, there is no check for that, and the example given above uses numeric types. We have patched the issue in GitHub commit e0b6e58c328059829c3eb968136f17aa72b6c876. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f8h4-7rgh-q2gm   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f8h4-7rgh-q2gm   |   MISC:https://github.com/tensorflow/tensorflow/commit/e0b6e58c328059829c3eb968136f17aa72b6c876   |   URL:https://github.com/tensorflow/tensorflow/commit/e0b6e58c328059829c3eb968136f17aa72b6c876",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37651,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area. We have patched the issue in GitHub commit 0f931751fb20f565c4e94aa6df58d54a003cdb30. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hpv4-7p9c-mvfr   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hpv4-7p9c-mvfr   |   MISC:https://github.com/tensorflow/tensorflow/commit/0f931751fb20f565c4e94aa6df58d54a003cdb30   |   URL:https://github.com/tensorflow/tensorflow/commit/0f931751fb20f565c4e94aa6df58d54a003cdb30",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37652,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.BoostedTreesCreateEnsemble` can result in a use after free error if an attacker supplies specially crafted arguments. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/boosted_trees/resource_ops.cc#L55) uses a reference counted resource and decrements the refcount if the initialization fails, as it should. However, when the code was written, the resource was represented as a naked pointer but later refactoring has changed it to be a smart pointer. Thus, when the pointer leaves the scope, a subsequent `free`-ing of the resource occurs, but this fails to take into account that the refcount has already reached 0, thus the resource has been already freed. During this double-free process, members of the resource object are accessed for cleanup but they are invalid as the entire resource has been freed. We have patched the issue in GitHub commit 5ecec9c6fbdbc6be03295685190a45e7eee726ab. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m7fm-4jfh-jrg6   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m7fm-4jfh-jrg6   |   MISC:https://github.com/tensorflow/tensorflow/commit/5ecec9c6fbdbc6be03295685190a45e7eee726ab   |   URL:https://github.com/tensorflow/tensorflow/commit/5ecec9c6fbdbc6be03295685190a45e7eee726ab",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37653,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a crash via a floating point exception in `tf.raw_ops.ResourceGather`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L725-L731) computes the value of a value, `batch_size`, and then divides by it without checking that this value is not 0. We have patched the issue in GitHub commit ac117ee8a8ea57b73d34665cdf00ef3303bc0b11. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjj8-32p7-h289   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjj8-32p7-h289   |   MISC:https://github.com/tensorflow/tensorflow/commit/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11   |   URL:https://github.com/tensorflow/tensorflow/commit/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37654,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor. Since the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor. We have patched the issue in GitHub commit bc9c546ce7015c57c2f15c168b3d9201de679a1d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2r8p-fg3c-wcj4   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2r8p-fg3c-wcj4   |   MISC:https://github.com/tensorflow/tensorflow/commit/bc9c546ce7015c57c2f15c168b3d9201de679a1d   |   URL:https://github.com/tensorflow/tensorflow/commit/bc9c546ce7015c57c2f15c168b3d9201de679a1d",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37655,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a read from outside of bounds of heap allocated data by sending invalid arguments to `tf.raw_ops.ResourceScatterUpdate`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L919-L923) has an incomplete validation of the relationship between the shapes of `indices` and `updates`: instead of checking that the shape of `indices` is a prefix of the shape of `updates` (so that broadcasting can happen), code only checks that the number of elements in these two tensors are in a divisibility relationship. We have patched the issue in GitHub commit 01cff3f986259d661103412a20745928c727326f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7fvx-3jfc-2cpc   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7fvx-3jfc-2cpc   |   MISC:https://github.com/tensorflow/tensorflow/commit/01cff3f986259d661103412a20745928c727326f   |   URL:https://github.com/tensorflow/tensorflow/commit/01cff3f986259d661103412a20745928c727326f",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37656,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToSparse`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc#L30) has an incomplete validation of the splits values: it does not check that they are in increasing order. We have patched the issue in GitHub commit 1071f554dbd09f7e101324d366eec5f4fe5a3ece. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4xfp-4pfp-89wg   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4xfp-4pfp-89wg   |   MISC:https://github.com/tensorflow/tensorflow/commit/1071f554dbd09f7e101324d366eec5f4fe5a3ece   |   URL:https://github.com/tensorflow/tensorflow/commit/1071f554dbd09f7e101324d366eec5f4fe5a3ece",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37657,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong. We have patched the issue in GitHub commit f2a673bd34f0d64b8e40a551ac78989d16daad09. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5xwc-mrhx-5g3m   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5xwc-mrhx-5g3m   |   MISC:https://github.com/tensorflow/tensorflow/commit/f2a673bd34f0d64b8e40a551ac78989d16daad09   |   URL:https://github.com/tensorflow/tensorflow/commit/f2a673bd34f0d64b8e40a551ac78989d16daad09",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37658,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong. We have patched the issue in GitHub commit ff8894044dfae5568ecbf2ed514c1a37dc394f1b. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6p5r-g9mq-ggh2   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6p5r-g9mq-ggh2   |   MISC:https://github.com/tensorflow/tensorflow/commit/ff8894044dfae5568ecbf2ed514c1a37dc394f1b   |   URL:https://github.com/tensorflow/tensorflow/commit/ff8894044dfae5568ecbf2ed514c1a37dc394f1b",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37659,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all binary cwise operations that don't require broadcasting (e.g., gradients of binary cwise operations). The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/cwise_ops_common.h#L264) assumes that the two inputs have exactly the same number of elements but does not check that. Hence, when the eigen functor executes it triggers heap OOB reads and undefined behavior due to binding to nullptr. We have patched the issue in GitHub commit 93f428fd1768df147171ed674fee1fc5ab8309ec. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q3g3-h9r4-prrc   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q3g3-h9r4-prrc   |   MISC:https://github.com/tensorflow/tensorflow/commit/93f428fd1768df147171ed674fee1fc5ab8309ec   |   URL:https://github.com/tensorflow/tensorflow/commit/93f428fd1768df147171ed674fee1fc5ab8309ec",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3766,Candidate,"objection.js is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')","CONFIRM:https://huntr.dev/bounties/c98e0f0e-ebf2-4072-be73-a1848ea031cc   |   URL:https://huntr.dev/bounties/c98e0f0e-ebf2-4072-be73-a1848ea031cc   |   MISC:https://github.com/Vincit/objection.js/commit/46b842a6bc897198b83f41ac85c92864b991d7e9   |   URL:https://github.com/Vincit/objection.js/commit/46b842a6bc897198b83f41ac85c92864b991d7e9",Assigned (20210904),"None (candidate not yet proposed)",""
CVE-2021-37660,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause a floating point exception by calling inplace operations with crafted arguments that would result in a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/inplace_ops.cc#L283) has a logic error: it should skip processing if `x` and `v` are empty but the code uses `||` instead of `&&`. We have patched the issue in GitHub commit e86605c0a336c088b638da02135ea6f9f6753618. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cm5x-837x-jf3c   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cm5x-837x-jf3c   |   MISC:https://github.com/tensorflow/tensorflow/commit/e86605c0a336c088b638da02135ea6f9f6753618   |   URL:https://github.com/tensorflow/tensorflow/commit/e86605c0a336c088b638da02135ea6f9f6753618",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37661,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause a denial of service in `boosted_trees_create_quantile_stream_resource` by using negative arguments. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantile_ops.cc#L96) does not validate that `num_streams` only contains non-negative numbers. In turn, [this results in using this value to allocate memory](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantiles/quantile_stream_resource.h#L31-L40). However, `reserve` receives an unsigned integer so there is an implicit conversion from a negative value to a large positive unsigned. This results in a crash from the standard library. We have patched the issue in GitHub commit 8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gf88-j2mg-cc82   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gf88-j2mg-cc82   |   MISC:https://github.com/tensorflow/tensorflow/commit/8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992   |   URL:https://github.com/tensorflow/tensorflow/commit/8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37662,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can generate undefined behavior via a reference binding to nullptr in `BoostedTreesCalculateBestGainsPerFeature` and similar attack can occur in `BoostedTreesCalculateBestFeatureSplitV2`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) does not validate the input values. We have patched the issue in GitHub commit 9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad and in commit 429f009d2b2c09028647dd4bb7b3f6f414bbaad7. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f5cx-5wr3-5qrc   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f5cx-5wr3-5qrc   |   MISC:https://github.com/tensorflow/tensorflow/commit/429f009d2b2c09028647dd4bb7b3f6f414bbaad7   |   URL:https://github.com/tensorflow/tensorflow/commit/429f009d2b2c09028647dd4bb7b3f6f414bbaad7   |   MISC:https://github.com/tensorflow/tensorflow/commit/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad   |   URL:https://github.com/tensorflow/tensorflow/commit/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37663,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor. We have patched the issue in GitHub commit 6da6620efad397c85493b8f8667b821403516708. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g25h-jr74-qp5j   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g25h-jr74-qp5j   |   MISC:https://github.com/tensorflow/tensorflow/commit/6da6620efad397c85493b8f8667b821403516708   |   URL:https://github.com/tensorflow/tensorflow/commit/6da6620efad397c85493b8f8667b821403516708",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37664,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `BoostedTreesSparseCalculateBestFeatureSplit`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) needs to validate that each value in `stats_summary_indices` is in range. We have patched the issue in GitHub commit e84c975313e8e8e38bb2ea118196369c45c51378. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r4c4-5fpq-56wg   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r4c4-5fpq-56wg   |   MISC:https://github.com/tensorflow/tensorflow/commit/e84c975313e8e8e38bb2ea118196369c45c51378   |   URL:https://github.com/tensorflow/tensorflow/commit/e84c975313e8e8e38bb2ea118196369c45c51378",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37665,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in MKL implementation of requantization, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor. A similar issue occurs in `MklRequantizePerChannelOp`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments. We have patched the issue in GitHub commit 9e62869465573cb2d9b5053f1fa02a81fce21d69 and in the Github commit 203214568f5bc237603dbab6e1fd389f1572f5c9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v82p-hv3v-p6qp   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v82p-hv3v-p6qp   |   MISC:https://github.com/tensorflow/tensorflow/commit/203214568f5bc237603dbab6e1fd389f1572f5c9   |   URL:https://github.com/tensorflow/tensorflow/commit/203214568f5bc237603dbab6e1fd389f1572f5c9   |   MISC:https://github.com/tensorflow/tensorflow/commit/9e62869465573cb2d9b5053f1fa02a81fce21d69   |   URL:https://github.com/tensorflow/tensorflow/commit/9e62869465573cb2d9b5053f1fa02a81fce21d69",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37666,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToVariant`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_to_variant_op.cc#L129) has an incomplete validation of the splits values, missing the case when the argument would be empty. We have patched the issue in GitHub commit be7a4de6adfbd303ce08be4332554dff70362612. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w4xf-2pqw-5mq7   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w4xf-2pqw-5mq7   |   MISC:https://github.com/tensorflow/tensorflow/commit/be7a4de6adfbd303ce08be4332554dff70362612   |   URL:https://github.com/tensorflow/tensorflow/commit/be7a4de6adfbd303ce08be4332554dff70362612",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37667,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.UnicodeEncode`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unicode_ops.cc#L533-L539) reads the first dimension of the `input_splits` tensor before validating that this tensor is not empty. We have patched the issue in GitHub commit 2e0ee46f1a47675152d3d865797a18358881d7a6. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w74j-v8xh-3w5h   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w74j-v8xh-3w5h   |   MISC:https://github.com/tensorflow/tensorflow/commit/2e0ee46f1a47675152d3d865797a18358881d7a6   |   URL:https://github.com/tensorflow/tensorflow/commit/2e0ee46f1a47675152d3d865797a18358881d7a6",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37668,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause denial of service in applications serving models using `tf.raw_ops.UnravelIndex` by triggering a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unravel_index_op.cc#L36) does not check that the tensor subsumed by `dims` is not empty. Hence, if one element of `dims` is 0, the implementation does a division by 0. We have patched the issue in GitHub commit a776040a5e7ebf76eeb7eb923bf1ae417dd4d233. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2wmv-37vq-52g5   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2wmv-37vq-52g5   |   MISC:https://github.com/tensorflow/tensorflow/commit/a776040a5e7ebf76eeb7eb923bf1ae417dd4d233   |   URL:https://github.com/tensorflow/tensorflow/commit/a776040a5e7ebf76eeb7eb923bf1ae417dd4d233",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37669,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause denial of service in applications serving models using `tf.raw_ops.NonMaxSuppressionV5` by triggering a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/image/non_max_suppression_op.cc#L170-L271) uses a user controlled argument to resize a `std::vector`. However, as `std::vector::resize` takes the size argument as a `size_t` and `output_size` is an `int`, there is an implicit conversion to unsigned. If the attacker supplies a negative value, this conversion results in a crash. A similar issue occurs in `CombinedNonMaxSuppression`. We have patched the issue in GitHub commit 3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d and commit [b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vmjw-c2vp-p33c   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vmjw-c2vp-p33c   |   MISC:https://github.com/tensorflow/tensorflow/commit/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d   |   URL:https://github.com/tensorflow/tensorflow/commit/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d   |   MISC:https://github.com/tensorflow/tensorflow/commit/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58   |   URL:https://github.com/tensorflow/tensorflow/commit/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3767,Candidate,"bookstack is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","CONFIRM:https://huntr.dev/bounties/7ec92c85-30eb-4071-8891-6183446ca980   |   URL:https://huntr.dev/bounties/7ec92c85-30eb-4071-8891-6183446ca980   |   MISC:https://github.com/bookstackapp/bookstack/commit/040997fdc4414776bcac06a3cbaac3b26b5e8a64   |   URL:https://github.com/bookstackapp/bookstack/commit/040997fdc4414776bcac06a3cbaac3b26b5e8a64",Assigned (20210904),"None (candidate not yet proposed)",""
CVE-2021-37670,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.UpperBound`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/searchsorted_op.cc#L85-L104) does not validate the rank of `sorted_input` argument. A similar issue occurs in `tf.raw_ops.LowerBound`. We have patched the issue in GitHub commit 42459e4273c2e47a3232cc16c4f4fff3b3a35c38. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9697-98pf-4rw7   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9697-98pf-4rw7   |   MISC:https://github.com/tensorflow/tensorflow/commit/42459e4273c2e47a3232cc16c4f4fff3b3a35c38   |   URL:https://github.com/tensorflow/tensorflow/commit/42459e4273c2e47a3232cc16c4f4fff3b3a35c38",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37671,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.Map*` and `tf.raw_ops.OrderedMap*` operations. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L222-L248) has a check in place to ensure that `indices` is in ascending order, but does not check that `indices` is not empty. We have patched the issue in GitHub commit 532f5c5a547126c634fefd43bbad1dc6417678ac. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qr82-2c78-4m8h   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qr82-2c78-4m8h   |   MISC:https://github.com/tensorflow/tensorflow/commit/532f5c5a547126c634fefd43bbad1dc6417678ac   |   URL:https://github.com/tensorflow/tensorflow/commit/532f5c5a547126c634fefd43bbad1dc6417678ac",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37672,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.SdcaOptimizerV2`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/sdca_internal.cc#L320-L353) does not check that the length of `example_labels` is the same as the number of examples. We have patched the issue in GitHub commit a4e138660270e7599793fa438cd7b2fc2ce215a6. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5hj3-vjjf-f5m7   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5hj3-vjjf-f5m7   |   MISC:https://github.com/tensorflow/tensorflow/commit/a4e138660270e7599793fa438cd7b2fc2ce215a6   |   URL:https://github.com/tensorflow/tensorflow/commit/a4e138660270e7599793fa438cd7b2fc2ce215a6",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37673,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.MapStage`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L513) does not check that the `key` input is a valid non-empty tensor. We have patched the issue in GitHub commit d7de67733925de196ec8863a33445b73f9562d1d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-278g-rq84-9hmg   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-278g-rq84-9hmg   |   MISC:https://github.com/tensorflow/tensorflow/commit/d7de67733925de196ec8863a33445b73f9562d1d   |   URL:https://github.com/tensorflow/tensorflow/commit/d7de67733925de196ec8863a33445b73f9562d1d",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37674,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7ghq-fvr3-pj2x   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7ghq-fvr3-pj2x   |   MISC:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2021-068.md   |   URL:https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2021-068.md   |   MISC:https://github.com/tensorflow/tensorflow/commit/136b51f10903e044308cf77117c0ed9871350475   |   URL:https://github.com/tensorflow/tensorflow/commit/136b51f10903e044308cf77117c0ed9871350475",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37675,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions most implementations of convolution operators in TensorFlow are affected by a division by 0 vulnerability where an attacker can trigger a denial of service via a crash. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/framework/common_shape_fns.cc#L577) is missing several validations before doing divisions and modulo operations. We have patched the issue in GitHub commit 8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c8h-2mv3-49ww   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c8h-2mv3-49ww   |   MISC:https://github.com/tensorflow/tensorflow/commit/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4   |   URL:https://github.com/tensorflow/tensorflow/commit/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37676,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.SparseFillEmptyRows`. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/sparse_ops.cc#L608-L634) does not validate that the input arguments are not empty tensors. We have patched the issue in GitHub commit 578e634b4f1c1c684d4b4294f9e5281b2133b3ed. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v768-w7m9-2vmm   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v768-w7m9-2vmm   |   MISC:https://github.com/tensorflow/tensorflow/commit/578e634b4f1c1c684d4b4294f9e5281b2133b3ed   |   URL:https://github.com/tensorflow/tensorflow/commit/578e634b4f1c1c684d4b4294f9e5281b2133b3ed",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37677,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qfpc-5pjr-mh26   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qfpc-5pjr-mh26   |   MISC:https://github.com/tensorflow/tensorflow/commit/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764   |   URL:https://github.com/tensorflow/tensorflow/commit/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37678,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions TensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/python/keras/saving/model_config.py#L66-L104) uses `yaml.unsafe_load` which can perform arbitrary code execution on the input. Given that YAML format support requires a significant amount of work, we have removed it for now. We have patched the issue in GitHub commit 23d6383eb6c14084a8fc3bdf164043b974818012. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r   |   MISC:https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012   |   URL:https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37679,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions it is possible to nest a `tf.map_fn` within another `tf.map_fn` call. However, if the input tensor is a `RaggedTensor` and there is no function signature provided, code assumes the output is a fully specified tensor and fills output buffer with uninitialized contents from the heap. The `t` and `z` outputs should be identical, however this is not the case. The last row of `t` contains data from the heap which can be used to leak other memory information. The bug lies in the conversion from a `Variant` tensor to a `RaggedTensor`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_from_variant_op.cc#L177-L190) does not check that all inner shapes match and this results in the additional dimensions. The same implementation can result in data loss, if input tensor is tweaked. We have patched the issue in GitHub commit 4e2565483d0ffcadc719bd44893fb7f609bb5f12. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g8wg-cjwc-xhhp   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g8wg-cjwc-xhhp   |   MISC:https://github.com/tensorflow/tensorflow/commit/4e2565483d0ffcadc719bd44893fb7f609bb5f12   |   URL:https://github.com/tensorflow/tensorflow/commit/4e2565483d0ffcadc719bd44893fb7f609bb5f12",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3768,Candidate,"bookstack is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","CONFIRM:https://huntr.dev/bounties/64a0229f-ff5e-4c64-b83e-9bfc0698a78e   |   URL:https://huntr.dev/bounties/64a0229f-ff5e-4c64-b83e-9bfc0698a78e   |   MISC:https://github.com/bookstackapp/bookstack/commit/5e6092aaf8fd420202016038286554860bf8ea64   |   URL:https://github.com/bookstackapp/bookstack/commit/5e6092aaf8fd420202016038286554860bf8ea64",Assigned (20210904),"None (candidate not yet proposed)",""
CVE-2021-37680,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of fully connected layers in TFLite is [vulnerable to a division by zero error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/fully_connected.cc#L226). We have patched the issue in GitHub commit 718721986aa137691ee23f03638867151f74935f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cfpj-3q4c-jhvr   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cfpj-3q4c-jhvr   |   MISC:https://github.com/tensorflow/tensorflow/commit/718721986aa137691ee23f03638867151f74935f   |   URL:https://github.com/tensorflow/tensorflow/commit/718721986aa137691ee23f03638867151f74935f",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37681,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of SVDF in TFLite is [vulnerable to a null pointer error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/svdf.cc#L300-L313). The [`GetVariableInput` function](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L115-L119) can return a null pointer but `GetTensorData` assumes that the argument is always a valid tensor. Furthermore, because `GetVariableInput` calls [`GetMutableInput`](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L82-L90) which might return `nullptr`, the `tensor->is_variable` expression can also trigger a null pointer exception. We have patched the issue in GitHub commit 5b048e87e4e55990dae6b547add4dae59f4e1c76. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p   |   MISC:https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76   |   URL:https://github.com/tensorflow/tensorflow/commit/5b048e87e4e55990dae6b547add4dae59f4e1c76",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37682,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions all TFLite operations that use quantization can be made to use unitialized values. [For example](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/depthwise_conv.cc#L198-L200). The issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code. We have patched the issue in GitHub commits 537bc7c723439b9194a358f64d871dd326c18887, 4a91f2069f7145aab6ba2d8cfe41be8a110c18a5 and 8933b8a21280696ab119b63263babdb54c298538. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4c4g-crqm-xrxw   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4c4g-crqm-xrxw   |   MISC:https://github.com/tensorflow/tensorflow/commit/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5   |   URL:https://github.com/tensorflow/tensorflow/commit/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5   |   MISC:https://github.com/tensorflow/tensorflow/commit/537bc7c723439b9194a358f64d871dd326c18887   |   URL:https://github.com/tensorflow/tensorflow/commit/537bc7c723439b9194a358f64d871dd326c18887   |   MISC:https://github.com/tensorflow/tensorflow/commit/8933b8a21280696ab119b63263babdb54c298538   |   URL:https://github.com/tensorflow/tensorflow/commit/8933b8a21280696ab119b63263babdb54c298538",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37683,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of division in TFLite is [vulnerable to a division by 0 error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc). There is no check that the divisor tensor does not contain zero elements. We have patched the issue in GitHub commit 1e206baedf8bef0334cca3eb92bab134ef525a28. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h   |   MISC:https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28   |   URL:https://github.com/tensorflow/tensorflow/commit/1e206baedf8bef0334cca3eb92bab134ef525a28",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37684,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementations of pooling in TFLite are vulnerable to division by 0 errors as there are no checks for divisors not being 0. We have patched the issue in GitHub commit [dfa22b348b70bb89d6d6ec0ff53973bacb4f4695](https://github.com/tensorflow/tensorflow/commit/dfa22b348b70bb89d6d6ec0ff53973bacb4f4695). The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q7f7-544h-67h9   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q7f7-544h-67h9",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37685,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`expand_dims.cc`](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50) contains a vulnerability which allows reading one element outside of bounds of heap allocated data. If `axis` is a large negative value (e.g., `-100000`), then after the first `if` it would still be negative. The check following the `if` statement will pass and the `for` loop would read one element before the start of `input_dims.data` (when `i = 0`). We have patched the issue in GitHub commit d94ffe08a65400f898241c0374e9edc6fa8ed257. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v   |   MISC:https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257   |   URL:https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37686,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions the strided slice implementation in TFLite has a logic bug which can allow an attacker to trigger an infinite loop. This arises from newly introduced support for [ellipsis in axis definition](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/strided_slice.cc#L103-L122). An attacker can craft a model such that `ellipsis_end_idx` is smaller than `i` (e.g., always negative). In this case, the inner loop does not increase `i` and the `continue` statement causes execution to skip over the preincrement at the end of the outer loop. We have patched the issue in GitHub commit dfa22b348b70bb89d6d6ec0ff53973bacb4f4695. TensorFlow 2.6.0 is the only affected version.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mhhc-q96p-mfm9   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mhhc-q96p-mfm9   |   MISC:https://github.com/tensorflow/tensorflow/commit/dfa22b348b70bb89d6d6ec0ff53973bacb4f4695   |   URL:https://github.com/tensorflow/tensorflow/commit/dfa22b348b70bb89d6d6ec0ff53973bacb4f4695",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37687,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`GatherNd` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation. Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`. Similar issue exists in [`Gather` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc). We have patched the issue in GitHub commits bb6a0383ed553c286f87ca88c207f6774d5c4a8f and eb921122119a6b6e470ee98b89e65d721663179d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437   |   MISC:https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f   |   URL:https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f   |   MISC:https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d   |   URL:https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37688,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285) unconditionally dereferences a pointer. We have patched the issue in GitHub commit 15691e456c7dc9bd6be203b09765b063bf4a380c. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68   |   MISC:https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c   |   URL:https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37689,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service. This is caused by the MLIR optimization of `L2NormalizeReduceAxis` operator. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70) unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements. We have patched the issue in GitHub commit d6b57f461b39fd1aa8c1b870f1b974aac3554955. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh   |   MISC:https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955   |   URL:https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3769,Candidate,"# Vulnerability in `pygmalion`, `pygmalion-virtualenv` and `refined` themes **Description**: these themes use `print -P` on user-supplied strings to print them to the terminal. All of them do that on git information, particularly the branch name, so if the branch has a specially-crafted name the vulnerability can be exploited. **Fixed in**: [b3ba9978](https://github.com/ohmyzsh/ohmyzsh/commit/b3ba9978). **Impacted areas**: - `pygmalion` theme. - `pygmalion-virtualenv` theme. - `refined` theme.","MISC:https://github.com/ohmyzsh/ohmyzsh/commit/b3ba9978   |   URL:https://github.com/ohmyzsh/ohmyzsh/commit/b3ba9978",Assigned (20210905),"None (candidate not yet proposed)",""
CVE-2021-37690,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions when running shape functions, some functions (such as `MutableHashTableShape`) produce extra output information in the form of a `ShapeAndType` struct. The shapes embedded in this struct are owned by an inference context that is cleaned up almost immediately; if the upstream code attempts to access this shape information, it can trigger a segfault. `ShapeRefiner` is mitigating this for normal output shapes by cloning them (and thus putting the newly created shape under ownership of an inference context that will not die), but we were not doing the same for shapes and types. This commit fixes that by doing similar logic on output shapes and types. We have patched the issue in GitHub commit ee119d4a498979525046fba1c3dd3f13a039fbb1. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3hxh-8cp2-g4hg   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3hxh-8cp2-g4hg   |   MISC:https://github.com/tensorflow/tensorflow/commit/ee119d4a498979525046fba1c3dd3f13a039fbb1   |   URL:https://github.com/tensorflow/tensorflow/commit/ee119d4a498979525046fba1c3dd3f13a039fbb1",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37691,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a division by zero error in LSH [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/lsh_projection.cc#L118). We have patched the issue in GitHub commit 0575b640091680cfb70f4dd93e70658de43b94f9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick thiscommit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-27qf-jwm8-g7f3   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-27qf-jwm8-g7f3   |   MISC:https://github.com/tensorflow/tensorflow/commit/0575b640091680cfb70f4dd93e70658de43b94f9   |   URL:https://github.com/tensorflow/tensorflow/commit/0575b640091680cfb70f4dd93e70658de43b94f9",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37692,Candidate,"TensorFlow is an end-to-end open source platform for machine learning. In affected versions under certain conditions, Go code can trigger a segfault in string deallocation. For string tensors, `C.TF_TString_Dealloc` is called during garbage collection within a finalizer function. However, tensor structure isn't checked until encoding to avoid a performance penalty. The current method for dealloc assumes that encoding succeeded, but segfaults when a string tensor is garbage collected whose encoding failed (e.g., due to mismatched dimensions). To fix this, the call to set the finalizer function is deferred until `NewTensor` returns and, if encoding failed for a string tensor, deallocs are determined based on bytes written. We have patched the issue in GitHub commit 8721ba96e5760c229217b594f6d2ba332beedf22. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, which is the other affected version.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cmgw-8vpc-rc59   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cmgw-8vpc-rc59   |   MISC:https://github.com/tensorflow/tensorflow/commit/8721ba96e5760c229217b594f6d2ba332beedf22   |   URL:https://github.com/tensorflow/tensorflow/commit/8721ba96e5760c229217b594f6d2ba332beedf22   |   MISC:https://github.com/tensorflow/tensorflow/pull/50508   |   URL:https://github.com/tensorflow/tensorflow/pull/50508",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37693,Candidate,"Discourse is an open-source platform for community discussion. In Discourse before versions 2.7.8 and 2.8.0.beta4, when adding additional email addresses to an existing account on a Discourse site an email token is generated as part of the email verification process. Deleting the additional email address does not invalidate an unused token which can then be used in other contexts, including reseting a password.","CONFIRM:https://github.com/discourse/discourse/security/advisories/GHSA-9377-96f4-cww4   |   URL:https://github.com/discourse/discourse/security/advisories/GHSA-9377-96f4-cww4   |   MISC:https://github.com/discourse/discourse/commit/fb14e50741a4880cda22244eded8858e2f5336ef   |   URL:https://github.com/discourse/discourse/commit/fb14e50741a4880cda22244eded8858e2f5336ef",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37694,Candidate,"@asyncapi/java-spring-cloud-stream-template generates a Spring Cloud Stream (SCSt) microservice. In versions prior to 0.7.0 arbitrary code injection was possible when an attacker controls the AsyncAPI document. An example is provided in GHSA-xj6r-2jpm-qvxp. There are no mitigations available and all users are advised to update.","CONFIRM:https://github.com/asyncapi/java-spring-cloud-stream-template/security/advisories/GHSA-xj6r-2jpm-qvxp   |   URL:https://github.com/asyncapi/java-spring-cloud-stream-template/security/advisories/GHSA-xj6r-2jpm-qvxp",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37695,Candidate,"ckeditor is an open source WYSIWYG HTML editor with rich content support. A potential vulnerability has been discovered in CKEditor 4 [Fake Objects](https://ckeditor.com/cke4/addon/fakeobjects) package. The vulnerability allowed to inject malformed Fake Objects HTML, which could result in executing JavaScript code. It affects all users using the CKEditor 4 plugins listed above at version < 4.16.2. The problem has been recognized and patched. The fix will be available in version 4.16.2.","CONFIRM:https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-m94c-37g6-cjhc   |   URL:https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-m94c-37g6-cjhc   |   FEDORA:FEDORA-2021-51457da891   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NYA354LJP47KCVJMTUO77ZCX3ZK42G3T/   |   FEDORA:FEDORA-2021-72176a63a8   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UVOYN2WKDPLKCNILIGEZM236ABQASLGW/   |   FEDORA:FEDORA-2021-87578dca12   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAGNWHFIQAVCP537KFFS2A2GDG66J7XD/   |   MISC:https://github.com/ckeditor/ckeditor4/commit/de3c001540715f9c3801aaa38a1917de46cfcf58   |   URL:https://github.com/ckeditor/ckeditor4/commit/de3c001540715f9c3801aaa38a1917de46cfcf58   |   MISC:https://www.oracle.com/security-alerts/cpujan2022.html   |   URL:https://www.oracle.com/security-alerts/cpujan2022.html   |   MISC:https://www.oracle.com/security-alerts/cpuoct2021.html   |   URL:https://www.oracle.com/security-alerts/cpuoct2021.html   |   MLIST:[debian-lts-announce] 20211109 [SECURITY] [DLA 2813-1] ckeditor security update   |   URL:https://lists.debian.org/debian-lts-announce/2021/11/msg00007.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37696,Candidate,"tmerc-cogs are a collection of open source plugins for the Red Discord bot. A vulnerability has been found in the code that allows any user to access sensitive information by crafting a specific MassDM message. Issue is patched in commit 92325be650a6c17940cc52611797533ed95dbbe1. All users are advised to update to the current commit. As a workaround users may unload the MassDM cog or globally disable the `[p]massdm` command.","CONFIRM:https://github.com/tmercswims/tmerc-cogs/security/advisories/GHSA-ffhm-9c8j-wx9h   |   URL:https://github.com/tmercswims/tmerc-cogs/security/advisories/GHSA-ffhm-9c8j-wx9h   |   MISC:https://github.com/tmercswims/tmerc-cogs/commit/92325be650a6c17940cc5   |   URL:https://github.com/tmercswims/tmerc-cogs/commit/92325be650a6c17940cc5",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37697,Candidate,"tmerc-cogs are a collection of open source plugins for the Red Discord bot. A vulnerability has been found in the code that allows any user to access sensitive information by crafting a specific membership event message. Issue is patched in commit d63c49b4cfc30c795336e4fff08cba3795e0fcc0. As a workaround users may unload the Welcome cog.","CONFIRM:https://github.com/tmercswims/tmerc-cogs/security/advisories/GHSA-77xv-8c2x-j96j   |   URL:https://github.com/tmercswims/tmerc-cogs/security/advisories/GHSA-77xv-8c2x-j96j   |   MISC:https://github.com/tmercswims/tmerc-cogs/commit/d63c49b4cfc30c795336e4fff08cba3795e0fcc0   |   URL:https://github.com/tmercswims/tmerc-cogs/commit/d63c49b4cfc30c795336e4fff08cba3795e0fcc0",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37698,Candidate,"Icinga is a monitoring system which checks the availability of network resources, notifies users of outages, and generates performance data for reporting. In versions 2.5.0 through 2.13.0, ElasticsearchWriter, GelfWriter, InfluxdbWriter and Influxdb2Writer do not verify the server's certificate despite a certificate authority being specified. Icinga 2 instances which connect to any of the mentioned time series databases (TSDBs) using TLS over a spoofable infrastructure should immediately upgrade to version 2.13.1, 2.12.6, or 2.11.11 to patch the issue. Such instances should also change the credentials (if any) used by the TSDB writer feature to authenticate against the TSDB. There are no workarounds aside from upgrading.","CONFIRM:https://github.com/Icinga/icinga2/security/advisories/GHSA-cxfm-8j5v-5qr2   |   URL:https://github.com/Icinga/icinga2/security/advisories/GHSA-cxfm-8j5v-5qr2   |   MISC:https://github.com/Icinga/icinga2/releases/tag/v2.11.11   |   URL:https://github.com/Icinga/icinga2/releases/tag/v2.11.11   |   MISC:https://github.com/Icinga/icinga2/releases/tag/v2.12.6   |   URL:https://github.com/Icinga/icinga2/releases/tag/v2.12.6   |   MISC:https://github.com/Icinga/icinga2/releases/tag/v2.13.1   |   URL:https://github.com/Icinga/icinga2/releases/tag/v2.13.1   |   MLIST:[debian-lts-announce] 20211110 [SECURITY] [DLA 2816-1] icinga2 security update   |   URL:https://lists.debian.org/debian-lts-announce/2021/11/msg00010.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37699,Candidate,"Next.js is an open source website development framework to be used with the React library. In affected versions specially encoded paths could be used when pages/_error.js was statically generated allowing an open redirect to occur to an external site. In general, this redirect does not directly harm users although can allow for phishing attacks by redirecting to an attacker's domain from a trusted domain. We recommend everyone to upgrade regardless of whether you can reproduce the issue or not. The issue has been patched in release 11.1.0.","CONFIRM:https://github.com/vercel/next.js/security/advisories/GHSA-vxf5-wxwp-m7g9   |   URL:https://github.com/vercel/next.js/security/advisories/GHSA-vxf5-wxwp-m7g9   |   MISC:https://github.com/vercel/next.js/releases/tag/v11.1.0   |   URL:https://github.com/vercel/next.js/releases/tag/v11.1.0",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3770,Candidate,"vim is vulnerable to Heap-based Buffer Overflow","CONFIRM:https://security.netapp.com/advisory/ntap-20221124-0003/   |   CONFIRM:https://huntr.dev/bounties/016ad2f2-07c1-4d14-a8ce-6eed10729365   |   URL:https://huntr.dev/bounties/016ad2f2-07c1-4d14-a8ce-6eed10729365   |   FEDORA:FEDORA-2021-4a43cbe0b4   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/X4FFQARG3LGREPDZRI4C7ERQL3RJKEWQ/   |   FEDORA:FEDORA-2021-5fa81a2b04   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J2CJLY3CF55I2ULG2X4ENXLSXAXYW5J4/   |   FEDORA:FEDORA-2021-e982f972f2   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFNTMVZCN4TRTTCAXRLVQ7H2P7FYAIZQ/   |   GENTOO:GLSA-202208-32   |   URL:https://security.gentoo.org/glsa/202208-32   |   MISC:https://github.com/vim/vim/commit/b7081e135a16091c93f6f5f7525a5c58fb7ca9f9   |   URL:https://github.com/vim/vim/commit/b7081e135a16091c93f6f5f7525a5c58fb7ca9f9   |   MLIST:[oss-security] 20210930 3 new CVE's in vim   |   URL:http://www.openwall.com/lists/oss-security/2021/10/01/1",Assigned (20210905),"None (candidate not yet proposed)",""
CVE-2021-37700,Candidate,"@github/paste-markdown is an npm package for pasting markdown objects. A self Cross-Site Scripting vulnerability exists in the @github/paste-markdown before version 0.3.4. If the clipboard data contains the string `<table>`, a **div** is dynamically created, and the clipboard content is copied into its **innerHTML** property without any sanitization, resulting in improper execution of JavaScript in the browser of the victim (the user who pasted the code). Users directed to copy text from a malicious website and paste it into pages that utilize this library are affected. This is fixed in version 0.3.4. Refer the to the referenced GitHub Advisory for more details including an example exploit.","CONFIRM:https://github.com/github/paste-markdown/security/advisories/GHSA-gpfj-4j6g-c4w9   |   URL:https://github.com/github/paste-markdown/security/advisories/GHSA-gpfj-4j6g-c4w9   |   MISC:https://github.com/github/paste-markdown/commit/32b7ea3f29ae8f256f9d19768387be42678ddf30   |   URL:https://github.com/github/paste-markdown/commit/32b7ea3f29ae8f256f9d19768387be42678ddf30   |   MISC:https://github.com/github/paste-markdown/releases/tag/v0.3.4   |   URL:https://github.com/github/paste-markdown/releases/tag/v0.3.4   |   MISC:https://www.npmjs.com/package/@github/paste-markdown   |   URL:https://www.npmjs.com/package/@github/paste-markdown",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37701,Candidate,"The npm package ""tar"" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\` and `/` characters as path separators, however `\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf   |   CONFIRM:https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc   |   URL:https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc   |   DEBIAN:DSA-5008   |   URL:https://www.debian.org/security/2021/dsa-5008   |   MISC:https://www.npmjs.com/package/tar   |   URL:https://www.npmjs.com/package/tar   |   MISC:https://www.oracle.com/security-alerts/cpuoct2021.html   |   URL:https://www.oracle.com/security-alerts/cpuoct2021.html   |   MLIST:[debian-lts-announce] 20221212 [SECURITY] [DLA 3237-1] node-tar security update   |   URL:https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37702,Candidate,"Pimcore is an open source data & experience management platform. Prior to version 10.1.1, Data Object CSV import allows formular injection. The problem is patched in 10.1.1. Aside from upgrading, one may apply the patch manually as a workaround.","CONFIRM:https://github.com/pimcore/pimcore/security/advisories/GHSA-pp2h-95hm-hv9r   |   URL:https://github.com/pimcore/pimcore/security/advisories/GHSA-pp2h-95hm-hv9r   |   MISC:https://github.com/pimcore/pimcore/pull/9992   |   URL:https://github.com/pimcore/pimcore/pull/9992",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37703,Candidate,"Discourse is an open-source platform for community discussion. In Discourse before versions 2.7.8 and 2.8.0.beta5, a user's read state for a topic such as the last read post number and the notification level is exposed.","CONFIRM:https://github.com/discourse/discourse/security/advisories/GHSA-gq2h-qhg2-phf9   |   URL:https://github.com/discourse/discourse/security/advisories/GHSA-gq2h-qhg2-phf9   |   MISC:https://github.com/discourse/discourse/commit/aed65ec16d38886d7be7209d8c02df4ffd4937a4   |   URL:https://github.com/discourse/discourse/commit/aed65ec16d38886d7be7209d8c02df4ffd4937a4",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37704,Candidate,"PhpFastCache is a high-performance backend cache system (packagist package phpfastcache/phpfastcache). In versions before 6.1.5, 7.1.2, and 8.0.7 the `phpinfo()` can be exposed if the `/vendor` is not protected from public access. This is a rare situation today since the vendor directory is often located outside the web directory or protected via server rule (.htaccess, etc). Only the v6, v7 and v8 will be patched respectively in 8.0.7, 7.1.2, 6.1.5. Older versions such as v5, v4 are not longer supported and will **NOT** be patched. As a workaround, protect the `/vendor` directory from public access.","CONFIRM:https://github.com/PHPSocialNetwork/phpfastcache/security/advisories/GHSA-cvh5-p6r6-g2qc   |   URL:https://github.com/PHPSocialNetwork/phpfastcache/security/advisories/GHSA-cvh5-p6r6-g2qc   |   MISC:https://github.com/PHPSocialNetwork/phpfastcache/blob/master/CHANGELOG.md#807   |   URL:https://github.com/PHPSocialNetwork/phpfastcache/blob/master/CHANGELOG.md#807   |   MISC:https://github.com/PHPSocialNetwork/phpfastcache/commit/41a77d0d8f126dbd6fbedcd9e6a82e86cdaafa51   |   URL:https://github.com/PHPSocialNetwork/phpfastcache/commit/41a77d0d8f126dbd6fbedcd9e6a82e86cdaafa51   |   MISC:https://github.com/PHPSocialNetwork/phpfastcache/pull/813   |   URL:https://github.com/PHPSocialNetwork/phpfastcache/pull/813   |   MISC:https://github.com/PHPSocialNetwork/phpfastcache/pull/814   |   URL:https://github.com/PHPSocialNetwork/phpfastcache/pull/814   |   MISC:https://github.com/PHPSocialNetwork/phpfastcache/pull/815   |   URL:https://github.com/PHPSocialNetwork/phpfastcache/pull/815   |   MISC:https://github.com/flextype/flextype/issues/567   |   URL:https://github.com/flextype/flextype/issues/567   |   MISC:https://packagist.org/packages/phpfastcache/phpfastcache   |   URL:https://packagist.org/packages/phpfastcache/phpfastcache",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37705,Candidate,"OneFuzz is an open source self-hosted Fuzzing-As-A-Service platform. Starting with OneFuzz 2.12.0 or greater, an incomplete authorization check allows an authenticated user from any Azure Active Directory tenant to make authorized API calls to a vulnerable OneFuzz instance. To be vulnerable, a OneFuzz deployment must be both version 2.12.0 or greater and deployed with the non-default --multi_tenant_domain option. This can result in read/write access to private data such as software vulnerability and crash information, security testing tools and proprietary code and symbols. Via authorized API calls, this also enables tampering with existing data and unauthorized code execution on Azure compute resources. This issue is resolved starting in release 2.31.0, via the addition of application-level check of the bearer token's `issuer` against an administrator-configured allowlist. As a workaround users can restrict access to the tenant of a deployed OneFuzz instance < 2.31.0 by redeploying in the default configuration, which omits the `--multi_tenant_domain` option.","CONFIRM:https://github.com/microsoft/onefuzz/security/advisories/GHSA-q5vh-6whw-x745   |   URL:https://github.com/microsoft/onefuzz/security/advisories/GHSA-q5vh-6whw-x745   |   MISC:https://github.com/microsoft/onefuzz/commit/2fcb4998887959b4fa11894a068d689189742cb1   |   URL:https://github.com/microsoft/onefuzz/commit/2fcb4998887959b4fa11894a068d689189742cb1   |   MISC:https://github.com/microsoft/onefuzz/pull/1153   |   URL:https://github.com/microsoft/onefuzz/pull/1153   |   MISC:https://github.com/microsoft/onefuzz/releases/tag/2.31.0   |   URL:https://github.com/microsoft/onefuzz/releases/tag/2.31.0   |   MISC:https://pypi.org/project/onefuzz/   |   URL:https://pypi.org/project/onefuzz/",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37706,Candidate,"PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In affected versions if the incoming STUN message contains an ERROR-CODE attribute, the header length is not checked before performing a subtraction operation, potentially resulting in an integer underflow scenario. This issue affects all users that use STUN. A malicious actor located within the victim&#8217;s network may forge and send a specially crafted UDP (STUN) message that could remotely execute arbitrary code on the victim&#8217;s machine. Users are advised to upgrade as soon as possible. There are no known workarounds.","CONFIRM:https://github.com/pjsip/pjproject/security/advisories/GHSA-2qpg-f6wf-w984   |   URL:https://github.com/pjsip/pjproject/security/advisories/GHSA-2qpg-f6wf-w984   |   DEBIAN:DSA-5285   |   URL:https://www.debian.org/security/2022/dsa-5285   |   FULLDISC:20220304 AST-2022-004: pjproject: integer underflow on STUN message   |   URL:http://seclists.org/fulldisclosure/2022/Mar/0   |   GENTOO:GLSA-202210-37   |   URL:https://security.gentoo.org/glsa/202210-37   |   MISC:http://packetstormsecurity.com/files/166225/Asterisk-Project-Security-Advisory-AST-2022-004.html   |   MISC:https://github.com/pjsip/pjproject/commit/15663e3f37091069b8c98a7fce680dc04bc8e865   |   URL:https://github.com/pjsip/pjproject/commit/15663e3f37091069b8c98a7fce680dc04bc8e865   |   MLIST:[debian-lts-announce] 20220328 [SECURITY] [DLA 2962-1] pjproject security update   |   URL:https://lists.debian.org/debian-lts-announce/2022/03/msg00035.html   |   MLIST:[debian-lts-announce] 20221117 [SECURITY] [DLA 3194-1] asterisk security update   |   URL:https://lists.debian.org/debian-lts-announce/2022/11/msg00021.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37707,Candidate,"Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a vulnerability that allows manipulation of product reviews via API. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.","CONFIRM:https://github.com/shopware/platform/security/advisories/GHSA-9f8f-574q-8jmf   |   URL:https://github.com/shopware/platform/security/advisories/GHSA-9f8f-574q-8jmf   |   MISC:https://github.com/shopware/platform/commit/912b96de3b839c6c5525c98cbb58f537c2d838be   |   URL:https://github.com/shopware/platform/commit/912b96de3b839c6c5525c98cbb58f537c2d838be",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37708,Candidate,"Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a command injection vulnerability in mail agent settings. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.","CONFIRM:https://github.com/shopware/platform/security/advisories/GHSA-xh55-2fqp-p775   |   URL:https://github.com/shopware/platform/security/advisories/GHSA-xh55-2fqp-p775   |   MISC:https://github.com/shopware/platform/commit/82d8d1995f6ce9054323b2c3522b1b3cf04853aa   |   URL:https://github.com/shopware/platform/commit/82d8d1995f6ce9054323b2c3522b1b3cf04853aa",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37709,Candidate,"Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a vulnerability involving an insecure direct object reference of log files of the Import/Export feature. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.","CONFIRM:https://github.com/shopware/platform/security/advisories/GHSA-54gp-qff8-946c   |   URL:https://github.com/shopware/platform/security/advisories/GHSA-54gp-qff8-946c   |   MISC:https://github.com/shopware/platform/commit/a9f52abb6eb503654c492b6b2076f8d924831fec   |   URL:https://github.com/shopware/platform/commit/a9f52abb6eb503654c492b6b2076f8d924831fec",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3771,Candidate,"** REJECT ** DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: none. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a security issue. Notes: none.","",Assigned (20210906),"None (candidate not yet proposed)",""
CVE-2021-37710,Candidate,"Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a Cross-Site Scripting vulnerability via SVG media files. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.","CONFIRM:https://github.com/shopware/platform/security/advisories/GHSA-fc38-mxwr-pfhx   |   URL:https://github.com/shopware/platform/security/advisories/GHSA-fc38-mxwr-pfhx   |   MISC:https://github.com/shopware/platform/commit/abe9f69e1f667800f974acccd3047b4930e4b423   |   URL:https://github.com/shopware/platform/commit/abe9f69e1f667800f974acccd3047b4930e4b423",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37711,Candidate,"Versions prior to 6.4.3.1 contain an authenticated server-side request forgery vulnerability in file upload via URL. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.","CONFIRM:https://github.com/shopware/platform/security/advisories/GHSA-gcvv-gq92-x94r   |   URL:https://github.com/shopware/platform/security/advisories/GHSA-gcvv-gq92-x94r   |   MISC:https://github.com/shopware/platform/commit/b9f330e652b743dd2374c02bbe68f28b59a3f502   |   URL:https://github.com/shopware/platform/commit/b9f330e652b743dd2374c02bbe68f28b59a3f502",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37712,Candidate,"The npm package ""tar"" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 ""short path"" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf   |   CONFIRM:https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p   |   URL:https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p   |   DEBIAN:DSA-5008   |   URL:https://www.debian.org/security/2021/dsa-5008   |   MISC:https://www.npmjs.com/package/tar   |   URL:https://www.npmjs.com/package/tar   |   MISC:https://www.oracle.com/security-alerts/cpuoct2021.html   |   URL:https://www.oracle.com/security-alerts/cpuoct2021.html   |   MLIST:[debian-lts-announce] 20221212 [SECURITY] [DLA 3237-1] node-tar security update   |   URL:https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37713,Candidate,"The npm package ""tar"" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\path`. If the drive letter does not match the extraction target, for example `D:\extraction\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf   |   CONFIRM:https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh   |   URL:https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh   |   MISC:https://www.npmjs.com/package/tar   |   URL:https://www.npmjs.com/package/tar   |   MISC:https://www.oracle.com/security-alerts/cpuoct2021.html   |   URL:https://www.oracle.com/security-alerts/cpuoct2021.html",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37714,Candidate,"jsoup is a Java library for working with HTML. Those using jsoup versions prior to 1.14.2 to parse untrusted HTML or XML may be vulnerable to DOS attacks. If the parser is run on user supplied input, an attacker may supply content that causes the parser to get stuck (loop indefinitely until cancelled), to complete more slowly than usual, or to throw an unexpected exception. This effect may support a denial of service attack. The issue is patched in version 1.14.2. There are a few available workarounds. Users may rate limit input parsing, limit the size of inputs based on system resources, and/or implement thread watchdogs to cap and timeout parse runtimes.","CONFIRM:https://github.com/jhy/jsoup/security/advisories/GHSA-m72m-mhq2-9p6c   |   URL:https://github.com/jhy/jsoup/security/advisories/GHSA-m72m-mhq2-9p6c   |   CONFIRM:https://security.netapp.com/advisory/ntap-20220210-0022/   |   URL:https://security.netapp.com/advisory/ntap-20220210-0022/   |   MISC:https://jsoup.org/news/release-1.14.1   |   URL:https://jsoup.org/news/release-1.14.1   |   MISC:https://jsoup.org/news/release-1.14.2   |   URL:https://jsoup.org/news/release-1.14.2   |   MISC:https://www.oracle.com/security-alerts/cpuapr2022.html   |   URL:https://www.oracle.com/security-alerts/cpuapr2022.html   |   MISC:https://www.oracle.com/security-alerts/cpujan2022.html   |   URL:https://www.oracle.com/security-alerts/cpujan2022.html   |   MISC:https://www.oracle.com/security-alerts/cpujul2022.html   |   URL:https://www.oracle.com/security-alerts/cpujul2022.html   |   MLIST:[james-notifications] 20210820 [GitHub] [james-project] chibenwa opened a new pull request #609: [UPGRADE] JSOUP 1.14.1 -> 1.14.2 to address CVE-2021-37714   |   URL:https://lists.apache.org/thread.html/r685c5235235ad0c26e86d0ee987fb802c9675de6081dbf0516464e0b@%3Cnotifications.james.apache.org%3E   |   MLIST:[james-notifications] 20210823 [GitHub] [james-project] chibenwa merged pull request #609: [UPGRADE] JSOUP 1.14.1 -> 1.14.2 to address CVE-2021-37714   |   URL:https://lists.apache.org/thread.html/rc3354080fc67fb50b45b3c2d12dc4ca2a3c1c78dad3d3ba012c038aa@%3Cnotifications.james.apache.org%3E   |   MLIST:[james-notifications] 20210823 [james-project] branch master updated: [UPGRADE] JSOUP 1.14.1 -> 1.14.2 to address CVE-2021-37714   |   URL:https://lists.apache.org/thread.html/r97404676a5cf591988faedb887d64e278f522adcaa823d89ca69defe@%3Cnotifications.james.apache.org%3E   |   MLIST:[maven-issues] 20210830 [jira] [Created] (WAGON-612) Update jsoup to >= 1.14.2 for fix security issue   |   URL:https://lists.apache.org/thread.html/r50e9c9466c592ca9d707a5dea549524d19e3287da08d8392f643960e@%3Cissues.maven.apache.org%3E   |   MLIST:[maven-issues] 20210901 [jira] [Commented] (MNG-7227) Fix CVE-2021-37714 present in apache-maven   |   URL:https://lists.apache.org/thread.html/r377b93d79817ce649e9e68b3456e6f499747ef1643fa987b342e082e@%3Cissues.maven.apache.org%3E   |   MLIST:[maven-issues] 20210901 [jira] [Created] (MNG-7227) Fix CVE-2021-37714 present in apache-maven   |   URL:https://lists.apache.org/thread.html/r215009dbf7467a9f6506d0c0024cb36cad30071010e62c9352cfaaf0@%3Cissues.maven.apache.org%3E   |   MLIST:[maven-issues] 20210901 [jira] [Updated] (MNG-7227) Fix CVE-2021-37714 present in apache-maven   |   URL:https://lists.apache.org/thread.html/r3d71f18adb78e50f626dde689161ca63d3b7491bd9718fcddfaecba7@%3Cissues.maven.apache.org%3E",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37715,Candidate,"A remote cross-site scripting (XSS) vulnerability was discovered in Aruba AirWave Management Platform version(s): Prior to 8.2.13.0. Aruba has released upgrades for the Aruba AirWave Management Platform that address this security vulnerability.","MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-015.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-015.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37716,Candidate,"A remote buffer overflow vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.4; Prior to 8.7.1.2, 8.6.0.8, 8.5.0.12, 8.3.0.15. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37717,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.6; Prior to 8.7.1.4, 8.6.0.7, 8.5.0.12, 8.3.0.16. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37718,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.6; Prior to 8.7.1.4, 8.6.0.7, 8.5.0.12, 8.3.0.16. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37719,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.4; Prior to 8.7.1.4, 8.6.0.9, 8.5.0.13, 8.3.0.16, 6.5.4.20, 6.4.4.25. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-3772,Candidate,"A flaw was found in the Linux SCTP stack. A blind attacker may be able to kill an existing SCTP association through invalid chunks if the attacker knows the IP-addresses and port numbers being used and the attacker can send packets with spoofed IP addresses.","MISC:DSA-5096   |   URL:https://www.debian.org/security/2022/dsa-5096   |   MISC:[debian-lts-announce] 20220309 [SECURITY] [DLA 2941-1] linux-4.19 security update   |   URL:https://lists.debian.org/debian-lts-announce/2022/03/msg00012.html   |   MISC:https://bugzilla.redhat.com/show_bug.cgi?id=2000694   |   URL:https://bugzilla.redhat.com/show_bug.cgi?id=2000694   |   MISC:https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=32f8807a48ae55be0e76880cfe8607a18b5bb0df   |   URL:https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=32f8807a48ae55be0e76880cfe8607a18b5bb0df   |   MISC:https://github.com/torvalds/linux/commit/32f8807a48ae55be0e76880cfe8607a18b5bb0df   |   URL:https://github.com/torvalds/linux/commit/32f8807a48ae55be0e76880cfe8607a18b5bb0df   |   MISC:https://security.netapp.com/advisory/ntap-20221007-0001/   |   URL:https://security.netapp.com/advisory/ntap-20221007-0001/   |   MISC:https://ubuntu.com/security/CVE-2021-3772   |   URL:https://ubuntu.com/security/CVE-2021-3772   |   MISC:https://www.oracle.com/security-alerts/cpujul2022.html   |   URL:https://www.oracle.com/security-alerts/cpujul2022.html",Assigned (20210906),"None (candidate not yet proposed)",""
CVE-2021-37720,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.4; Prior to 8.7.1.4, 8.6.0.9, 8.5.0.13, 8.3.0.16, 6.5.4.20, 6.4.4.25. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37721,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.4; Prior to 8.7.1.4, 8.6.0.9, 8.5.0.13, 8.3.0.16, 6.5.4.20, 6.4.4.25. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37722,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.4; Prior to 8.7.1.4, 8.6.0.9, 8.5.0.13, 8.3.0.16, 6.5.4.20, 6.4.4.25. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37723,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba Operating System Software version(s): Prior to 8.7.1.2, 8.6.0.8, 8.5.0.12, 8.3.0.16. Aruba has released patches for ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37724,Candidate,"A remote arbitrary command execution vulnerability was discovered in Aruba Operating System Software version(s): Prior to 8.7.1.2, 8.6.0.8, 8.5.0.12, 8.3.0.16. Aruba has released patches for ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37725,Candidate,"A remote cross-site request forgery (csrf) vulnerability was discovered in Aruba SD-WAN Software and Gateways; Aruba Operating System Software version(s): Prior to 8.6.0.4-2.2.0.4; Prior to 8.8.0.1, 8.7.1.2, 8.6.0.8, 8.5.0.12, 8.3.0.15. Aruba has released patches for Aruba SD-WAN Software and Gateways and ArubaOS that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-280624.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-016.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37726,Candidate,"A remote buffer overflow vulnerability was discovered in HPE Aruba Instant (IAP) version(s): Aruba Instant 8.7.x.x: 8.7.0.0 through 8.7.1.2. Aruba has released patches for Aruba Instant (IAP) that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-917476.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-017.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-017.txt",Assigned (20210729),"None (candidate not yet proposed)",""
CVE-2021-37727,Candidate,"A remote arbitrary command execution vulnerability was discovered in HPE Aruba Instant (IAP) version(s): 6.4.x.x: 6.4.4.8-4.2.4.18 and below; Aruba Instant 6.5.x.x: 6.5.4.20 and below; Aruba Instant 8.5.x.x: 8.5.0.12 and below; Aruba Instant 8.6.x.x: 8.6.0.11 and below; Aruba Instant 8.7.x.x: 8.7.1.3 and below. Aruba has released patches for Aruba Instant (IAP) that address this security vulnerability.","CONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-917476.pdf   |   MISC:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-017.txt   |   URL:https://www.arubanetworks.com/assets/alert/ARUBA-PSA-2021-017.txt",Assigned (20210729),"None (candidate not yet proposed)",""