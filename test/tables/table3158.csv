'ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
607,"Obstruction",Meta,Draft,"An attacker obstructs the interactions between system components. By interrupting or disabling these interactions, an adversary can often force the system into a degraded state or cause the system to stop working as intended. This can cause the system components to be unavailable until the obstruction mitigated.","",,,"","","","","","","::SCOPE:Availability:TECHNICAL IMPACT:Resource Consumption::","","","","","",
608,"Cryptanalysis of Cellular Encryption",Detailed,Draft,"The use of cryptanalytic techniques to derive cryptographic keys or otherwise effectively defeat cellular encryption to reveal traffic content. Some cellular encryption algorithms such as A5/1 and A5/2 (specified for GSM use) are known to be vulnerable to such attacks and commercial tools are available to execute these attacks and decrypt mobile phone conversations in real-time. Newer encryption algorithms in use by UMTS and LTE are stronger and currently believed to be less vulnerable to these types of attacks. Note, however, that an attacker with a Cellular Rogue Base Station can force the use of weak cellular encryption even by newer mobile devices.","",,High,"::NATURE:ChildOf:CAPEC ID:97::","","::None::","::SKILL:Adversaries can rent commercial supercomputer time globally to conduct cryptanalysis on encrypted data captured from mobile devices. Foreign governments have their own cryptanalysis technology and capabilities. Commercial cellular standards for encryption (GSM and CDMA) are also subject to adversary cryptanalysis.:LEVEL:Medium::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Other:NOTE:Reveals IMSI and IMEI for tracking of retransmission device and enables further follow-on attacks by revealing black network control messages. (e.g., revealing IP addresses of enterprise servers for VOIP connectivity)::","::Use of hardened baseband firmware on retransmission device to detect and prevent the use of weak cellular encryption.::Monitor cellular RF interface to detect the usage of weaker-than-expected cellular encryption.::","","::327::","","",
609,"Cellular Traffic Intercept",Detailed,Draft,"Cellular traffic for voice and data from mobile devices and retransmission devices can be intercepted via numerous methods. Malicious actors can deploy their own cellular tower equipment and intercept cellular traffic surreptitiously. Additionally, government agencies of adversaries and malicious actors can intercept cellular traffic via the telecommunications backbone over which mobile traffic is transmitted.","",,Low,"::NATURE:ChildOf:CAPEC ID:157::","","::None::","::SKILL:Adversaries can purchase hardware and software solutions, or create their own solutions, to capture/intercept cellular radio traffic. The cost of a basic Base Transceiver Station (BTS) to broadcast to local mobile cellular radios in mobile devices has dropped to very affordable costs. The ability of commercial cellular providers to monitor for rogue BTS stations is poor in many areas and it is assumed that rogue BTS stations exist in urban areas.:LEVEL:Medium::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:Capture all cellular and RF traffic from mobile and retransmission devices. Move bulk traffic capture to storage area for cryptanalysis of encrypted traffic, and telemetry analysis of non-encrypted data. (packet headers, cellular power data, signal strength, etc.)::","::Encryption of all data packets emanating from the smartphone to a retransmission device via two encrypted tunnels with Suite B cryptography, all the way to the VPN gateway at the datacenter.::","","::311::","TAXONOMY NAME:ATTACK:ENTRY ID:1111:ENTRY NAME:Multi-Factor Authentication Interception::","",
61,"Session Fixation",Detailed,Draft,"The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker. Once the user successfully authenticates to the target software, the attacker uses the (now privileged) session identifier in their own transactions. This attack leverages the fact that the target software either relies on client-generated session identifiers or maintains the same session identifiers after privilege elevation.","",Medium,High,"::NATURE:ChildOf:CAPEC ID:593::","::STEP:1:PHASE:Explore:DESCRIPTION:[Setup the Attack] Setup a session: The attacker has to setup a trap session that provides a valid session identifier, or select an arbitrary identifier, depending on the mechanism employed by the application. A trap session is a dummy session established with the application by the attacker and is used solely for the purpose of obtaining valid session identifiers. The attacker may also be required to periodically refresh the trap session in order to obtain valid session identifiers.:TECHNIQUE:The attacker chooses a predefined identifier that they know.:TECHNIQUE:The attacker creates a trap session for the victim.::STEP:2:PHASE:Experiment:DESCRIPTION:[Attract a Victim] Fixate the session: The attacker now needs to transfer the session identifier from the trap session to the victim by introducing the session identifier into the victim's browser. This is known as fixating the session. The session identifier can be introduced into the victim's browser by leveraging cross site scripting vulnerability, using META tags or setting HTTP response headers in a variety of ways.:TECHNIQUE:Attackers can put links on web sites (such as forums, blogs, or comment forms).:TECHNIQUE:Attackers can establish rogue proxy servers for network protocols that give out the session ID and then redirect the connection to the legitimate service.:TECHNIQUE:Attackers can email attack URLs to potential victims through spam and phishing techniques.::STEP:3:PHASE:Exploit:DESCRIPTION:[Abuse the Victim's Session] Takeover the fixated session: Once the victim has achieved a higher level of privilege, possibly by logging into the application, the attacker can now take over the session using the fixated session identifier.:TECHNIQUE:The attacker loads the predefined session ID into their browser and browses to protected data or functionality.:TECHNIQUE:The attacker loads the predefined session ID into their software and utilizes functionality with the rights of the victim.::","::Session identifiers that remain unchanged when the privilege levels change.::Permissive session management mechanism that accepts random user-generated session identifiers::Predictable session identifiers::","::SKILL:Only basic skills are required to determine and fixate session identifiers in a user's browser. Subsequent attacks may require greater skill levels depending on the attackers' motives.:LEVEL:Low::","::None: No specialized resources are required to execute this type of attack.::","::There are no indicators for the server since a fixated session identifier is similar to an ordinarily generated one. However, too many invalid sessions due to invalid session identifiers is a potential warning.::A client can be suspicious if a received link contains preset session identifiers. However, this depends on the client's knowledge of such an issue. Also, fixation through Cross Site Scripting or hidden form fields is usually difficult to detect.::","::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::","::Use a strict session management mechanism that only accepts locally generated session identifiers: This prevents attackers from fixating session identifiers of their own choice.::Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier, a new one is issued when the level of privilege changes.::Use session identifiers that are difficult to guess or brute-force: One way for the attackers to obtain valid session identifiers is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random, brute-forcing or guessing becomes very difficult.::","::Consider a banking application that issues a session identifier in the URL to a user before login, and uses the same identifier to identify the customer following successful authentication. An attacker can easily leverage session fixation to access a victim's account by having the victim click on a forged link that contains a valid session identifier from a trapped session setup by the attacker. Once the victim is authenticated, the attacker can take over the session and continue with the same levels of privilege as the victim.::An attacker can hijack user sessions, bypass authentication controls and possibly gain administrative privilege by fixating the session of a user authenticating to the Management Console on certain versions of Macromedia JRun 4.0. This can be achieved by setting the session identifier in the user's browser and having the user authenticate to the Management Console. Session fixation is possible since the application server does not regenerate session identifiers when there is a change in the privilege levels. See also: CVE-2004-2182::","::384::664::732::","TAXONOMY NAME:WASC:ENTRY ID:37:ENTRY NAME:Session Fixation::::TAXONOMY NAME:OWASP Attacks:ENTRY NAME:Session fixation::","",
610,"Cellular Data Injection",Standard,Stable,"Adversaries inject data into mobile technology traffic (data flows or signaling data) to disrupt communications or conduct additional surveillance operations.","",,High,"::NATURE:ChildOf:CAPEC ID:240::","","::None::","::SKILL:Often achieved by nation states in conjunction with commercial cellular providers to conduct cellular traffic intercept and possible traffic injection.:LEVEL:High::","","","::SCOPE:Availability:TECHNICAL IMPACT:Resource Consumption:NOTE:Attackers can disrupt or deny mobile technology communications and operations.::SCOPE:Availability:TECHNICAL IMPACT:Modify Data:NOTE:Attackers can inject false data into data or signaling system data flows of communications and operations, or re-route data flows or signaling data for the purpose of further data intercept and capture.::","::Commercial defensive technology to detect and alert to any attempts to modify mobile technology data flows or to inject new data into existing data flows and signaling data.::","","","","",
611,"BitSquatting",Detailed,Draft,"An adversary registers a domain name one bit different than a trusted domain. A BitSquatting attack leverages random errors in memory to direct Internet traffic to adversary-controlled destinations. BitSquatting requires no exploitation or complicated reverse engineering, and is operating system and architecture agnostic. Experimental observations show that BitSquatting popular websites could redirect non-trivial amounts of Internet traffic to a malicious entity.","",Low,Medium,"::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanPrecede:CAPEC ID:543::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine target website] The adversary first determines which website to impersonate, generally one that is trusted and receives a consistent amount of traffic.:TECHNIQUE:Research popular or high traffic websites.::STEP:2:PHASE:Experiment:DESCRIPTION:[Impersonate trusted domain] In order to impersonate the trusted domain, the adversary needs to register the BitSquatted URL.:TECHNIQUE:Register the BitSquatted domain.::STEP:3:PHASE:Exploit:DESCRIPTION:[Wait for a user to visit the domain] Finally, the adversary simply waits for a user to be unintentionally directed to the BitSquatted domain.:TECHNIQUE:Simply wait for an error in memory to occur, redirecting the user to the malicious domain.::","::An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets.::","::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::","","","::SCOPE:Other:TECHNICAL IMPACT:Other:NOTE:Depending on the intention of the adversary, a successful BitSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::","::Authenticate all servers and perform redundant checks when using DNS hostnames.::When possible, use error-correcting (ECC) memory in local devices as non-ECC memory is significantly more vulnerable to faults.::","","","","",
612,"WiFi MAC Address Tracking",Detailed,Draft,"In this attack scenario, the attacker passively listens for WiFi messages and logs the associated Media Access Control (MAC) addresses. These addresses are intended to be unique to each wireless device (although they can be configured and changed by software). Once the attacker is able to associate a MAC address with a particular user or set of users (for example, when attending a public event), the attacker can then scan for that MAC address to track that user in the future.","",,Low,"::NATURE:ChildOf:CAPEC ID:292::","","::None::","::SKILL:Open source and commercial software tools are available and several commercial advertising companies routinely set up tools to collect and monitor MAC addresses.:LEVEL:Low::","","","","::Automatic randomization of WiFi MAC addresses::Frequent changing of handset and retransmission device::","","::201::300::","","",
613,"WiFi SSID Tracking",Detailed,Draft,"In this attack scenario, the attacker passively listens for WiFi management frame messages containing the Service Set Identifier (SSID) for the WiFi network. These messages are frequently transmitted by WiFi access points (e.g., the retransmission device) as well as by clients that are accessing the network (e.g., the handset/mobile device). Once the attacker is able to associate an SSID with a particular user or set of users (for example, when attending a public event), the attacker can then scan for this SSID to track that user in the future.","",,Low,"::NATURE:ChildOf:CAPEC ID:292::","","::None::","::SKILL:Open source and commercial software tools are available and open databases of known WiFi SSID addresses are available online.:LEVEL:Low::","","","","::Do not enable the feature of Hidden SSIDs (also known as Network Cloaking) – this option disables the usual broadcasting of the SSID by the access point, but forces the mobile handset to send requests on all supported radio channels which contains the SSID. The result is that tracking of the mobile device becomes easier since it is transmitting the SSID more frequently.::Frequently change the SSID to new and unrelated values::","","::201::300::","","",
614,"Rooting SIM Cards",Detailed,Draft,"SIM cards are the de facto trust anchor of mobile devices worldwide. The cards protect the mobile identity of subscribers, associate devices with phone numbers, and increasingly store payment credentials, for example in NFC-enabled phones with mobile wallets. This attack leverages over-the-air (OTA) updates deployed via cryptographically-secured SMS messages to deliver executable code to the SIM. By cracking the DES key, an attacker can send properly signed binary SMS messages to a device, which are treated as Java applets and are executed on the SIM. These applets are allowed to send SMS, change voicemail numbers, and query the phone location, among many other predefined functions. These capabilities alone provide plenty of potential for abuse.","",,High,"::NATURE:ChildOf:CAPEC ID:186::","","::A SIM card that relies on the DES cipher.::","::SKILL:This is a sophisticated attack, but detailed techniques are published in open literature.:LEVEL:Medium::","","","::SCOPE:Confidentiality:SCOPE:Integrity:TECHNICAL IMPACT:Execute Unauthorized Commands::","::Upgrade the SIM card to use the state-of-the-art AES or the somewhat outdated 3DES algorithm for OTA.::","","::327::","","",
615,"Evil Twin Wi-Fi Attack",Detailed,Draft,"Adversaries install Wi-Fi equipment that acts as a legitimate Wi-Fi network access point. When a device connects to this access point, Wi-Fi data traffic is intercepted, captured, and analyzed. This also allows the adversary to use adversary-in-the-middle (CAPEC-94) for all communications.","",,Low,"::NATURE:ChildOf:CAPEC ID:616::","","::None::","","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:Intercept and control Wi-Fi data communications to/from mobile device.::","::Commercial defensive technology that monitors for rogue Wi-Fi access points, adversary-in-the-middle attacks, and anomalous activity with the mobile device baseband radios.::","","::300::","","",
616,"Establish Rogue Location",Standard,Stable,"An adversary provides a malicious version of a resource at a location that is similar to the expected location of a legitimate resource. After establishing the rogue location, the adversary waits for a victim to visit the location and access the malicious resource.","",Medium,Medium,"::NATURE:ChildOf:CAPEC ID:154::NATURE:CanPrecede:CAPEC ID:691::","","::A resource is expected to available to the user.::","::SKILL:Adversaries can often purchase low-cost technology to implement rogue access points.:LEVEL:Low::","","","::SCOPE:Confidentiality:SCOPE:Integrity:TECHNICAL IMPACT:Other:NOTE:Successful attacks of this nature can result in a wide variety of consequences and negatively impact confidentiality and integrity based on the adversary's subsequent actions.::","","","::200::","TAXONOMY NAME:ATTACK:ENTRY ID:1036.005:ENTRY NAME:Masquerading: Match Legitimate Name or Location::","",
617,"Cellular Rogue Base Station",Detailed,Draft,"In this attack scenario, the attacker imitates a cellular base station with their own rogue base station equipment. Since cellular devices connect to whatever station has the strongest signal, the attacker can easily convince a targeted cellular device (e.g. the retransmission device) to talk to the rogue base station.","",,Low,"::NATURE:ChildOf:CAPEC ID:616::","","::None::","::SKILL:This technique has been demonstrated by amateur hackers and commercial tools and open source projects are available to automate the attack.:LEVEL:Low::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:Intercept and control cellular data communications to/from mobile device.::","::Passively monitor cellular network connection for real-time threat detection and logging for manual review.::","","","","",
618,"Cellular Broadcast Message Request",Detailed,Draft,"In this attack scenario, the attacker uses knowledge of the target’s mobile phone number (i.e., the number associated with the SIM used in the retransmission device) to cause the cellular network to send broadcast messages to alert the mobile device. Since the network knows which cell tower the target’s mobile device is attached to, the broadcast messages are only sent in the Location Area Code (LAC) where the target is currently located. By triggering the cellular broadcast message and then listening for the presence or absence of that message, an attacker could verify that the target is in (or not in) a given location.","",,Low,"::NATURE:ChildOf:CAPEC ID:292::","","::The attacker must have knowledge of the target’s mobile phone number.::","::SKILL:Open source and commercial tools are available for this attack.:LEVEL:Low::","","","::SCOPE:Other:TECHNICAL IMPACT:Other:NOTE:An attacker could verify that the target is in (or not in) a given location.::","::Frequent changing of mobile number.::","","::201::","","",
619,"Signal Strength Tracking",Detailed,Draft,"In this attack scenario, the attacker passively monitors the signal strength of the target’s cellular RF signal or WiFi RF signal and uses the strength of the signal (with directional antennas and/or from multiple listening points at once) to identify the source location of the signal. Obtaining the signal of the target can be accomplished through multiple techniques such as through Cellular Broadcast Message Request or through the use of IMSI Tracking or WiFi MAC Address Tracking.","",,Low,"::NATURE:ChildOf:CAPEC ID:292::","","","::SKILL:Commercial tools are available.:LEVEL:Low::","","","","","","::201::","","",
62,"Cross Site Request Forgery",Standard,Draft,"An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply riding the existing session cookie.","::TERM:Session Riding:DESCRIPTION:::",High,Very High,"::NATURE:ChildOf:CAPEC ID:21::","::STEP:1:PHASE:Explore:DESCRIPTION:[Explore target website] The attacker first explores the target website to determine pieces of functionality that are of interest to them (e.g. money transfers). The attacker will need a legitimate user account on the target website. It would help to have two accounts.:TECHNIQUE:Use web application debugging tool such as WebScarab, Tamper Data or TamperIE to analyze the information exchanged between the client and the server:TECHNIQUE:Use network sniffing tool such as Wireshark to analyze the information exchanged between the client and the server:TECHNIQUE:View HTML source of web pages that contain links or buttons that perform actions of interest.::STEP:2:PHASE:Experiment:DESCRIPTION:[Create a link that when clicked on, will execute the interesting functionality.] The attacker needs to create a link that will execute some interesting functionality such as transfer money, change a password, etc.:TECHNIQUE:Create a GET request containing all required parameters (e.g. https://www.somebank.com/members/transfer.asp?to=012345678901&amt=10000):TECHNIQUE:Create a form that will submit a POST request (e.g. <form method=POST action=https://www.somebank.com/members/transfer.asp><input type=hidden Name=to value=012345678901/><input type=hidden Name=amt value=10000/><input type=submit src=clickhere.jpg/></form>::STEP:3:PHASE:Exploit:DESCRIPTION:[Convince user to click on link] Finally, the attacker needs to convince a user that is logged into the target website to click on a link to execute the CSRF attack.:TECHNIQUE:Execute a phishing attack and send the user an e-mail convincing them to click on a link.:TECHNIQUE:Execute a stored XSS attack on a website to permanently embed the malicious link into the website.:TECHNIQUE:Execute a stored XSS attack on a website where an XMLHTTPRequest object will automatically execute the attack as soon as a user visits the page. This removes the step of convincing a user to click on a link.:TECHNIQUE:Include the malicious link on the attackers' own website where the user may have to click on the link, or where an XMLHTTPRequest object may automatically execute the attack when a user visits the site.::","","::SKILL:The attacker needs to figure out the exact invocation of the targeted malicious action and then craft a link that performs the said action. Having the user click on such a link is often accomplished by sending an email or posting such a link to a bulletin board or the likes.:LEVEL:Medium::","::All the attacker needs is the exact representation of requests to be made to the application and to be able to get the malicious link across to a victim.::","","::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::","::Use cryptographic tokens to associate a request with a specific action. The token can be regenerated at every request so that if a request with an invalid token is encountered, it can be reliably discarded. The token is considered invalid if it arrived with a request other than the action it was supposed to be associated with.::Although less reliable, the use of the optional HTTP Referrer header can also be used to determine whether an incoming request was actually one that the user is authorized for, in the current context.::Additionally, the user can also be prompted to confirm an action every time an action concerning potentially sensitive data is invoked. This way, even if the attacker manages to get the user to click on a malicious link and request the desired action, the user has a chance to recover by denying confirmation. This solution is also implicitly tied to using a second factor of authentication before performing such actions.::In general, every request must be checked for the appropriate authentication token as well as authorization in the current session context.::","::While a user is logged into their bank account, an attacker can send an email with some potentially interesting content and require the user to click on a link in the email. The link points to or contains an attacker setup script, probably even within an iFrame, that mimics an actual user form submission to perform a malicious activity, such as transferring funds from the victim's account. The attacker can have the script embedded in, or targeted by, the link perform any arbitrary action as the authenticated user. When this script is executed, the targeted application authenticates and accepts the actions based on the victims existing session cookie.See also: Cross-site request forgery (CSRF) vulnerability in util.pl in @Mail WebMail 4.51 allows remote attackers to modify arbitrary settings and perform unauthorized actions as an arbitrary user, as demonstrated using a settings action in the SRC attribute of an IMG element in an HTML e-mail.::","::352::306::664::732::1275::","TAXONOMY NAME:WASC:ENTRY ID:09:ENTRY NAME:Cross-Site Request Forgery::::TAXONOMY NAME:OWASP Attacks:ENTRY NAME:Cross Site Request Forgery (CSRF)::","",
620,"Drop Encryption Level",Standard,Draft,"An attacker forces the encryption level to be lowered, thus enabling a successful attack against the encrypted data.","",,High,"::NATURE:ChildOf:CAPEC ID:212::","","","","","","::SCOPE:Access Control:TECHNICAL IMPACT:Bypass Protection Mechanism::","","","::757::","TAXONOMY NAME:ATTACK:ENTRY ID:1600:ENTRY NAME:Weaken Encryption::","",
621,"Analysis of Packet Timing and Sizes",Detailed,Draft,"An attacker may intercept and log encrypted transmissions for the purpose of analyzing metadata such as packet timing and sizes. Although the actual data may be encrypted, this metadata may reveal valuable information to an attacker. Note that this attack is applicable to VOIP data as well as application data, especially for interactive apps that require precise timing and low-latency (e.g. thin-clients).","",,Low,"::NATURE:ChildOf:CAPEC ID:189::","","::Use of untrusted communication paths enables an attacker to intercept and log communications, including metadata such as packet timing and sizes.::","::SKILL:These attacks generally require sophisticated machine learning techniques and require traffic capture as a prerequisite.:LEVEL:High::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:Derive sensitive information about encrypted data.::","::Distort packet sizes and timing at VPN layer by adding padding to normalize packet sizes and timing delays to reduce information leakage via timing.::","","::201::","","",
622,"Electromagnetic Side-Channel Attack",Detailed,Draft,"In this attack scenario, the attacker passively monitors electromagnetic emanations that are produced by the targeted electronic device as an unintentional side-effect of its processing. From these emanations, the attacker derives information about the data that is being processed (e.g. the attacker can recover cryptographic keys by monitoring emanations associated with cryptographic processing). This style of attack requires proximal access to the device, however attacks have been demonstrated at public conferences that work at distances of up to 10-15 feet. There have not been any significant studies to determine the maximum practical distance for such attacks. Since the attack is passive, it is nearly impossible to detect and the targeted device will continue to operate as normal after a successful attack.","",,Low,"::NATURE:ChildOf:CAPEC ID:189::","","::Proximal access to the device.::","::SKILL:Sophisticated attack, but detailed techniques published in the open literature.:LEVEL:Medium::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:Derive sensitive information about encrypted data. For mobile devices, depending on which keys are compromised, the attacker may be able to decrypt VOIP communications, impersonate the targeted caller, or access the enterprise VPN server.::","::Utilize side-channel resistant implementations of all crypto algorithms.::Strong physical security of all devices that contain secret key information. (even when devices are not in use)::","","::201::","","",
623,"Compromising Emanations Attack",Detailed,Draft,"Compromising Emanations (CE) are defined as unintentional signals which an attacker may intercept and analyze to disclose the information processed by the targeted equipment. Commercial mobile devices and retransmission devices have displays, buttons, microchips, and radios that emit mechanical emissions in the form of sound or vibrations. Capturing these emissions can help an adversary understand what the device is doing.","",,Low,"::NATURE:ChildOf:CAPEC ID:189::","","::Proximal access to the device.::","::SKILL:Sophisticated attack.:LEVEL:High::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:NOTE:Capture vibrations/emissions from the handset or retransmission device display screen to recreat display information from a distance.::","::None are known.::","","::201::","","",
624,"Hardware Fault Injection",Meta,Stable,"The adversary uses disruptive signals or events, or alters the physical environment a device operates in, to cause faulty behavior in electronic devices. This can include electromagnetic pulses, laser pulses, clock glitches, ambient temperature extremes, and more. When performed in a controlled manner on devices performing cryptographic operations, this faulty behavior can be exploited to derive secret key information.","::TERM:Side-Channel Attack:DESCRIPTION:::",Low,High,"","","::Physical access to the system::The adversary must be cognizant of where fault injection vulnerabilities exist in the system in order to leverage them for exploitation.::","::SKILL:Adversaries require non-trivial technical skills to create and implement fault injection attacks. Although this style of attack has become easier (commercial equipment and training classes are available to perform these attacks), they usual require significant setup and experimentation time during which physical access to the device is required.:LEVEL:High::","::The relevant sensors and tools to detect and analyze fault/side-channel data from a system. A tool capable of injecting fault/side-channel data into a system or application.::","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data:TECHNICAL IMPACT:Bypass Protection Mechanism:TECHNICAL IMPACT:Hide Activities:NOTE:An adversary capable of successfully collecting and analyzing sensitive, fault/side-channel information, has compromised the confidentiality of that application or information system data.::SCOPE:Integrity:TECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:If an adversary is able to inject data via a fault or side channel vulnerability towards malicious ends, the integrity of the application or information system will be compromised.::","::Implement robust physical security countermeasures and monitoring.::","","::1247::1248::1256::1319::1332::1334::1338::1351::","","TYPE:Other:NOTE:Considerable effort on the part of the adversary is often required in order to detect and analyze fault/side channel data.::",
625,"Mobile Device Fault Injection",Standard,Draft,"Fault injection attacks against mobile devices use disruptive signals or events (e.g. electromagnetic pulses, laser pulses, clock glitches, etc.) to cause faulty behavior. When performed in a controlled manner on devices performing cryptographic operations, this faulty behavior can be exploited to derive secret key information. Although this attack usually requires physical control of the mobile device, it is non-destructive, and the device can be used after the attack without any indication that secret keys were compromised.","",,,"::NATURE:ChildOf:CAPEC ID:624::","","","::SKILL:Adversaries require non-trivial technical skills to create and implement fault injection attacks on mobile devices. Although this style of attack has become easier (commercial equipment and training classes are available to perform these attacks), they usual require significant setup and experimentation time during which physical access to the device is required. This prerequisite makes the attack challenging to perform (assuming that physical security countermeasures and monitoring are in place).:LEVEL:High::","","","::SCOPE:Confidentiality:SCOPE:Access Control:TECHNICAL IMPACT:Read Data:NOTE:Extract long-term secret keys (e.g. keys used for VPN or WiFi authentication and encryption) to enable decryption of intercepted VOIP traffic.::","::Strong physical security of all devices that contain secret key information. (even when devices are not in use)::Frequent changes to secret keys and certificates.::","","::1247::1248::1256::1319::1332::1334::1338::1351::","","",
626,"Smudge Attack",Detailed,Draft,"Attacks that reveal the password/passcode pattern on a touchscreen device by detecting oil smudges left behind by the user’s fingers.","",,,"::NATURE:ChildOf:CAPEC ID:395::","","::The attacker must have physical access to the device.::","::SKILL:The attacker must know how to make use of these smudges.:LEVEL:Medium::","","","::SCOPE:Access Control:TECHNICAL IMPACT:Bypass Protection Mechanism::","::Strong physical security of the device.::","","","","",
627,"Counterfeit GPS Signals",Standard,Draft,"An adversary attempts to deceive a GPS receiver by broadcasting counterfeit GPS signals, structured to resemble a set of normal GPS signals. These spoofed signals may be structured in such a way as to cause the receiver to estimate its position to be somewhere other than where it actually is, or to be located where it is but at a different time, as determined by the adversary.","",Low,High,"::NATURE:ChildOf:CAPEC ID:148::","","::The target must be relying on valid GPS signal to perform critical operations.::","::SKILL:The ability to spoof GPS signals is not trival.:LEVEL:High::","::Ability to create spoofed GPS signals.::","","::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::","","","","","",
628,"Carry-Off GPS Attack",Detailed,Draft,"A common form of a GPS spoofing attack, commonly termed a carry-off attack begins with an adversary broadcasting signals synchronized with the genuine signals observed by the target receiver. The power of the counterfeit signals is then gradually increased and drawn away from the genuine signals. Over time, the adversary can carry the target away from their intended destination and toward a location chosen by the adversary.","",Low,High,"::NATURE:ChildOf:CAPEC ID:627::","","::The target must be relying on valid GPS signal to perform critical operations.::","::SKILL:This attack requires advanced knoweldge in GPS technology.:LEVEL:High::","","","","","::A proof-of-concept attack was successfully performed in June, 2013, when the luxury yacht White Rose was misdirected with spoofed GPS signals from Monaco to the island of Rhodes by a group of aerospace engineering students from the Cockrell School of Engineering at the University of Texas in Austin. The students were aboard the yacht, allowing their spoofing equipment to gradually overpower the signal strengths of the actual GPS constellation satellites, altering the course of the yacht.::","","","",
63,"Cross-Site Scripting (XSS)",Standard,Draft,"An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.","",High,Very High,"::NATURE:ChildOf:CAPEC ID:242::NATURE:CanPrecede:CAPEC ID:107::","::STEP:1:PHASE:Explore:DESCRIPTION:[Survey the application for user-controllable inputs] Using a browser or an automated tool, an attacker follows all public links and actions on a web site. They record all the links, the forms, the resources accessed and all other potential entry-points for the web application.:TECHNIQUE:Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.:TECHNIQUE:Use a proxy tool to record all links visited during a manual traversal of the web application.:TECHNIQUE:Use a browser to manually explore the website and analyze how it is constructed. Many browsers' plugins are available to facilitate the analysis or automate the discovery.::STEP:2:PHASE:Experiment:DESCRIPTION:[Probe identified potential entry points for XSS vulnerability] The attacker uses the entry points gathered in the Explore phase as a target list and injects various common script payloads to determine if an entry point actually represents a vulnerability and to characterize the extent to which the vulnerability can be exploited.:TECHNIQUE:Use a list of XSS probe strings to inject script in parameters of known URLs. If possible, the probe strings contain a unique identifier.:TECHNIQUE:Use a proxy tool to record results of manual input of XSS probes in known URLs.:TECHNIQUE:Use a list of XSS probe strings to inject script into UI entry fields. If possible, the probe strings contain a unique identifier.:TECHNIQUE:Use a list of XSS probe strings to inject script into resources accessed by the application. If possible, the probe strings contain a unique identifier.::STEP:3:PHASE:Exploit:DESCRIPTION:[Steal session IDs, credentials, page content, etc.] As the attacker succeeds in exploiting the vulnerability, they can choose to steal user's credentials in order to reuse or to analyze them later on.:TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and sends document information to the attacker.:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker's server and then causes the browser to execute appropriately.::STEP:4:PHASE:Exploit:DESCRIPTION:[Forceful browsing] When the attacker targets the current application or another one (through CSRF vulnerabilities), the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws, but it can also be used to create a widespread attack against a particular website on the user's current network (Internet or not).:TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and performs actions on the same web site:TECHNIQUE:Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker's server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities).::STEP:5:PHASE:Exploit:DESCRIPTION:[Content spoofing] By manipulating the content, the attacker targets the information that the user would like to get from the website.:TECHNIQUE:Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and exposes attacker-modified invalid information to the user on the current web page.::","::Target client software must be a client that allows scripting communication from remote hosts, such as a JavaScript-enabled Web Browser.::","::SKILL:To achieve a redirection and use of less trusted source, an attacker can simply place a script in bulletin board, blog, wiki, or other user-generated content site that are echoed back to other client machines.:LEVEL:Low::SKILL:Exploiting a client side vulnerability to inject malicious scripts into the browser's executable process.:LEVEL:High::","::Ability to deploy a custom hostile service for access by targeted clients. Ability to communicate synchronously or asynchronously with client machine.::","","::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Execute Unauthorized Commands:NOTE:Run Arbitrary Code::SCOPE:Integrity:TECHNICAL IMPACT:Modify Data::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::","::Design: Use browser technologies that do not allow client side scripting.::Design: Utilize strict type, character, and encoding enforcement::Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.::Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.::Implementation: Perform input validation for all remote content.::Implementation: Perform output validation for all remote content.::Implementation: Session tokens for specific host::Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.::","::Classic phishing attacks lure users to click on content that appears trustworthy, such as logos, and links that seem to go to their trusted financial institutions and online auction sites. But instead the attacker appends malicious scripts into the otherwise innocent appearing resources. The HTML source for a standard phishing attack looks like this: <a href=www.exampletrustedsite.com?Name=<script>maliciousscript</script>>Trusted Site</a> When the user clicks the link, the appended script also executes on the local user's machine.::","::79::20::","TAXONOMY NAME:WASC:ENTRY ID:08:ENTRY NAME:Cross-Site Scripting::::TAXONOMY NAME:OWASP Attacks:ENTRY NAME:Cross Site Scripting (XSS)::","",
630,"TypoSquatting",Detailed,Draft,"An adversary registers a domain name with at least one character different than a trusted domain. A TypoSquatting attack takes advantage of instances where a user mistypes a URL (e.g. www.goggle.com) or not does visually verify a URL before clicking on it (e.g. phishing attack). As a result, the user is directed to an adversary-controlled destination. TypoSquatting does not require an attack against the trusted domain or complicated reverse engineering.","",Low,Medium,"::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanPrecede:CAPEC ID:543::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine target website] The adversary first determines which website to impersonate, generally one that is trusted and receives a consistent amount of traffic.:TECHNIQUE:Research popular or high traffic websites.::STEP:2:PHASE:Experiment:DESCRIPTION:[Impersonate trusted domain] In order to impersonate the trusted domain, the adversary needs to register the TypoSquatted URL.:TECHNIQUE:Register the TypoSquatted domain.::STEP:3:PHASE:Exploit:DESCRIPTION:[Deceive user into visiting domain] Finally, the adversary needs to deceive a user into visiting the TypoSquatted domain.:TECHNIQUE:Execute a phishing attack and send a user an e-mail convincing the user to click on a link leading the user to the TypoSquatted domain.:TECHNIQUE:Assume that a user will incorrectly type the legitimate URL, leading the user to the TypoSquatted domain.::","::An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets.::","::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::","","","::SCOPE:Other:TECHNICAL IMPACT:Other:NOTE:Depending on the intention of the adversary, a successful TypoSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::","::Authenticate all servers and perform redundant checks when using DNS hostnames.::Purchase potential TypoSquatted domains and forward to legitimate domain.::","::An adversary sends an email, impersonating paypal.com, to a user stating that they have just received a money transfer and to click the given link to obtain their money. However, the link the in email is paypa1.com instead of paypal.com, which the user clicks without fully reading the link. The user is directed to the adversary's website, which appears as if it is the legitimate paypal.com login page. The user thinks they are logging into their account, but have actually just given their paypal credentials to the adversary. The adversary can now use the user's legitimate paypal credentials to log into the user's account and steal any money which may be in the account. TypoSquatting vulnerability allows an adversary to impersonate a trusted domain and trick a user into visiting the malicious website to steal user credentials.::","","","",
631,"SoundSquatting",Detailed,Draft,"An adversary registers a domain name that sounds the same as a trusted domain, but has a different spelling. A SoundSquatting attack takes advantage of a user's confusion of the two words to direct Internet traffic to adversary-controlled destinations. SoundSquatting does not require an attack against the trusted domain or complicated reverse engineering.","::TERM:Homophone Attack:DESCRIPTION:::",Low,Medium,"::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanPrecede:CAPEC ID:543::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine target website] The adversary first determines which website to impersonate, generally one that is trusted, receives a consistent amount of traffic, and is a homophone.:TECHNIQUE:Research popular or high traffic websites which are also homophones.::STEP:2:PHASE:Experiment:DESCRIPTION:[Impersonate trusted domain] In order to impersonate the trusted domain, the adversary needs to register the SoundSquatted URL.:TECHNIQUE:Register the SoundSquatted domain.::STEP:3:PHASE:Exploit:DESCRIPTION:[Deceive user into visiting domain] Finally, the adversary needs to deceive a user into visiting the SoundSquatted domain.:TECHNIQUE:Execute a phishing attack and send a user an e-mail convincing the user to click on a link leading the user to the SoundSquatted domain.:TECHNIQUE:Assume that a user will unintentionally use the homophone in the URL, leading the user to the SoundSquatted domain.::","::An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets.::","::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::","","","::SCOPE:Other:TECHNICAL IMPACT:Other:NOTE:Depending on the intention of the adversary, a successful SoundSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::","::Authenticate all servers and perform redundant checks when using DNS hostnames.::Purchase potential SoundSquatted domains and forward to legitimate domain.::","::An adversary sends an email, impersonating the popular banking website guaranteebanking.com, to a user stating that they have just received a new deposit and to click the given link to confirm the deposit. However, the link the in email is guarantybanking.com instead of guaranteebanking.com, which the user clicks without fully reading the link. The user is directed to the adversary's website, which appears as if it is the legitimate guaranteebanking.com login page. The user thinks they are logging into their account, but have actually just given their guaranteebanking.com credentials to the adversary. The adversary can now use the user's legitimate guaranteebanking.com credentials to log into the user's account and steal any money which may be in the account.See also: SoundSquatting vulnerability allows an adversary to impersonate a trusted domain and leverages a user's confusion between the meaning of two words which are pronounced the same into visiting the malicious website to steal user credentials.::","","","",
632,"Homograph Attack via Homoglyphs",Detailed,Draft,"An adversary registers a domain name containing a homoglyph, leading the registered domain to appear the same as a trusted domain. A homograph attack leverages the fact that different characters among various character sets look the same to the user. Homograph attacks must generally be combined with other attacks, such as phishing attacks, in order to direct Internet traffic to the adversary-controlled destinations.","::TERM:Homoglyph Attack:DESCRIPTION:::",Low,Medium,"::NATURE:ChildOf:CAPEC ID:616::NATURE:CanPrecede:CAPEC ID:89::NATURE:CanPrecede:CAPEC ID:543::","::STEP:1:PHASE:Explore:DESCRIPTION:[Determine target website] The adversary first determines which website to impersonate, generally one that is trusted and receives a consistent amount of traffic.:TECHNIQUE:Research popular or high traffic websites.::STEP:2:PHASE:Experiment:DESCRIPTION:[Impersonate trusted domain] In order to impersonate the trusted domain, the adversary needs to register the URL containing the homoglpyh character(s).:TECHNIQUE:Register the Homograph domain.::STEP:3:PHASE:Exploit:DESCRIPTION:[Deceive user into visiting domain] Finally, the adversary needs to deceive a user into visiting the Homograph domain.:TECHNIQUE:Execute a phishing attack and send a user an e-mail convincing the to click on a link leading the user to the malicious domain.::","::An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets.::","::SKILL:Adversaries must be able to register DNS hostnames/URL’s.:LEVEL:Low::","","","::SCOPE:Other:TECHNICAL IMPACT:Other:NOTE:Depending on the intention of the adversary, a successful Homograph attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.::","::Authenticate all servers and perform redundant checks when using DNS hostnames.::Utilize browsers that can warn users if URLs contain characters from different character sets.::","::An adversary sends an email, impersonating bankofamerica.com to a user stating that they have just received a new deposit and to click the given link to confirm the deposit. However, the link the in email is bankofamerica.com, where the 'a' and 'e' characters are Cyrillic and not ASCII, instead of bankofamerica.com (all ASCII), which the user clicks after carefully reading the URL, making sure that typosquatting and soundsquatting attacks are not being leveraged against them. The user is directed to the adversary's website, which appears as if it is the legitimate bankofamerica.com login page. The user thinks they are logging into their account, but have actually just given their bankofamerica.com credentials to the adversary. The adversary can now use the user's legitimate bankofamerica.com credentials to log into the user's account and steal any money which may be in the account. Homograph vulnerability allows an adversary to impersonate a trusted domain by leveraging homoglyphs and tricking a user into visiting the malicious website to steal user credentials.See also: CVE-2012-0584 CVE-2009-0652 CVE-2005-0233 CVE-2005-0234 CVE-2005-0235 CVE-2005-0236 CVE-2005-0237 CVE-2005-0238::","::1007::","","",
633,"Token Impersonation",Detailed,Stable,"An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.","",,Medium,"::NATURE:ChildOf:CAPEC ID:194::","","::This pattern of attack is only applicable when a downstream user leverages tokens to verify identity, and then takes action based on that identity.::","","","","::SCOPE:Integrity:TECHNICAL IMPACT:Alter Execution Logic:NOTE:By faking the source of data or services, an adversary can cause a target to make incorrect decisions about how to proceed.::SCOPE:Integrity:TECHNICAL IMPACT:Gain Privileges:NOTE:By impersonating identities that have an increased level of access, an adversary gain privilege that they many not have otherwise had.::SCOPE:Integrity:TECHNICAL IMPACT:Hide Activities:NOTE:Faking the source of data or services can be used to create a false trail in logs as the target will associated any actions with the impersonated identity instead of the adversary.::","","","::287::1270::","TAXONOMY NAME:ATTACK:ENTRY ID:1134:ENTRY NAME:Access Token Manipulation::","",
634,"Probe Audio and Video Peripherals",Detailed,Stable,"The adversary exploits the target system's audio and video functionalities through malware or scheduled tasks. The goal is to capture sensitive information about the target for financial, personal, political, or other gains which is accomplished by collecting communication data between two parties via the use of peripheral devices (e.g. microphones and webcams) or applications with audio and video capabilities (e.g. Skype) on a system.","",Low,High,"::NATURE:ChildOf:CAPEC ID:651::NATURE:ChildOf:CAPEC ID:545::","","::Knowledge of the target device's or application’s vulnerabilities that can be capitalized on with malicious code. The adversary must be able to place the malicious code on the target device.::","::SKILL:To deploy a hidden process or malware on the system to automatically collect audio and video data.:LEVEL:High::","","","::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::","::Prevent unknown code from executing on a system through the use of an allowlist policy.::Patch installed applications as soon as new updates become available.::","::An adversary can capture audio and video, and transmit the recordings to a C2 server or a similar capability.::An adversary can capture and record from audio peripherals in a vehicle via a Car Whisperer attack. If an adversary is within close proximity to a vehicle with Bluetooth capabilities, they may attempt to connect to the hands-free system when it is in pairing mode. With successful authentication, if an authentication system is present at all, an adversary may be able to play music/voice recordings, as well begin a recording and capture conversations happening inside the vehicle. Successful authentication relies on the pairing security key being set to a default value, or by brute force (which may be less practical in an outside environment) Depending on the sensitivity of the information being discussed, this scenario can be extremely compromising.::An adversary may also use a technique called Bluebugging, which is similar to Bluesnarfing but requires the adversary to be between 10-15 meters of the target device. Bluebugging creates a backdoor for an attacker to listen/record phone calls, forward calls, send SMS and retrieve the phonebook.::","::267::","TAXONOMY NAME:ATTACK:ENTRY ID:1123:ENTRY NAME:Audio Capture::::TAXONOMY NAME:ATTACK:ENTRY ID:1125:ENTRY NAME:Video Capture::","",
635,"Alternative Execution Due to Deceptive Filenames",Standard,Draft,"The extension of a file name is often used in various contexts to determine the application that is used to open and use it. If an attacker can cause an alternative application to be used, it may be able to execute malicious code, cause a denial of service or expose sensitive information.","",,High,"::NATURE:ChildOf:CAPEC ID:165::","","::The use of the file must be controlled by the file extension.::","","","","","::Applications should insure that the content of the file is consistent with format it is expecting, and not depend solely on the file extension.::","","::162::","TAXONOMY NAME:ATTACK:ENTRY ID:1036.007:ENTRY NAME:Masquerading: Double File Extension::","",