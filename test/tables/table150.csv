CWE-ID,Name,Weakness Abstraction,Status,Description
22,Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),Base,Stable,The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.
23,Relative Path Traversal,Base,Draft,The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as .. that can resolve to a location that is outside of that directory.
36,Absolute Path Traversal,Base,Draft,The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as /abs/path that can resolve to a location that is outside of that directory.
77,Improper Neutralization of Special Elements used in a Command ('Command Injection'),Class,Draft,The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.
78,Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),Base,Stable,The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.
79,Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),Base,Stable,The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.
88,Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'),Base,Draft,The product constructs a string for a command to executed by a separate component in another control sphere, but it does not properly delimit the intended arguments, options, or switches within that command string.
89,Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),Base,Stable,The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.
90,Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection'),Base,Draft,The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.
91,XML Injection (aka Blind XPath Injection),Base,Draft,The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.
99,Improper Control of Resource Identifiers ('Resource Injection'),Class,Draft,The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.
119,Improper Restriction of Operations within the Bounds of a Memory Buffer,Class,Stable,The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.
120,Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'),Base,Incomplete,The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.
123,Write-what-where Condition,Base,Draft,Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.
125,Out-of-bounds Read,Base,Draft,The product reads data past the end, or before the beginning, of the intended buffer.
129,Improper Validation of Array Index,Variant,Draft,The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.
130,Improper Handling of Length Parameter Inconsistency,Base,Incomplete,The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.
131,Incorrect Calculation of Buffer Size,Base,Draft,The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.
134,Use of Externally-Controlled Format String,Base,Draft,The product uses a function that accepts a format string as an argument, but the format string originates from an external source.
170,Improper Null Termination,Base,Incomplete,The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.
194,Unexpected Sign Extension,Variant,Incomplete,The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.
195,Signed to Unsigned Conversion Error,Variant,Draft,The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.
196,Unsigned to Signed Conversion Error,Variant,Draft,The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive.
197,Numeric Truncation Error,Base,Incomplete,Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.
213,Exposure of Sensitive Information Due to Incompatible Policies,Base,Draft,The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.
248,Uncaught Exception,Base,Draft,An exception is thrown from a function, but it is not caught.
259,Use of Hard-coded Password,Variant,Draft,The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.
284,Improper Access Control,Pillar,Incomplete,The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.
285,Improper Authorization,Class,Draft,The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.
287,Improper Authentication,Class,Draft,When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.
288,Authentication Bypass Using an Alternate Path or Channel,Base,Incomplete,A product requires authentication, but the product has an alternate path or channel that does not require authentication.
311,Missing Encryption of Sensitive Data,Class,Draft,The product does not encrypt sensitive or critical information before storage or transmission.
321,Use of Hard-coded Cryptographic Key,Variant,Draft,The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.
359,Exposure of Private Personal Information to an Unauthorized Actor,Base,Incomplete,The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.
366,Race Condition within a Thread,Base,Draft,If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.
369,Divide By Zero,Base,Draft,The product divides a value by zero.
391,Unchecked Error Condition,Base,Incomplete,[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDER CWE-252, CWE-248, OR CWE-1069.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed.
392,Missing Report of Error Condition,Base,Draft,The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.
404,Improper Resource Shutdown or Release,Class,Draft,The product does not release or incorrectly releases a resource before it is made available for re-use.
415,Double Free,Variant,Draft,The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.
416,Use After Free,Variant,Stable,Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.
424,Improper Protection of Alternate Path,Class,Draft,The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources.
434,Unrestricted Upload of File with Dangerous Type,Base,Draft,The product allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.
456,Missing Initialization of a Variable,Variant,Draft,The product does not initialize critical variables, which causes the execution environment to use unexpected values.
457,Use of Uninitialized Variable,Variant,Draft,The code uses a variable that has not been initialized, leading to unpredictable or unintended results.
502,Deserialization of Untrusted Data,Base,Draft,The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.
543,Use of Singleton Pattern Without Synchronization in a Multithreaded Context,Variant,Incomplete,The product uses the singleton pattern when creating a resource within a multithreaded environment.
562,Return of Stack Variable Address,Base,Draft,A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.
567,Unsynchronized Access to Shared Data in a Multithreaded Context,Base,Draft,The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.
606,Unchecked Input for Loop Condition,Base,Draft,The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.
611,Improper Restriction of XML External Entity Reference,Base,Draft,The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.
624,Executable Regular Expression Error,Base,Incomplete,The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.
639,Authorization Bypass Through User-Controlled Key,Base,Incomplete,The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.
643,Improper Neutralization of Data within XPath Expressions ('XPath Injection'),Base,Incomplete,The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
652,Improper Neutralization of Data within XQuery Expressions ('XQuery Injection'),Base,Incomplete,The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
662,Improper Synchronization,Class,Draft,The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.
665,Improper Initialization,Class,Draft,The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.
667,Improper Locking,Class,Draft,The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.
672,Operation on a Resource after Expiration or Release,Class,Draft,The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.
681,Incorrect Conversion between Numeric Types,Base,Draft,When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.
682,Incorrect Calculation,Pillar,Draft,The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.
703,Improper Check or Handling of Exceptional Conditions,Pillar,Incomplete,The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.
704,Incorrect Type Conversion or Cast,Class,Incomplete,The product does not correctly convert an object, resource, or structure from one type to a different type.
732,Incorrect Permission Assignment for Critical Resource,Class,Draft,The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
761,Free of Pointer not at Start of Buffer,Variant,Incomplete,The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer.
762,Mismatched Memory Management Routines,Variant,Incomplete,The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.
763,Release of Invalid Pointer or Reference,Base,Incomplete,The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.
764,Multiple Locks of a Critical Resource,Base,Incomplete,The product locks a critical resource more times than intended, leading to an unexpected state in the system.
772,Missing Release of Resource after Effective Lifetime,Base,Draft,The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.
775,Missing Release of File Descriptor or Handle after Effective Lifetime,Variant,Incomplete,The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.
786,Access of Memory Location Before Start of Buffer,Base,Incomplete,The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.
787,Out-of-bounds Write,Base,Draft,The product writes data past the end, or before the beginning, of the intended buffer.
788,Access of Memory Location After End of Buffer,Base,Incomplete,The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer.
798,Use of Hard-coded Credentials,Base,Draft,The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.
805,Buffer Access with Incorrect Length Value,Base,Incomplete,The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.
820,Missing Synchronization,Base,Incomplete,The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.
821,Incorrect Synchronization,Base,Incomplete,The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.
822,Untrusted Pointer Dereference,Base,Incomplete,The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.
823,Use of Out-of-range Pointer Offset,Base,Incomplete,The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.
824,Access of Uninitialized Pointer,Base,Incomplete,The product accesses or uses a pointer that has not been initialized.
825,Expired Pointer Dereference,Base,Incomplete,The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.
862,Missing Authorization,Class,Incomplete,The product does not perform an authorization check when an actor attempts to access a resource or perform an action.
863,Incorrect Authorization,Class,Incomplete,The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.
908,Use of Uninitialized Resource,Base,Incomplete,The product uses or accesses a resource that has not been initialized.
915,Improperly Controlled Modification of Dynamically-Determined Object Attributes,Base,Incomplete,The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.
917,Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection'),Base,Incomplete,The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.
1051,Initialization with Hard-Coded Network Resource Configuration Data,Base,Incomplete,The product initializes data using hard-coded values that act as network resource identifiers.
1058,Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element,Base,Incomplete,The code contains a function or method that operates in a multi-threaded environment but owns an unsafe non-final static storable or member data element.
1096,Singleton Class Instance Creation without Proper Locking or Synchronization,Variant,Incomplete,The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.
