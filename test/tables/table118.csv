CWE-ID,Name,Weakness Abstraction,Status,Description
601,URL Redirection to Untrusted Site ('Open Redirect'),Base,Draft,A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.
602,Client-Side Enforcement of Server-Side Security,Class,Draft,The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.
603,Use of Client-Side Authentication,Base,Draft,A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.
605,Multiple Binds to the Same Port,Base,Draft,When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed.
606,Unchecked Input for Loop Condition,Base,Draft,The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.
607,Public Static Final Field References Mutable Object,Variant,Draft,A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package.
608,Struts: Non-private Field in ActionForm Class,Variant,Draft,An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter.
609,Double-Checked Locking,Base,Draft,The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.
610,Externally Controlled Reference to a Resource in Another Sphere,Class,Draft,The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.
611,Improper Restriction of XML External Entity Reference,Base,Draft,The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.
612,Improper Authorization of Index Containing Sensitive Information,Base,Draft,The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information.
613,Insufficient Session Expiration,Base,Incomplete,According to WASC, Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.
614,Sensitive Cookie in HTTPS Session Without 'Secure' Attribute,Variant,Draft,The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.
615,Inclusion of Sensitive Information in Source Code Comments,Variant,Incomplete,While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.
616,Incomplete Identification of Uploaded File Variables (PHP),Variant,Incomplete,The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.
617,Reachable Assertion,Base,Draft,The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.
618,Exposed Unsafe ActiveX Method,Base,Incomplete,An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain).
619,Dangling Database Cursor ('Cursor Injection'),Base,Incomplete,If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor dangling.
620,Unverified Password Change,Base,Draft,When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.
621,Variable Extraction Error,Base,Incomplete,The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables.
622,Improper Validation of Function Hook Arguments,Variant,Draft,The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.
623,Unsafe ActiveX Control Marked Safe For Scripting,Variant,Draft,An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.
624,Executable Regular Expression Error,Base,Incomplete,The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.
625,Permissive Regular Expression,Base,Draft,The product uses a regular expression that does not sufficiently restrict the set of allowed values.
626,Null Byte Interaction Error (Poison Null Byte),Variant,Draft,The product does not properly handle null bytes or NUL characters when passing data between different representations or components.
627,Dynamic Variable Evaluation,Base,Incomplete,In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions.
628,Function Call with Incorrectly Specified Arguments,Base,Draft,The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses.
636,Not Failing Securely ('Failing Open'),Class,Draft,When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.
637,Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism'),Class,Draft,The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.
638,Not Using Complete Mediation,Class,Draft,The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.
639,Authorization Bypass Through User-Controlled Key,Base,Incomplete,The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.
640,Weak Password Recovery Mechanism for Forgotten Password,Base,Incomplete,The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.
641,Improper Restriction of Names for Files and Other Resources,Base,Incomplete,The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.
642,External Control of Critical State Data,Class,Draft,The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.
643,Improper Neutralization of Data within XPath Expressions ('XPath Injection'),Base,Incomplete,The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
644,Improper Neutralization of HTTP Headers for Scripting Syntax,Variant,Incomplete,The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.
645,Overly Restrictive Account Lockout Mechanism,Base,Incomplete,The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.
646,Reliance on File Name or Extension of Externally-Supplied File,Variant,Incomplete,The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.
647,Use of Non-Canonical URL Paths for Authorization Decisions,Variant,Incomplete,The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.
648,Incorrect Use of Privileged APIs,Base,Incomplete,The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.
649,Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking,Base,Incomplete,The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.
650,Trusting HTTP Permission Methods on the Server Side,Variant,Incomplete,The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.
651,Exposure of WSDL File Containing Sensitive Information,Variant,Incomplete,The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect and what types they return).
652,Improper Neutralization of Data within XQuery Expressions ('XQuery Injection'),Base,Incomplete,The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
653,Improper Isolation or Compartmentalization,Base,Draft,The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.
654,Reliance on a Single Factor in a Security Decision,Base,Draft,A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.
655,Insufficient Psychological Acceptability,Base,Draft,The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.
656,Reliance on Security Through Obscurity,Base,Draft,The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.
657,Violation of Secure Design Principles,Class,Draft,The product violates well-established principles for secure design.
662,Improper Synchronization,Class,Draft,The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.
663,Use of a Non-reentrant Function in a Concurrent Context,Base,Draft,The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.
664,Improper Control of a Resource Through its Lifetime,Pillar,Draft,The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.
665,Improper Initialization,Class,Draft,The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.
666,Operation on Resource in Wrong Phase of Lifetime,Class,Draft,The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.
667,Improper Locking,Class,Draft,The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.
668,Exposure of Resource to Wrong Sphere,Class,Draft,The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.
669,Incorrect Resource Transfer Between Spheres,Class,Draft,The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.
670,Always-Incorrect Control Flow Implementation,Class,Draft,The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.
671,Lack of Administrator Control over Security,Class,Draft,The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.
672,Operation on a Resource after Expiration or Release,Class,Draft,The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.
673,External Influence of Sphere Definition,Class,Draft,The product does not prevent the definition of control spheres from external actors.
674,Uncontrolled Recursion,Class,Draft,The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack.
675,Multiple Operations on Resource in Single-Operation Context,Class,Draft,The product performs the same operation on a resource two or more times, when the operation should only be applied once.
676,Use of Potentially Dangerous Function,Base,Draft,The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.
680,Integer Overflow to Buffer Overflow,Compound,Draft,The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.
681,Incorrect Conversion between Numeric Types,Base,Draft,When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.
682,Incorrect Calculation,Pillar,Draft,The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.
683,Function Call With Incorrect Order of Arguments,Variant,Draft,The product calls a function, procedure, or routine, but the caller specifies the arguments in an incorrect order, leading to resultant weaknesses.
684,Incorrect Provision of Specified Functionality,Class,Draft,The code does not function according to its published specifications, potentially leading to incorrect usage.
685,Function Call With Incorrect Number of Arguments,Variant,Draft,The product calls a function, procedure, or routine, but the caller specifies too many arguments, or too few arguments, which may lead to undefined behavior and resultant weaknesses.
686,Function Call With Incorrect Argument Type,Variant,Draft,The product calls a function, procedure, or routine, but the caller specifies an argument that is the wrong data type, which may lead to resultant weaknesses.
687,Function Call With Incorrectly Specified Argument Value,Variant,Draft,The product calls a function, procedure, or routine, but the caller specifies an argument that contains the wrong value, which may lead to resultant weaknesses.
688,Function Call With Incorrect Variable or Reference as Argument,Variant,Draft,The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.
689,Permission Race Condition During Resource Copy,Compound,Draft,The product, while copying or cloning a resource, does not set the resource's permissions or access control until the copy is complete, leaving the resource exposed to other spheres while the copy is taking place.
690,Unchecked Return Value to NULL Pointer Dereference,Compound,Draft,The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.
691,Insufficient Control Flow Management,Pillar,Draft,The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways.
692,Incomplete Denylist to Cross-Site Scripting,Compound,Draft,The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed.
693,Protection Mechanism Failure,Pillar,Draft,The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.
694,Use of Multiple Resources with Duplicate Identifier,Base,Incomplete,The product uses multiple resources that can have the same identifier, in a context in which unique identifiers are required.
695,Use of Low-Level Functionality,Base,Incomplete,The product uses low-level functionality that is explicitly prohibited by the framework or specification under which the product is supposed to operate.
696,Incorrect Behavior Order,Class,Incomplete,The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.
697,Incorrect Comparison,Pillar,Incomplete,The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.
698,Execution After Redirect (EAR),Base,Incomplete,The web application sends a redirect to another location, but instead of exiting, it executes additional code.
703,Improper Check or Handling of Exceptional Conditions,Pillar,Incomplete,The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.
704,Incorrect Type Conversion or Cast,Class,Incomplete,The product does not correctly convert an object, resource, or structure from one type to a different type.
705,Incorrect Control Flow Scoping,Class,Incomplete,The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition.
706,Use of Incorrectly-Resolved Name or Reference,Class,Incomplete,The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.
707,Improper Neutralization,Pillar,Incomplete,The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.
708,Incorrect Ownership Assignment,Base,Incomplete,The product assigns an owner to a resource, but the owner is outside of the intended control sphere.
710,Improper Adherence to Coding Standards,Pillar,Incomplete,The product does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.
732,Incorrect Permission Assignment for Critical Resource,Class,Draft,The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.
733,Compiler Optimization Removal or Modification of Security-critical Code,Base,Incomplete,The developer builds a security-critical protection mechanism into the software, but the compiler optimizes the program such that the mechanism is removed or modified.
749,Exposed Dangerous Method or Function,Base,Incomplete,The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.
754,Improper Check for Unusual or Exceptional Conditions,Class,Incomplete,The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.
755,Improper Handling of Exceptional Conditions,Class,Incomplete,The product does not handle or incorrectly handles an exceptional condition.
756,Missing Custom Error Page,Base,Incomplete,The product does not return custom error pages to the user, possibly exposing sensitive information.
757,Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade'),Base,Incomplete,A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.
758,Reliance on Undefined, Unspecified, or Implementation-Defined Behavior,Class,Incomplete,The product uses an API function, data structure, or other entity in a way that relies on properties that are not always guaranteed to hold for that entity.
759,Use of a One-Way Hash without a Salt,Variant,Incomplete,The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.
760,Use of a One-Way Hash with a Predictable Salt,Variant,Incomplete,The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.
761,Free of Pointer not at Start of Buffer,Variant,Incomplete,The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer.
762,Mismatched Memory Management Routines,Variant,Incomplete,The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.
763,Release of Invalid Pointer or Reference,Base,Incomplete,The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.
764,Multiple Locks of a Critical Resource,Base,Incomplete,The product locks a critical resource more times than intended, leading to an unexpected state in the system.
765,Multiple Unlocks of a Critical Resource,Base,Incomplete,The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.
766,Critical Data Element Declared Public,Variant,Incomplete,The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.
767,Access to Critical Private Variable via Public Method,Variant,Incomplete,The product defines a public method that reads or modifies a private variable.
768,Incorrect Short Circuit Evaluation,Variant,Incomplete,The product contains a conditional statement with multiple logical expressions in which one of the non-leading expressions may produce side effects. This may lead to an unexpected state in the program after the execution of the conditional, because short-circuiting logic may prevent the side effects from occurring.
770,Allocation of Resources Without Limits or Throttling,Base,Incomplete,The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.
771,Missing Reference to Active Allocated Resource,Base,Incomplete,The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed.
772,Missing Release of Resource after Effective Lifetime,Base,Draft,The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.
773,Missing Reference to Active File Descriptor or Handle,Variant,Incomplete,The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed.
774,Allocation of File Descriptors or Handles Without Limits or Throttling,Variant,Incomplete,The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.
775,Missing Release of File Descriptor or Handle after Effective Lifetime,Variant,Incomplete,The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.
776,Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion'),Base,Draft,The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.
777,Regular Expression without Anchors,Variant,Incomplete,The product uses a regular expression to perform neutralization, but the regular expression is not anchored and may allow malicious or malformed data to slip through.
778,Insufficient Logging,Base,Draft,When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.
779,Logging of Excessive Data,Base,Draft,The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.
780,Use of RSA Algorithm without OAEP,Variant,Incomplete,The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.
781,Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code,Variant,Draft,The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it does not validate or incorrectly validates the addresses that are provided.
782,Exposed IOCTL with Insufficient Access Control,Variant,Draft,The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.
783,Operator Precedence Logic Error,Base,Draft,The product uses an expression in which operator precedence causes incorrect logic to be used.
784,Reliance on Cookies without Validation and Integrity Checking in a Security Decision,Variant,Draft,The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.
785,Use of Path Manipulation Function without Maximum-sized Buffer,Variant,Incomplete,The product invokes a function for normalizing paths or file names, but it provides an output buffer that is smaller than the maximum possible size, such as PATH_MAX.
786,Access of Memory Location Before Start of Buffer,Base,Incomplete,The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.
787,Out-of-bounds Write,Base,Draft,The product writes data past the end, or before the beginning, of the intended buffer.
788,Access of Memory Location After End of Buffer,Base,Incomplete,The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer.
789,Memory Allocation with Excessive Size Value,Variant,Draft,The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.
790,Improper Filtering of Special Elements,Class,Incomplete,The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.
791,Incomplete Filtering of Special Elements,Base,Incomplete,The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.
792,Incomplete Filtering of One or More Instances of Special Elements,Variant,Incomplete,The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.
793,Only Filtering One Instance of a Special Element,Variant,Incomplete,The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.
794,Incomplete Filtering of Multiple Instances of Special Elements,Variant,Incomplete,The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.
795,Only Filtering Special Elements at a Specified Location,Base,Incomplete,The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.
796,Only Filtering Special Elements Relative to a Marker,Variant,Incomplete,The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. at the beginning/end of a string; the second argument), thereby missing remaining special elements that may exist before sending it to a downstream component.
797,Only Filtering Special Elements at an Absolute Position,Variant,Incomplete,The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. byte number 10), thereby missing remaining special elements that may exist before sending it to a downstream component.
798,Use of Hard-coded Credentials,Base,Draft,The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.
799,Improper Control of Interaction Frequency,Class,Incomplete,The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.
804,Guessable CAPTCHA,Base,Incomplete,The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.
805,Buffer Access with Incorrect Length Value,Base,Incomplete,The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.
806,Buffer Access Using Size of Source Buffer,Variant,Incomplete,The product uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.
807,Reliance on Untrusted Inputs in a Security Decision,Base,Incomplete,The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.
820,Missing Synchronization,Base,Incomplete,The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.
821,Incorrect Synchronization,Base,Incomplete,The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.
822,Untrusted Pointer Dereference,Base,Incomplete,The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.
823,Use of Out-of-range Pointer Offset,Base,Incomplete,The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.
824,Access of Uninitialized Pointer,Base,Incomplete,The product accesses or uses a pointer that has not been initialized.
825,Expired Pointer Dereference,Base,Incomplete,The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.
826,Premature Release of Resource During Expected Lifetime,Base,Incomplete,The product releases a resource that is still intended to be used by itself or another actor.
827,Improper Control of Document Type Definition,Variant,Incomplete,The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.
828,Signal Handler with Functionality that is not Asynchronous-Safe,Base,Incomplete,The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted.
829,Inclusion of Functionality from Untrusted Control Sphere,Base,Incomplete,The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.
830,Inclusion of Web Functionality from an Untrusted Source,Variant,Incomplete,The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.
831,Signal Handler Function Associated with Multiple Signals,Base,Incomplete,The product defines a function that is used as a handler for more than one signal.
832,Unlock of a Resource that is not Locked,Base,Incomplete,The product attempts to unlock a resource that is not locked.
833,Deadlock,Base,Incomplete,The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.
834,Excessive Iteration,Class,Incomplete,The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.
835,Loop with Unreachable Exit Condition ('Infinite Loop'),Base,Incomplete,The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.
836,Use of Password Hash Instead of Password for Authentication,Base,Incomplete,The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.
837,Improper Enforcement of a Single, Unique Action,Base,Incomplete,The product requires that an actor should only be able to perform an action once, or to have only one unique action, but the product does not enforce or improperly enforces this restriction.
838,Inappropriate Encoding for Output Context,Base,Incomplete,The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component.
839,Numeric Range Comparison Without Minimum Check,Base,Incomplete,The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.
841,Improper Enforcement of Behavioral Workflow,Base,Incomplete,The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.
842,Placement of User into Incorrect Group,Base,Incomplete,The product or the administrator places a user into an incorrect group.
843,Access of Resource Using Incompatible Type ('Type Confusion'),Base,Incomplete,The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.
862,Missing Authorization,Class,Incomplete,The product does not perform an authorization check when an actor attempts to access a resource or perform an action.
863,Incorrect Authorization,Class,Incomplete,The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.
908,Use of Uninitialized Resource,Base,Incomplete,The product uses or accesses a resource that has not been initialized.
909,Missing Initialization of Resource,Base,Incomplete,The product does not initialize a critical resource.
910,Use of Expired File Descriptor,Base,Incomplete,The product uses or accesses a file descriptor after it has been closed.
911,Improper Update of Reference Count,Base,Incomplete,The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.
912,Hidden Functionality,Class,Incomplete,The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.
913,Improper Control of Dynamically-Managed Code Resources,Class,Incomplete,The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements.
914,Improper Control of Dynamically-Identified Variables,Base,Incomplete,The product does not properly restrict reading from or writing to dynamically-identified variables.
915,Improperly Controlled Modification of Dynamically-Determined Object Attributes,Base,Incomplete,The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.
916,Use of Password Hash With Insufficient Computational Effort,Base,Incomplete,The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.
917,Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection'),Base,Incomplete,The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.
918,Server-Side Request Forgery (SSRF),Base,Incomplete,The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.
920,Improper Restriction of Power Consumption,Base,Incomplete,The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.
921,Storage of Sensitive Data in a Mechanism without Access Control,Base,Incomplete,The product stores sensitive information in a file system or device that does not have built-in access control.
922,Insecure Storage of Sensitive Information,Class,Incomplete,The product stores sensitive information without properly limiting read or write access by unauthorized actors.
923,Improper Restriction of Communication Channel to Intended Endpoints,Class,Incomplete,The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.
924,Improper Enforcement of Message Integrity During Transmission in a Communication Channel,Base,Incomplete,The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.
925,Improper Verification of Intent by Broadcast Receiver,Variant,Incomplete,The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source.
926,Improper Export of Android Application Components,Variant,Incomplete,The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.
927,Use of Implicit Intent for Sensitive Communication,Variant,Incomplete,The Android application uses an implicit intent for transmitting sensitive data to other applications.
939,Improper Authorization in Handler for Custom URL Scheme,Base,Incomplete,The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.
940,Improper Verification of Source of a Communication Channel,Base,Incomplete,The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.
941,Incorrectly Specified Destination in a Communication Channel,Base,Incomplete,The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.
942,Permissive Cross-domain Policy with Untrusted Domains,Variant,Incomplete,The product uses a cross-domain policy file that includes domains that should not be trusted.
943,Improper Neutralization of Special Elements in Data Query Logic,Class,Incomplete,The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.
1004,Sensitive Cookie Without 'HttpOnly' Flag,Variant,Incomplete,The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.
1007,Insufficient Visual Distinction of Homoglyphs Presented to User,Base,Incomplete,The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.
1021,Improper Restriction of Rendered UI Layers or Frames,Base,Incomplete,The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.
1022,Use of Web Link to Untrusted Target with window.opener Access,Variant,Incomplete,The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying security-critical properties of the window.opener object, such as the location property.
1023,Incomplete Comparison with Missing Factors,Class,Incomplete,The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.
1024,Comparison of Incompatible Types,Base,Incomplete,The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.
1025,Comparison Using Wrong Factors,Base,Incomplete,The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.
1037,Processor Optimization Removal or Modification of Security-critical Code,Base,Incomplete,The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.
1038,Insecure Automated Optimizations,Class,Draft,The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption.
1039,Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations,Class,Incomplete,The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.
1041,Use of Redundant Code,Base,Incomplete,The product has multiple functions, methods, procedures, macros, etc. that contain the same code.
1042,Static Member Data Element outside of a Singleton Class Element,Variant,Incomplete,The code contains a member element that is declared as static (but not final), in which its parent class element is not a singleton class - that is, a class element that can be used only once in the 'to' association of a Create action.
1043,Data Element Aggregating an Excessively Large Number of Non-Primitive Elements,Base,Incomplete,The product uses a data element that has an excessively large number of sub-elements with non-primitive data types such as structures or aggregated objects.
1044,Architecture with Number of Horizontal Layers Outside of Expected Range,Base,Incomplete,The product's architecture contains too many - or too few - horizontal layers.
1045,Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor,Variant,Incomplete,A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor.
1046,Creation of Immutable Text Using String Concatenation,Base,Incomplete,The product creates an immutable text string using string concatenation operations.
1047,Modules with Circular Dependencies,Base,Incomplete,The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.
1048,Invokable Control Element with Large Number of Outward Calls,Base,Incomplete,The code contains callable control elements that contain an excessively large number of references to other application objects external to the context of the callable, i.e. a Fan-Out value that is excessively large.
1049,Excessive Data Query Operations in a Large Data Table,Base,Incomplete,The product performs a data query with a large number of joins and sub-queries on a large data table.
