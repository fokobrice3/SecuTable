CWE-ID,Name,Weakness Abstraction,Status,Description
1050,Excessive Platform Resource Consumption within a Loop,Base,Incomplete,The product has a loop body or loop condition that contains a control element that directly or indirectly consumes platform resources, e.g. messaging, sessions, locks, or file descriptors.
1051,Initialization with Hard-Coded Network Resource Configuration Data,Base,Incomplete,The product initializes data using hard-coded values that act as network resource identifiers.
1052,Excessive Use of Hard-Coded Literals in Initialization,Base,Incomplete,The product initializes a data element using a hard-coded literal that is not a simple integer or static constant element.
1053,Missing Documentation for Design,Base,Incomplete,The product does not have documentation that represents how it is designed.
1054,Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer,Base,Incomplete,The code at one architectural layer invokes code that resides at a deeper layer than the adjacent layer, i.e., the invocation skips at least one layer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer.
1055,Multiple Inheritance from Concrete Classes,Base,Incomplete,The product contains a class with inheritance from more than one concrete class.
1056,Invokable Control Element with Variadic Parameters,Base,Incomplete,A named-callable or method control element has a signature that supports a variable (variadic) number of parameters or arguments.
1057,Data Access Operations Outside of Expected Data Manager Component,Base,Incomplete,The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager.
1058,Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element,Base,Incomplete,The code contains a function or method that operates in a multi-threaded environment but owns an unsafe non-final static storable or member data element.
1059,Insufficient Technical Documentation,Class,Incomplete,The product does not contain sufficient technical or engineering documentation (whether on paper or in electronic form) that contains descriptions of all the relevant software/hardware elements of the product, such as its usage, structure, architectural components, interfaces, design, implementation, configuration, operation, etc.
1060,Excessive Number of Inefficient Server-Side Data Accesses,Base,Incomplete,The product performs too many data queries without using efficient data processing functionality such as stored procedures.
1061,Insufficient Encapsulation,Class,Incomplete,The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend.
1062,Parent Class with References to Child Class,Base,Incomplete,The code has a parent class that contains references to a child class, its methods, or its members.
1063,Creation of Class Instance within a Static Code Block,Base,Incomplete,A static code block creates an instance of a class.
1064,Invokable Control Element with Signature Containing an Excessive Number of Parameters,Base,Incomplete,The product contains a function, subroutine, or method whose signature has an unnecessarily large number of parameters/arguments.
1065,Runtime Resource Management Control Element in a Component Built to Run on Application Servers,Base,Incomplete,The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server.
1066,Missing Serialization Control Element,Base,Incomplete,The product contains a serializable data element that does not have an associated serialization method.
1067,Excessive Execution of Sequential Searches of Data Resource,Base,Incomplete,The product contains a data query against an SQL table or view that is configured in a way that does not utilize an index and may cause sequential searches to be performed.
1068,Inconsistency Between Implementation and Documented Design,Base,Incomplete,The implementation of the product is not consistent with the design as described within the relevant documentation.
1069,Empty Exception Block,Base,Incomplete,An invokable code block contains an exception handling block that does not contain any code, i.e. is empty.
1070,Serializable Data Element Containing non-Serializable Item Elements,Base,Incomplete,The product contains a serializable, storable data element such as a field or member, but the data element contains member elements that are not serializable.
1071,Empty Code Block,Base,Incomplete,The source code contains a block that does not contain any code, i.e., the block is empty.
1072,Data Resource Access without Use of Connection Pooling,Base,Incomplete,The product accesses a data resource through a database without using a connection pooling capability.
1073,Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses,Base,Incomplete,The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities.
1074,Class with Excessively Deep Inheritance,Base,Incomplete,A class has an inheritance level that is too high, i.e., it has a large number of parent classes.
1075,Unconditional Control Flow Transfer outside of Switch Block,Base,Incomplete,The product performs unconditional control transfer (such as a goto) in code outside of a branching structure such as a switch block.
1076,Insufficient Adherence to Expected Conventions,Class,Incomplete,The product's architecture, source code, design, documentation, or other artifact does not follow required conventions.
1077,Floating Point Comparison with Incorrect Operator,Variant,Incomplete,The code performs a comparison such as an equality test between two float (floating point) values, but it uses comparison operators that do not account for the possibility of loss of precision.
1078,Inappropriate Source Code Style or Formatting,Class,Incomplete,The source code does not follow desired style or formatting for indentation, white space, comments, etc.
1079,Parent Class without Virtual Destructor Method,Base,Incomplete,A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.
1080,Source Code File with Excessive Number of Lines of Code,Base,Incomplete,A source code file has too many lines of code.
1082,Class Instance Self Destruction Control Element,Base,Incomplete,The code contains a class instance that calls the method or function to delete or destroy itself.
1083,Data Access from Outside Expected Data Manager Component,Base,Incomplete,The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component.
1084,Invokable Control Element with Excessive File or Data Access Operations,Base,Incomplete,A function or method contains too many operations that utilize a data manager or file resource.
1085,Invokable Control Element with Excessive Volume of Commented-out Code,Base,Incomplete,A function, method, procedure, etc. contains an excessive amount of code that has been commented out within its body.
1086,Class with Excessive Number of Child Classes,Base,Incomplete,A class contains an unnecessarily large number of children.
1087,Class with Virtual Method without a Virtual Destructor,Base,Incomplete,A class contains a virtual method, but the method does not have an associated virtual destructor.
1088,Synchronous Access of Remote Resource without Timeout,Base,Incomplete,The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.
1089,Large Data Table with Excessive Number of Indices,Base,Incomplete,The product uses a large data table that contains an excessively large number of indices.
1090,Method Containing Access of a Member Element from Another Class,Base,Incomplete,A method for a class performs an operation that directly accesses a member element from another class.
1091,Use of Object without Invoking Destructor Method,Base,Incomplete,The product contains a method that accesses an object but does not later invoke the element's associated finalize/destructor method.
1092,Use of Same Invokable Control Element in Multiple Architectural Layers,Base,Incomplete,The product uses the same control element across multiple architectural layers.
1093,Excessively Complex Data Representation,Class,Incomplete,The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.
1094,Excessive Index Range Scan for a Data Resource,Base,Incomplete,The product contains an index range scan for a large data table, but the scan can cover a large number of rows.
1095,Loop Condition Value Update within the Loop,Base,Incomplete,The product uses a loop with a control flow condition based on a value that is updated within the body of the loop.
1096,Singleton Class Instance Creation without Proper Locking or Synchronization,Variant,Incomplete,The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.
1097,Persistent Storable Data Element without Associated Comparison Control Element,Base,Incomplete,The product uses a storable data element that does not have all of the associated functions or methods that are necessary to support comparison.
1098,Data Element containing Pointer Item without Proper Copy Control Element,Variant,Incomplete,The code contains a data element with a pointer that does not have an associated copy or constructor method.
1099,Inconsistent Naming Conventions for Identifiers,Base,Incomplete,The product's code, documentation, or other artifacts do not consistently use the same naming conventions for variables, callables, groups of related callables, I/O capabilities, data types, file names, or similar types of elements.
1100,Insufficient Isolation of System-Dependent Functions,Base,Incomplete,The product or code does not isolate system-dependent functionality into separate standalone modules.
1101,Reliance on Runtime Component in Generated Code,Base,Incomplete,The product uses automatically-generated code that cannot be executed without a specific runtime support component.
1102,Reliance on Machine-Dependent Data Representation,Base,Incomplete,The code uses a data representation that relies on low-level data representation or constructs that may vary across different processors, physical machines, OSes, or other physical components.
1103,Use of Platform-Dependent Third Party Components,Base,Incomplete,The product relies on third-party components that do not provide equivalent functionality across all desirable platforms.
1104,Use of Unmaintained Third Party Components,Base,Incomplete,The product relies on third-party components that are not actively supported or maintained by the original developer or a trusted proxy for the original developer.
1105,Insufficient Encapsulation of Machine-Dependent Functionality,Base,Incomplete,The product or code uses machine-dependent functionality, but it does not sufficiently encapsulate or isolate this functionality from the rest of the code.
1106,Insufficient Use of Symbolic Constants,Base,Incomplete,The source code uses literal constants that may need to change or evolve over time, instead of using symbolic constants.
1107,Insufficient Isolation of Symbolic Constant Definitions,Base,Incomplete,The source code uses symbolic constants, but it does not sufficiently place the definitions of these constants into a more centralized or isolated location.
1108,Excessive Reliance on Global Variables,Base,Incomplete,The code is structured in a way that relies too much on using or setting global variables throughout various points in the code, instead of preserving the associated information in a narrower, more local context.
1109,Use of Same Variable for Multiple Purposes,Base,Incomplete,The code contains a callable, block, or other code element in which the same variable is used to control more than one unique task or store more than one instance of data.
1110,Incomplete Design Documentation,Base,Incomplete,The product's design documentation does not adequately describe control flow, data flow, system initialization, relationships between tasks, components, rationales, or other important aspects of the design.
1111,Incomplete I/O Documentation,Base,Incomplete,The product's documentation does not adequately define inputs, outputs, or system/software interfaces.
1112,Incomplete Documentation of Program Execution,Base,Incomplete,The document does not fully define all mechanisms that are used to control or influence how product-specific programs are executed.
1113,Inappropriate Comment Style,Base,Incomplete,The source code uses comment styles or formats that are inconsistent or do not follow expected standards for the product.
1114,Inappropriate Whitespace Style,Base,Incomplete,The source code contains whitespace that is inconsistent across the code or does not follow expected standards for the product.
1115,Source Code Element without Standard Prologue,Base,Incomplete,The source code contains elements such as source files that do not consistently provide a prologue or header that has been standardized for the project.
1116,Inaccurate Comments,Base,Incomplete,The source code contains comments that do not accurately describe or explain aspects of the portion of the code with which the comment is associated.
1117,Callable with Insufficient Behavioral Summary,Base,Incomplete,The code contains a function or method whose signature and/or associated inline documentation does not sufficiently describe the callable's inputs, outputs, side effects, assumptions, or return codes.
1118,Insufficient Documentation of Error Handling Techniques,Base,Incomplete,The documentation does not sufficiently describe the techniques that are used for error handling, exception processing, or similar mechanisms.
1119,Excessive Use of Unconditional Branching,Base,Incomplete,The code uses too many unconditional branches (such as goto).
1120,Excessive Code Complexity,Class,Incomplete,The code is too complex, as calculated using a well-defined, quantitative measure.
1121,Excessive McCabe Cyclomatic Complexity,Base,Incomplete,The code contains McCabe cyclomatic complexity that exceeds a desirable maximum.
1122,Excessive Halstead Complexity,Base,Incomplete,The code is structured in a way that a Halstead complexity measure exceeds a desirable maximum.
1123,Excessive Use of Self-Modifying Code,Base,Incomplete,The product uses too much self-modifying code.
1124,Excessively Deep Nesting,Base,Incomplete,The code contains a callable or other code grouping in which the nesting / branching is too deep.
1125,Excessive Attack Surface,Base,Incomplete,The product has an attack surface whose quantitative measurement exceeds a desirable maximum.
1126,Declaration of Variable with Unnecessarily Wide Scope,Base,Incomplete,The source code declares a variable in one scope, but the variable is only used within a narrower scope.
1127,Compilation with Insufficient Warnings or Errors,Base,Incomplete,The code is compiled without sufficient warnings enabled, which may prevent the detection of subtle bugs or quality issues.
1164,Irrelevant Code,Class,Incomplete,The product contains code that is not essential for execution, i.e. makes no state changes and has no side effects that alter data or control flow, such that removal of the code would have no impact to functionality or correctness.
1173,Improper Use of Validation Framework,Base,Draft,The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.
1174,ASP.NET Misconfiguration: Improper Model Validation,Variant,Draft,The ASP.NET application does not use, or incorrectly uses, the model validation framework.
1176,Inefficient CPU Computation,Class,Incomplete,The product performs CPU computations using algorithms that are not as efficient as they could be for the needs of the developer, i.e., the computations can be optimized further.
1177,Use of Prohibited Code,Class,Incomplete,The product uses a function, library, or third party component that has been explicitly prohibited, whether by the developer or the customer.
1188,Insecure Default Initialization of Resource,Base,Incomplete,The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.
1189,Improper Isolation of Shared Resources on System-on-a-Chip (SoC),Base,Stable,The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents.
1190,DMA Device Enabled Too Early in Boot Phase,Base,Draft,The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.
1191,On-Chip Debug and Test Interface With Improper Access Control,Base,Stable,The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.
1192,System-on-Chip (SoC) Using Components without Unique, Immutable Identifiers,Base,Draft,The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components.
1193,Power-On of Untrusted Execution Core Before Enabling Fabric Access Control,Base,Draft,The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.
1204,Generation of Weak Initialization Vector (IV),Base,Incomplete,The product uses a cryptographic primitive that uses an Initialization Vector (IV), but the product does not generate IVs that are sufficiently unpredictable or unique according to the expected cryptographic requirements for that primitive.
1209,Failure to Disable Reserved Bits,Base,Incomplete,The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design. However, designers might covertly use these bits to debug or further develop new capabilities in production hardware. Adversaries with access to these bits will write to them in hopes of compromising hardware state.
1220,Insufficient Granularity of Access Control,Base,Incomplete,The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.
1221,Incorrect Register Defaults or Module Parameters,Base,Incomplete,Hardware description language code incorrectly defines register defaults or hardware IP parameters to insecure values.
1222,Insufficient Granularity of Address Regions Protected by Register Locks,Variant,Incomplete,The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process.
1223,Race Condition for Write-Once Attributes,Base,Incomplete,A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue.
1224,Improper Restriction of Write-Once Bit Fields,Base,Incomplete,The hardware design control register sticky bits or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.
1229,Creation of Emergent Resource,Class,Incomplete,The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.
1230,Exposure of Sensitive Information Through Metadata,Base,Incomplete,The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.
1231,Improper Prevention of Lock Bit Modification,Base,Stable,The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.
1232,Improper Lock Behavior After Power State Transition,Base,Incomplete,Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable.
1233,Security-Sensitive Hardware Controls with Missing Lock Bit Protection,Base,Stable,The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.
1234,Hardware Internal or Debug Modes Allow Override of Locks,Base,Incomplete,System configuration protection may be bypassed during debug mode.
1235,Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations,Base,Incomplete,The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.
1236,Improper Neutralization of Formula Elements in a CSV File,Base,Incomplete,The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.
1239,Improper Zeroization of Hardware Register,Variant,Draft,The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.
1240,Use of a Cryptographic Primitive with a Risky Implementation,Base,Draft,To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.
1241,Use of Predictable Algorithm in Random Number Generator,Base,Draft,The device uses an algorithm that is predictable and generates a pseudo-random number.
1242,Inclusion of Undocumented Features or Chicken Bits,Base,Incomplete,The device includes chicken bits or undocumented features that can create entry points for unauthorized actors.
1243,Sensitive Non-Volatile Information Not Protected During Debug,Base,Incomplete,Access to security-sensitive information stored in fuses is not limited during debug.
1244,Internal Asset Exposed to Unsafe Debug Access Level or State,Base,Stable,The product uses physical debug or test interfaces with support for multiple access levels, but it assigns the wrong debug access level to an internal asset, providing unintended access to the asset from untrusted debug agents.
1245,Improper Finite State Machines (FSMs) in Hardware Logic,Base,Incomplete,Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system.
1246,Improper Write Handling in Limited-write Non-Volatile Memories,Base,Incomplete,The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.
1247,Improper Protection Against Voltage and Clock Glitches,Base,Stable,The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.
1248,Semiconductor Defects in Hardware Logic with Security-Sensitive Implications,Base,Incomplete,The security-sensitive hardware module contains semiconductor defects.
1249,Application-Level Admin Tool with Inconsistent View of Underlying Operating System,Base,Incomplete,The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state.
1250,Improper Preservation of Consistency Between Independent Representations of Shared State,Base,Incomplete,The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.
1251,Mirrored Regions with Different Values,Base,Incomplete,The product's architecture mirrors regions without ensuring that their contents always stay in sync.
1252,CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations,Base,Incomplete,The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.
1253,Incorrect Selection of Fuse Values,Base,Draft,The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.
1254,Incorrect Comparison Logic Granularity,Base,Draft,The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.
1255,Comparison Logic is Vulnerable to Power Side-Channel Attacks,Variant,Draft,A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.
1256,Improper Restriction of Software Interfaces to Hardware Features,Base,Stable,The product provides software-controllable device functionality for capabilities such as power and clock management, but it does not properly limit functionality that can lead to modification of hardware memory or register bits, or the ability to observe physical side channels.
1257,Improper Access Control Applied to Mirrored or Aliased Memory Regions,Base,Incomplete,Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.
1258,Exposure of Sensitive System Information Due to Uncleared Debug Information,Base,Draft,The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.
1259,Improper Restriction of Security Token Assignment,Base,Incomplete,The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.
1260,Improper Handling of Overlap Between Protected Memory Ranges,Base,Stable,The product allows address regions to overlap, which can result in the bypassing of intended memory protection.
1261,Improper Handling of Single Event Upsets,Base,Draft,The hardware logic does not effectively handle when single-event upsets (SEUs) occur.
1262,Improper Access Control for Register Interface,Base,Stable,The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.
1263,Improper Physical Access Control,Class,Incomplete,The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.
1264,Hardware Logic with Insecure De-Synchronization between Control and Data Channels,Base,Incomplete,The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.
1265,Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls,Base,Draft,During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code.
1266,Improper Scrubbing of Sensitive Data from Decommissioned Device,Base,Incomplete,The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned. A scrubbing capability could be missing, insufficient, or incorrect.
1267,Policy Uses Obsolete Encoding,Base,Draft,The product uses an obsolete encoding mechanism to implement access controls.
1268,Policy Privileges are not Assigned Consistently Between Control and Data Agents,Base,Draft,The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.
1269,Product Released in Non-Release Configuration,Base,Incomplete,The product released to market is released in pre-production or manufacturing configuration.
1270,Generation of Incorrect Security Tokens,Base,Incomplete,The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.
1271,Uninitialized Value on Reset for Registers Holding Security Settings,Base,Incomplete,Security-critical logic is not set to a known value on reset.
1272,Sensitive Information Uncleared Before Debug/Power State Transition,Base,Stable,The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.
1273,Device Unlock Credential Sharing,Base,Incomplete,The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.
1274,Improper Access Control for Volatile Memory Containing Boot Code,Base,Stable,The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.
1275,Sensitive Cookie with Improper SameSite Attribute,Variant,Incomplete,The SameSite attribute for sensitive cookies is not set, or an insecure value is used.
1276,Hardware Child Block Incorrectly Connected to Parent System,Base,Incomplete,Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.
1277,Firmware Not Updateable,Base,Draft,The product does not provide its users with the ability to update or patch its firmware to address any vulnerabilities or weaknesses that may be present.
1278,Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques,Base,Incomplete,Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.
1279,Cryptographic Operations are run Before Supporting Units are Ready,Base,Incomplete,Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.
1280,Access Control Check Implemented After Asset is Accessed,Base,Incomplete,A product's hardware-based access control check occurs after the asset has been accessed.
1281,Sequence of Processor Instructions Leads to Unexpected Behavior,Base,Incomplete,Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed.
1282,Assumed-Immutable Data is Stored in Writable Memory,Base,Incomplete,Immutable data, such as a first-stage bootloader, device identifiers, and write-once configuration settings are stored in writable memory that can be re-programmed or updated in the field.
1283,Mutable Attestation or Measurement Reporting Data,Base,Incomplete,The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.
1284,Improper Validation of Specified Quantity in Input,Base,Incomplete,The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.
1285,Improper Validation of Specified Index, Position, or Offset in Input,Base,Incomplete,The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.
1286,Improper Validation of Syntactic Correctness of Input,Base,Incomplete,The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.
1287,Improper Validation of Specified Type of Input,Base,Incomplete,The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.
1288,Improper Validation of Consistency within Input,Base,Incomplete,The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.
1289,Improper Validation of Unsafe Equivalence in Input,Base,Incomplete,The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.
1290,Incorrect Decoding of Security Identifiers ,Base,Incomplete,The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.
1291,Public Key Re-Use for Signing both Debug and Production Code,Base,Draft,The same public key is used for signing both debug and production code.
1292,Incorrect Conversion of Security Identifiers,Base,Draft,The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.
1293,Missing Source Correlation of Multiple Independent Data,Base,Draft,The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.
1294,Insecure Security Identifier Mechanism,Class,Incomplete,The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.
1295,Debug Messages Revealing Unnecessary Information,Base,Incomplete,The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.
1296,Incorrect Chaining or Granularity of Debug Components,Base,Incomplete,The product's debug components contain incorrect chaining or granularity of debug components.
1297,Unprotected Confidential Information on Device is Accessible by OSAT Vendors,Base,Incomplete,The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.
1298,Hardware Logic Contains Race Conditions,Base,Draft,A race condition in the hardware logic results in undermining security guarantees of the system.
1299,Missing Protection Mechanism for Alternate Hardware Interface,Base,Draft,The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.
1300,Improper Protection of Physical Side Channels,Base,Stable,The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to patterns in physically observable phenomena such as variations in power consumption, electromagnetic emissions (EME), or acoustic emissions.
1301,Insufficient or Incomplete Data Removal within Hardware Component,Base,Incomplete,The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.
1302,Missing Security Identifier,Base,Incomplete,The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier.
1303,Non-Transparent Sharing of Microarchitectural Resources,Base,Draft,Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts.
1304,Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation,Base,Draft,The product performs a power save/restore operation, but it does not ensure that the integrity of the configuration state is maintained and/or verified between the beginning and ending of the operation.
1310,Missing Ability to Patch ROM Code,Base,Draft,Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state.
1311,Improper Translation of Security Attributes by Fabric Bridge,Base,Draft,The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.
1312,Missing Protection for Mirrored Regions in On-Chip Fabric Firewall,Base,Draft,The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.
1313,Hardware Allows Activation of Test or Debug Logic at Runtime,Base,Draft,During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary.
1314,Missing Write Protection for Parametric Data Values,Base,Draft,The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.
1315,Improper Setting of Bus Controlling Capability in Fabric End-point,Base,Incomplete,The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.
1316,Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges,Base,Draft,The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.
1317,Improper Access Control in Fabric Bridge,Base,Draft,The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.
1318,Missing Support for Security Features in On-chip Fabrics or Buses,Base,Incomplete,On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control.
1319,Improper Protection against Electromagnetic Fault Injection (EM-FI),Base,Incomplete,The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.
1320,Improper Protection for Outbound Error Messages and Alert Signals,Base,Draft,Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.
1321,Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),Variant,Incomplete,The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.
1322,Use of Blocking Code in Single-threaded, Non-blocking Context,Base,Incomplete,The product uses a non-blocking model that relies on a single threaded process for features such as scalability, but it contains code that can block when it is invoked.
1323,Improper Management of Sensitive Trace Data,Base,Draft,Trace data collected from several sources on the System-on-Chip (SoC) is stored in unprotected locations or transported to untrusted agents.
1325,Improperly Controlled Sequential Memory Allocation,Base,Incomplete,The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.
1326,Missing Immutable Root of Trust in Hardware,Base,Draft,A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.
1327,Binding to an Unrestricted IP Address,Base,Incomplete,The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.
1328,Security Version Number Mutable to Older Versions,Base,Draft,Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.
1329,Reliance on Component That is Not Updateable,Base,Incomplete,The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.
1330,Remanent Data Readable after Memory Erase,Variant,Draft,Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.
1331,Improper Isolation of Shared Resources in Network On Chip (NoC),Base,Stable,The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.
1332,Improper Handling of Faults that Lead to Instruction Skips,Base,Stable,The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur.
1333,Inefficient Regular Expression Complexity,Base,Draft,The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.
1334,Unauthorized Error Injection Can Degrade Hardware Redundancy,Base,Draft,An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.
1335,Incorrect Bitwise Shift of Integer,Base,Draft,An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result.
1336,Improper Neutralization of Special Elements Used in a Template Engine,Base,Incomplete,The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.
1338,Improper Protections Against Hardware Overheating,Base,Draft,A hardware device is missing or has inadequate protection features to prevent overheating.
1339,Insufficient Precision or Accuracy of a Real Number,Base,Draft,The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.
1341,Multiple Releases of Same Resource or Handle,Base,Incomplete,The product attempts to close or release a resource or handle more than once, without any successful open between the close operations.
1342,Information Exposure through Microarchitectural State after Transient Execution,Base,Incomplete,The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.
1351,Improper Handling of Hardware Behavior in Exceptionally Cold Environments,Base,Incomplete,A hardware device, or the firmware running on it, is missing or has incorrect protection features to maintain goals of security primitives when the device is cooled below standard operating temperatures.
1357,Reliance on Insufficiently Trustworthy Component,Class,Incomplete,The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability.
1384,Improper Handling of Physical or Environmental Conditions,Class,Incomplete,The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.
1385,Missing Origin Validation in WebSockets,Variant,Incomplete,The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.
1386,Insecure Operation on Windows Junction / Mount Point,Base,Incomplete,The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.
1389,Incorrect Parsing of Numbers with Different Radices,Base,Incomplete,The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix).
1390,Weak Authentication,Class,Incomplete,The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.
1391,Use of Weak Credentials,Class,Incomplete,The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.
1392,Use of Default Credentials,Base,Incomplete,The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality.
1393,Use of Default Password,Base,Incomplete,The product uses default passwords for potentially critical functionality.
1394,Use of Default Cryptographic Key,Base,Incomplete,The product uses a default cryptographic key for potentially critical functionality.
1395,Dependency on Vulnerable Third-Party Component,Class,Incomplete,The product has a dependency on a third-party component that contains one or more known vulnerabilities.
