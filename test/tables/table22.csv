CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
916,Use of Password Hash With Insufficient Computational Effort,Base,Incomplete,"The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.","Many password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash. Many hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker. There are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack: The amount of CPU time required to compute the hash (stretching) The amount of memory required to compute the hash (memory-hard operations) Including a random value, along with the password, as input to the hash computation (salting) Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (one-way hashing) Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (collision resistance) Note that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.",::NATURE:ChildOf:CWE ID:327:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:327:VIEW ID:1003:ORDINAL:Primary::,::ORDINALITY:Primary::,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::,,,"::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:IMPACT:Gain Privileges or Assume Identity:NOTE:If an attacker can gain access to the hashes, then the lack of sufficient computational effort will make it easier to conduct brute force attacks using techniques such as rainbow tables, or specialized hardware such as GPUs, which can be much faster than general-purpose CPUs for computing hashes.::","::METHOD:Automated Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Bytecode Weakness Analysis - including disassembler + source code weakness analysis Binary Weakness Analysis - including disassembler + source code weakness analysis:EFFECTIVENESS:SOAR Partial::METHOD:Manual Static Analysis - Binary or Bytecode:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Binary / Bytecode disassembler - then use manual analysis for vulnerabilities & anomalies:EFFECTIVENESS:SOAR Partial::METHOD:Manual Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Focused Manual Spotcheck - Focused manual analysis of source Manual Source Code Review (not inspections):EFFECTIVENESS:High::METHOD:Automated Static Analysis - Source Code:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer:EFFECTIVENESS:High::METHOD:Automated Static Analysis:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Cost effective for partial coverage: Configuration Checker:EFFECTIVENESS:SOAR Partial::METHOD:Architecture or Design Review:DESCRIPTION:According to SOAR, the following detection techniques may be useful: Highly cost effective: Formal Methods / Correct-By-Construction Cost effective for partial coverage: Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.):EFFECTIVENESS:High::","::PHASE:Architecture and Design:DESCRIPTION:Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (stretching) or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5. For example, rainbow table attacks can become infeasible due to the high computing overhead. Finally, since computing power gets faster and cheaper over time, the technique can be reconfigured to increase the workload without forcing an entire replacement of the algorithm in use. Some hash functions that have one or more of these desired properties include bcrypt [REF-291], scrypt [REF-292], and PBKDF2 [REF-293]. While there is active debate about which of these is the most effective, they are all stronger than using salts with hash functions with very little computing overhead. Note that using these functions can have an impact on performance, so they require special consideration to avoid denial-of-service attacks. However, their configurability provides finer control over how much CPU and memory is used, so it could be adjusted to suit the environment's needs.:EFFECTIVENESS:High::PHASE:Implementation Architecture and Design:DESCRIPTION:When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks.::","::REFERENCE:CVE-2008-1526:DESCRIPTION:Router does not use a salt with a hash, making it easier to crack passwords.:LINK:https://www.cve.org/CVERecord?id=CVE-2008-1526::REFERENCE:CVE-2006-1058:DESCRIPTION:Router does not use a salt with a hash, making it easier to crack passwords.:LINK:https://www.cve.org/CVERecord?id=CVE-2006-1058::REFERENCE:CVE-2008-4905:DESCRIPTION:Blogging software uses a hard-coded salt when calculating a password hash.:LINK:https://www.cve.org/CVERecord?id=CVE-2008-4905::REFERENCE:CVE-2002-1657:DESCRIPTION:Database server uses the username for a salt when encrypting passwords, simplifying brute force attacks.:LINK:https://www.cve.org/CVERecord?id=CVE-2002-1657::REFERENCE:CVE-2001-0967:DESCRIPTION:Server uses a constant salt when encrypting passwords, simplifying brute force attacks.:LINK:https://www.cve.org/CVERecord?id=CVE-2001-0967::REFERENCE:CVE-2005-0408:DESCRIPTION:chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.:LINK:https://www.cve.org/CVERecord?id=CVE-2005-0408::",,,,::55::,
917,Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection'),Base,Incomplete,"The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.","Frameworks such as Java Server Page (JSP) allow a developer to insert executable expressions within otherwise-static content. When the developer is not aware of the executable nature of these expressions and/or does not disable them, then if an attacker can inject expressions, this could lead to code execution or other unexpected behaviors.",::NATURE:ChildOf:CWE ID:77:VIEW ID:1000:ORDINAL:Primary::NATURE:PeerOf:CWE ID:1336:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:74:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:77:VIEW ID:1305:ORDINAL:Primary::NATURE:ChildOf:CWE ID:77:VIEW ID:1340:ORDINAL:Primary::,::ORDINALITY:Primary::,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,::TERM:EL Injection::,::PHASE:Architecture and Design::PHASE:Implementation::,,,::SCOPE:Confidentiality:IMPACT:Read Application Data::SCOPE:Integrity:IMPACT:Execute Unauthorized Code or Commands::,,"::PHASE:Architecture and Design:DESCRIPTION:Avoid adding user-controlled data into an expression interpreter when possible.::PHASE:Implementation:DESCRIPTION:If user-controlled data must be added to an expression interpreter, one or more of the following should be performed: Validate that the user input will not evaluate as an expression Encode the user input in a way that ensures it is not evaluated as an expression::PHASE:System Configuration Operation:DESCRIPTION:The framework or tooling might allow the developer to disable or deactivate the processing of EL expressions, such as setting the isELIgnored attribute for a JSP page to true.::","::REFERENCE:CVE-2021-44228:DESCRIPTION:Product does not neutralize ${xyz} style expressions, allowing remote code execution. (log4shell vulnerability in log4j):LINK:https://www.cve.org/CVERecord?id=CVE-2021-44228::",,,,,"::TYPE:Maintenance:NOTE:The interrelationships and differences between CWE-917 and CWE-1336 need to be further clarified.::TYPE:Relationship:NOTE:In certain versions of Spring 3.0.5 and earlier, there was a vulnerability (CVE-2011-2730) in which Expression Language tags would be evaluated twice, which effectively exposed any application to EL injection. However, even for later versions, this weakness is still possible depending on configuration.::"
918,Server-Side Request Forgery (SSRF),Base,Incomplete,"The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.","By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests.",::NATURE:ChildOf:CWE ID:441:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:610:VIEW ID:1003:ORDINAL:Primary::,,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY NAME:Web Server:TECHNOLOGY PREVALENCE:Undetermined::,,::TERM:XSPA:DESCRIPTION:Cross Site Port Attack::,::PHASE:Architecture and Design::PHASE:Implementation::,,,::SCOPE:Confidentiality:IMPACT:Read Application Data::SCOPE:Integrity:IMPACT:Execute Unauthorized Code or Commands::,,,"::REFERENCE:CVE-2021-26855:DESCRIPTION:Server Side Request Forgery (SSRF) in mail server, as exploited in the wild per CISA KEV.:LINK:https://www.cve.org/CVERecord?id=CVE-2021-26855::REFERENCE:CVE-2021-21973:DESCRIPTION:Server Side Request Forgery in cloud platform, as exploited in the wild per CISA KEV.:LINK:https://www.cve.org/CVERecord?id=CVE-2021-21973::REFERENCE:CVE-2016-4029:DESCRIPTION:Chain: incorrect validation of intended decimal-based IP address format (CWE-1286) enables parsing of octal or hexadecimal formats (CWE-1389), allowing bypass of an SSRF protection mechanism (CWE-918).:LINK:https://www.cve.org/CVERecord?id=CVE-2016-4029::REFERENCE:CVE-2002-1484:DESCRIPTION:Web server allows attackers to request a URL from another server, including other ports, which allows proxied scanning.:LINK:https://www.cve.org/CVERecord?id=CVE-2002-1484::REFERENCE:CVE-2004-2061:DESCRIPTION:CGI script accepts and retrieves incoming URLs.:LINK:https://www.cve.org/CVERecord?id=CVE-2004-2061::REFERENCE:CVE-2010-1637:DESCRIPTION:Web-based mail program allows internal network scanning using a modified POP3 port number.:LINK:https://www.cve.org/CVERecord?id=CVE-2010-1637::REFERENCE:CVE-2009-0037:DESCRIPTION:URL-downloading library automatically follows redirects to file:// and scp:// URLs:LINK:https://www.cve.org/CVERecord?id=CVE-2009-0037::",,,,::664::,"::TYPE:Relationship:NOTE:CWE-918 (SSRF) and CWE-611 (XXE) are closely related, because they both involve web-related technologies and can launch outbound requests to unexpected destinations. However, XXE can be performed client-side, or in other contexts in which the software is not acting directly as a server, so the Server portion of the SSRF acronym does not necessarily apply.::"
920,Improper Restriction of Power Consumption,Base,Incomplete,"The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.","In environments such as embedded or mobile devices, power can be a limited resource such as a battery, which cannot be automatically replenished by the product itself, and the device might not always be directly attached to a reliable power source. If the product uses too much power too quickly, then this could cause the device (and subsequently, the product) to stop functioning until power is restored, or increase the financial burden on the device owner because of increased power costs. Normal operation of an application will consume power. However, in some cases, an attacker could cause the application to consume more power than intended, using components such as: Display CPU Disk I/O GPS Sound Microphone USB interface",::NATURE:ChildOf:CWE ID:400:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:400:VIEW ID:1003:ORDINAL:Primary::,,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::,,,"::SCOPE:Availability:IMPACT:DoS: Resource Consumption (Other):IMPACT:DoS: Crash, Exit, or Restart:NOTE:The power source could be drained, causing the application - and the entire device - to cease functioning.::",,,,,,,,
921,Storage of Sensitive Data in a Mechanism without Access Control,Base,Incomplete,The product stores sensitive information in a file system or device that does not have built-in access control.,"While many modern file systems or devices utilize some form of access control in order to restrict access to data, not all storage mechanisms have this capability. For example, memory cards, floppy disks, CDs, and USB devices are typically made accessible to any user within the system. This can become a problem when sensitive data is stored in these mechanisms in a multi-user environment, because anybody on the system can read or write this data. On Android devices, external storage is typically globally readable and writable by other applications on the device. External storage may also be easily accessible through the mobile device's USB connection or physically accessible through the device's memory card port.",::NATURE:ChildOf:CWE ID:922:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design:NOTE:OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.::,,,::SCOPE:Confidentiality:IMPACT:Read Application Data:IMPACT:Read Files or Directories:NOTE:Attackers can read sensitive information by accessing the unrestricted storage mechanism.::SCOPE:Integrity:IMPACT:Modify Application Data:IMPACT:Modify Files or Directories:NOTE:Attackers can modify or delete sensitive information by accessing the unrestricted storage mechanism.::,,,,,,,,
924,Improper Enforcement of Message Integrity During Transmission in a Communication Channel,Base,Incomplete,"The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.",Attackers might be able to modify the message and spoof the endpoint by interfering with the data as it crosses the network or by redirecting the connection to a system under their control.,::NATURE:ChildOf:CWE ID:345:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:345:VIEW ID:1003:ORDINAL:Primary::,,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::,,,"::SCOPE:Integrity:SCOPE:Confidentiality:IMPACT:Gain Privileges or Assume Identity:NOTE:If an attackers can spoof the endpoint, the attacker gains all the privileges that were intended for the original endpoint.::",,,,,,,,"::TYPE:Maintenance:NOTE:This entry should be made more comprehensive in later CWE versions, as it is likely an important design flaw that underlies (or chains to) other weaknesses.::"
939,Improper Authorization in Handler for Custom URL Scheme,Base,Incomplete,"The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.","Mobile platforms and other architectures allow the use of custom URL schemes to facilitate communication between applications. In the case of iOS, this is the only method to do inter-application communication. The implementation is at the developer's discretion which may open security flaws in the application. An example could be potentially dangerous functionality such as modifying files through a custom URL scheme.",::NATURE:ChildOf:CWE ID:862:VIEW ID:1000:ORDINAL:Primary::,,::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::,,,,,"::PHASE:Architecture and Design:DESCRIPTION:Utilize a user prompt pop-up to authorize potentially harmful actions such as those modifying data or dealing with sensitive information. When designing functionality of actions in the URL scheme, consider whether the action should be accessible to all mobile applications, or if an allowlist of applications to interface with is appropriate.::",::REFERENCE:CVE-2013-5725:DESCRIPTION:URL scheme has action replace which requires no user prompt and allows remote attackers to perform undesired actions.:LINK:https://www.cve.org/CVERecord?id=CVE-2013-5725::REFERENCE:CVE-2013-5726:DESCRIPTION:URL scheme has action follow and favorite which allows remote attackers to force user to perform undesired actions.:LINK:https://www.cve.org/CVERecord?id=CVE-2013-5726::,,,,,
940,Improper Verification of Source of a Communication Channel,Base,Incomplete,"The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.","When an attacker can successfully establish a communication channel from an untrusted origin, the attacker may be able to gain privileges and access unexpected functionality.",::NATURE:ChildOf:CWE ID:923:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::,,,::SCOPE:Access Control:SCOPE:Other:IMPACT:Gain Privileges or Assume Identity:IMPACT:Varies by Context:NOTE:An attacker can access any functionality that is inadvertently accessible to the source.::,,"::PHASE:Architecture and Design:DESCRIPTION:Use a mechanism that can validate the identity of the source, such as a certificate, and validate the integrity of data to ensure that it cannot be modified in transit using an Adversary-in-the-Middle (AITM) attack. When designing functionality of actions in the URL scheme, consider whether the action should be accessible to all mobile applications, or if an allowlist of applications to interface with is appropriate.::","::REFERENCE:CVE-2000-1218:DESCRIPTION:DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning:LINK:https://www.cve.org/CVERecord?id=CVE-2000-1218::REFERENCE:CVE-2005-0877:DESCRIPTION:DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning:LINK:https://www.cve.org/CVERecord?id=CVE-2005-0877::REFERENCE:CVE-2001-1452:DESCRIPTION:DNS server caches glue records received from non-delegated name servers:LINK:https://www.cve.org/CVERecord?id=CVE-2001-1452::",,,,::500::594::595::596::,"::TYPE:Relationship:NOTE:While many access control issues involve authenticating the user, this weakness is more about authenticating the actual source of the communication channel itself; there might not be any user in such cases.::"
941,Incorrectly Specified Destination in a Communication Channel,Base,Incomplete,"The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.","Attackers at the destination may be able to spoof trusted servers to steal data or cause a denial of service. There are at least two distinct weaknesses that can cause the product to communicate with an unintended destination: If the product allows an attacker to control which destination is specified, then the attacker can cause it to connect to an untrusted or malicious destination. For example, because UDP is a connectionless protocol, UDP packets can be spoofed by specifying a false source address in the packet; when the server receives the packet and sends a reply, it will specify a destination by using the source of the incoming packet - i.e., the false source. The server can then be tricked into sending traffic to the wrong host, which is effective for hiding the real source of an attack and for conducting a distributed denial of service (DDoS). As another example, server-side request forgery (SSRF) and XML External Entity (XXE) can be used to trick a server into making outgoing requests to hosts that cannot be directly accessed by the attacker due to firewall restrictions. If the product incorrectly specifies the destination, then an attacker who can control this destination might be able to spoof trusted servers. While the most common occurrence is likely due to misconfiguration by an administrator, this can be resultant from other weaknesses. For example, the product might incorrectly parse an e-mail or IP address and send sensitive data to an unintended destination. As another example, an Android application may use a sticky broadcast to communicate with a receiver for a particular application, but since sticky broadcasts can be processed by *any* receiver, this can allow a malicious application to access restricted data that was only intended for a different application.",::NATURE:ChildOf:CWE ID:923:VIEW ID:1000:ORDINAL:Primary::NATURE:CanPrecede:CWE ID:406:VIEW ID:1000::,,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Mobile:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::,,,,,,"::REFERENCE:CVE-2013-5211:DESCRIPTION:composite: NTP feature generates large responses (high amplification factor) with spoofed UDP source addresses.:LINK:https://www.cve.org/CVERecord?id=CVE-2013-5211::REFERENCE:CVE-1999-0513:DESCRIPTION:Classic Smurf attack, using spoofed ICMP packets to broadcast addresses.:LINK:https://www.cve.org/CVERecord?id=CVE-1999-0513::REFERENCE:CVE-1999-1379:DESCRIPTION:DNS query with spoofed source address causes more traffic to be returned to spoofed address than was sent by the attacker.:LINK:https://www.cve.org/CVERecord?id=CVE-1999-1379::",,,,,
1007,Insufficient Visual Distinction of Homoglyphs Presented to User,Base,Incomplete,"The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.","Some glyphs, pictures, or icons can be semantically distinct to a program, while appearing very similar or identical to a human user. These are referred to as homoglyphs. For example, the lowercase l (ell) and uppercase I (eye) have different character codes, but these characters can be displayed in exactly the same way to a user, depending on the font. This can also occur between different character sets. For example, the Latin capital letter A and the Greek capital letter Α (Alpha) are treated as distinct by programs, but may be displayed in exactly the same way to a user. Accent marks may also cause letters to appear very similar, such as the Latin capital letter grave mark À and its equivalent Á with the acute accent. Adversaries can exploit this visual similarity for attacks such as phishing, e.g. by providing a link to an attacker-controlled hostname that looks like a hostname that the victim trusts. In a different use of homoglyphs, an adversary may create a back door username that is visually similar to the username of a regular user, which then makes it more difficult for a system administrator to detect the malicious username while reviewing logs.",::NATURE:ChildOf:CWE ID:451:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Resultant::,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Web Based:TECHNOLOGY PREVALENCE:Sometimes::,,"::TERM:Homograph Attack:DESCRIPTION:Homograph is often used as a synonym of homoglyph by researchers, but according to Wikipedia, a homograph is a word that has multiple, distinct meanings.::","::PHASE:Architecture and Design:NOTE:This weakness may occur when characters from various character sets are allowed to be interchanged within a URL, username, email address, etc. without any notification to the user or underlying system being used.::PHASE:Implementation::",,,"::SCOPE:Integrity:SCOPE:Confidentiality:IMPACT:Other:NOTE:An attacker may ultimately redirect a user to a malicious website, by deceiving the user into believing the URL they are accessing is a trusted domain. However, the attack can also be used to forge log entries by using homoglyphs in usernames. Homoglyph manipulations are often the first step towards executing advanced attacks such as stealing a user's credentials, Cross-Site Scripting (XSS), or log forgery. If an attacker redirects a user to a malicious site, the attacker can mimic a trusted domain to steal account credentials and perform actions on behalf of the user, without the user's knowledge. Similarly, an attacker could create a username for a website that contains homoglyph characters, making it difficult for an admin to review logs and determine which users performed which actions.::","::METHOD:Manual Dynamic Analysis:DESCRIPTION:If utilizing user accounts, attempt to submit a username that contains homoglyphs. Similarly, check to see if links containing homoglyphs can be sent via email, web browsers, or other mechanisms.:EFFECTIVENESS:Moderate::","::PHASE:Implementation:DESCRIPTION:Use a browser that displays Punycode for IDNs in the URL and status bars, or which color code various scripts in URLs. Due to the prominence of homoglyph attacks, several browsers now help safeguard against this attack via the use of Punycode. For example, Mozilla Firefox and Google Chrome will display IDNs as Punycode if top-level domains do not restrict which characters can be used in domain names or if labels mix scripts for different languages.::PHASE:Implementation:DESCRIPTION:Use an email client that has strict filters and prevents messages that mix character sets to end up in a user's inbox. Certain email clients such as Google's GMail prevent the use of non-Latin characters in email addresses or in links contained within emails. This helps prevent homoglyph attacks by flagging these emails and redirecting them to a user's spam folder.::","::REFERENCE:CVE-2013-7236:DESCRIPTION:web forum allows impersonation of users with homoglyphs in account names:LINK:https://www.cve.org/CVERecord?id=CVE-2013-7236::REFERENCE:CVE-2012-0584:DESCRIPTION:Improper character restriction in URLs in web browser:LINK:https://www.cve.org/CVERecord?id=CVE-2012-0584::REFERENCE:CVE-2009-0652:DESCRIPTION:Incomplete denylist does not include homoglyphs of / and ? characters in URLs:LINK:https://www.cve.org/CVERecord?id=CVE-2009-0652::REFERENCE:CVE-2017-5015:DESCRIPTION:web browser does not convert hyphens to punycode, allowing IDN spoofing in URLs:LINK:https://www.cve.org/CVERecord?id=CVE-2017-5015::REFERENCE:CVE-2005-0233:DESCRIPTION:homoglyph spoofing using punycode in URLs and certificates:LINK:https://www.cve.org/CVERecord?id=CVE-2005-0233::REFERENCE:CVE-2005-0234:DESCRIPTION:homoglyph spoofing using punycode in URLs and certificates:LINK:https://www.cve.org/CVERecord?id=CVE-2005-0234::REFERENCE:CVE-2005-0235:DESCRIPTION:homoglyph spoofing using punycode in URLs and certificates:LINK:https://www.cve.org/CVERecord?id=CVE-2005-0235::",,,,::632::,
1021,Improper Restriction of Rendered UI Layers or Frames,Base,Incomplete,"The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.","A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.",::NATURE:ChildOf:CWE ID:441:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:610:VIEW ID:1003:ORDINAL:Primary::NATURE:ChildOf:CWE ID:451:VIEW ID:1000::,,::TECHNOLOGY CLASS:Web Based:TECHNOLOGY PREVALENCE:Undetermined::,,"::TERM:Clickjacking::TERM:UI Redress Attack::TERM:Tapjacking:DESCRIPTION:Tapjacking is similar to clickjacking, except it is used for mobile applications in which the user taps the application instead of performing a mouse click.::",::PHASE:Implementation::,,,"::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:IMPACT:Bypass Protection Mechanism:IMPACT:Read Application Data:IMPACT:Modify Application Data:NOTE:An attacker can trick a user into performing actions that are masked and hidden from the user's view. The impact varies widely, depending on the functionality of the underlying application. For example, in a social media application, clickjacking could be used to trik the user into changing privacy settings.::",,"::PHASE:Implementation:DESCRIPTION:The use of X-Frame-Options allows developers of web content to restrict the usage of their application within the form of overlays, frames, or iFrames. The developer can indicate from which domains can frame the content. The concept of X-Frame-Options is well documented, but implementation of this protection mechanism is in development to cover gaps. There is a need for allowing frames from multiple domains.::PHASE:Implementation:DESCRIPTION:A developer can use a frame-breaker script in each page that should not be framed. This is very helpful for legacy browsers that do not support X-Frame-Options security feature previously mentioned. It is also important to note that this tactic has been circumvented or bypassed. Improper usage of frames can persist in the web application through nested frames. The frame-breaking script does not intuitively account for multiple nested frames that can be presented to the user.::PHASE:Implementation:DESCRIPTION:This defense-in-depth technique can be used to prevent the improper usage of frames in web applications. It prioritizes the valid sources of data to be loaded into the application through the usage of declarative policies. Based on which implementation of Content Security Policy is in use, the developer should use the frame-ancestors directive or the frame-src directive to mitigate this weakness. Both directives allow for the placement of restrictions when it comes to allowing embedded content.::",::REFERENCE:CVE-2017-7440:DESCRIPTION:E-mail preview feature in a desktop application allows clickjacking attacks via a crafted e-mail message:LINK:https://www.cve.org/CVERecord?id=CVE-2017-7440::REFERENCE:CVE-2017-5697:DESCRIPTION:Hardware/firmware product has insufficient clickjacking protection in its web user interface:LINK:https://www.cve.org/CVERecord?id=CVE-2017-5697::REFERENCE:CVE-2017-4015:DESCRIPTION:Clickjacking in data-loss prevention product via HTTP response header.:LINK:https://www.cve.org/CVERecord?id=CVE-2017-4015::REFERENCE:CVE-2016-2496:DESCRIPTION:Tapjacking in permission dialog for mobile OS allows access of private storage using a partially-overlapping window.:LINK:https://www.cve.org/CVERecord?id=CVE-2016-2496::REFERENCE:CVE-2015-1241:DESCRIPTION:Tapjacking in web browser related to page navigation and touch/gesture events.:LINK:https://www.cve.org/CVERecord?id=CVE-2015-1241::REFERENCE:CVE-2017-0492:DESCRIPTION:System UI in mobile OS allows a malicious application to create a UI overlay of the entire screen to gain privileges.:LINK:https://www.cve.org/CVERecord?id=CVE-2017-0492::,,,,::103::181::222::504::506::587::654::,
1024,Comparison of Incompatible Types,Base,Incomplete,"The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.","In languages that are strictly typed but support casting/conversion, such as C or C++, the programmer might assume that casting one entity to the same type as another entity will ensure that the comparison will be performed correctly, but this cannot be guaranteed. In languages that are not strictly typed, such as PHP or JavaScript, there may be implicit casting/conversion to a type that the programmer is unaware of, causing unexpected results; for example, the string 123 might be converted to a number type. See examples.",::NATURE:ChildOf:CWE ID:697:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Primary::,::LANGUAGE NAME:JavaScript:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:PHP:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Varies by Context::,,::PHASE:Testing:DESCRIPTION:Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.::,,,,,,
1025,Comparison Using Wrong Factors,Base,Incomplete,"The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.","This can lead to incorrect results and resultant weaknesses. For example, the code might inadvertently compare references to objects, instead of the relevant contents of those objects, causing two equal objects to be considered unequal.",::NATURE:ChildOf:CWE ID:697:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Primary::,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Varies by Context::,,::PHASE:Testing:DESCRIPTION:Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.::,,,,,,
1037,Processor Optimization Removal or Modification of Security-critical Code,Base,Incomplete,"The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.",,::NATURE:ChildOf:CWE ID:1038:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Primary:DESCRIPTION:This weakness does not depend on other weaknesses and is the result of choices made by the processor in executing the specified application.::,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Rarely::TECHNOLOGY NAME:Processor Hardware:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design:NOTE:Optimizations built into the design of the processor can have unintended consequences during the execution of an application.::,,,::SCOPE:Integrity:IMPACT:Bypass Protection Mechanism:LIKELIHOOD:High:NOTE:A successful exploitation of this weakness will change the order of an application's execution and will likely be used to bypass specific protection mechanisms. This bypass can be exploited further to potentially read data that should otherwise be unaccessible.::,::METHOD:White Box:DESCRIPTION:In theory this weakness can be detected through the use of white box testing techniques where specifically crafted test cases are used in conjunction with debuggers to verify the order of statements being executed.:EFFECTIVENESS:Opportunistic::,,"::REFERENCE:CVE-2017-5715:DESCRIPTION:Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as Spectre.:LINK:https://www.cve.org/CVERecord?id=CVE-2017-5715::REFERENCE:CVE-2017-5753:DESCRIPTION:Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as Spectre.:LINK:https://www.cve.org/CVERecord?id=CVE-2017-5753::REFERENCE:CVE-2017-5754:DESCRIPTION:Intel processor optimizations related to speculative execution cause access control checks to be bypassed when placing data into the cache. Often known as Meltdown.:LINK:https://www.cve.org/CVERecord?id=CVE-2017-5754::",,,,::663::,"::TYPE:Maintenance:NOTE:As of CWE 4.9, members of the CWE Hardware SIG are closely analyzing this entry and others to improve CWE's coverage of transient execution weaknesses, which include issues related to Spectre, Meltdown, and other attacks. Additional investigation may include other weaknesses related to microarchitectural state. As a result, this entry might change significantly in CWE 4.10.::"
1041,Use of Redundant Code,Base,Incomplete,"The product has multiple functions, methods, procedures, macros, etc. that contain the same code.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. For example, if there are two copies of the same code, the programmer might fix a weakness in one copy while forgetting to fix the same weakness in another copy.",::NATURE:ChildOf:CWE ID:710:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,::PHASE:Implementation:DESCRIPTION:Merge common functionality into a single function and then call that function from across the entire code base.::,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-19::,,
1043,Data Element Aggregating an Excessively Large Number of Non-Primitive Elements,Base,Incomplete,The product uses a data element that has an excessively large number of sub-elements with non-primitive data types such as structures or aggregated objects.,"This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of excessively large may vary for each product or developer, CISQ recommends a default of 5 sub-elements.",::NATURE:ChildOf:CWE ID:1093:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-12::,,
1044,Architecture with Number of Horizontal Layers Outside of Expected Range,Base,Incomplete,The product's architecture contains too many - or too few - horizontal layers.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpretation of expected range may vary for each product or developer, CISQ recommends a default minimum of 4 layers and maximum of 8 layers.",::NATURE:ChildOf:CWE ID:710:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,::PHASE:Architecture and Design::,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-9::,,
1046,Creation of Immutable Text Using String Concatenation,Base,Incomplete,The product creates an immutable text string using string concatenation operations.,"When building a string via a looping feature (e.g., a FOR or WHILE loop), the use of += to append to the existing string will result in the creation of a new object with each iteration. This programming pattern can be inefficient in comparison with use of text buffer data elements. This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this could be influenced to create performance problem.",::NATURE:ChildOf:CWE ID:1176:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-2::,,
1047,Modules with Circular Dependencies,Base,Incomplete,"The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.","As an example, with Java, this weakness might indicate cycles between packages. This issue makes it more difficult to maintain the product due to insufficient modularity, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1120:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-7::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-13::,,
1048,Invokable Control Element with Large Number of Outward Calls,Base,Incomplete,"The code contains callable control elements that contain an excessively large number of references to other application objects external to the context of the callable, i.e. a Fan-Out value that is excessively large.","While the interpretation of excessively large Fan-Out value may vary for each product or developer, CISQ recommends a default of 5 referenced objects. This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",::NATURE:ChildOf:CWE ID:710:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-4::,,
1049,Excessive Data Query Operations in a Large Data Table,Base,Incomplete,The product performs a data query with a large number of joins and sub-queries on a large data table.,"This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of large data table and large number of joins or sub-queries may vary for each product or developer, CISQ recommends a default of 1 million rows for a large data table, a default minimum of 5 joins, and a default minimum of 3 sub-queries.",::NATURE:ChildOf:CWE ID:1176:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-4::,,
1050,Excessive Platform Resource Consumption within a Loop,Base,Incomplete,"The product has a loop body or loop condition that contains a control element that directly or indirectly consumes platform resources, e.g. messaging, sessions, locks, or file descriptors.","This issue can make the product perform more slowly. If an attacker can influence the number of iterations in the loop, then this performance problem might allow a denial of service by consuming more platform resources than intended.",::NATURE:ChildOf:CWE ID:405:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-8::,,
1051,Initialization with Hard-Coded Network Resource Configuration Data,Base,Incomplete,The product initializes data using hard-coded values that act as network resource identifiers.,"This issue can prevent the product from running reliably, e.g. if it runs in an environment does not use the hard-coded network resource identifiers. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:665:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-18::,,
1052,Excessive Use of Hard-Coded Literals in Initialization,Base,Incomplete,The product initializes a data element using a hard-coded literal that is not a simple integer or static constant element.,"This issue makes it more difficult to modify or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",::NATURE:ChildOf:CWE ID:665:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-3::,,
1053,Missing Documentation for Design,Base,Incomplete,The product does not have documentation that represents how it is designed.,This issue can make it more difficult to understand and maintain the product. It can make it more difficult and time-consuming to detect and/or fix vulnerabilities.,::NATURE:ChildOf:CWE ID:1059:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,,,,,,,,,
1054,Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer,Base,Incomplete,"The code at one architectural layer invokes code that resides at a deeper layer than the adjacent layer, i.e., the invocation skips at least one layer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer.","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",::NATURE:ChildOf:CWE ID:1061:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-12::,,
1055,Multiple Inheritance from Concrete Classes,Base,Incomplete,The product contains a class with inheritance from more than one concrete class.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",::NATURE:ChildOf:CWE ID:1093:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-2::,,
1056,Invokable Control Element with Variadic Parameters,Base,Incomplete,A named-callable or method control element has a signature that supports a variable (variadic) number of parameters or arguments.,"This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability. With variadic arguments, it can be difficult or inefficient for manual analysis to be certain of which function/method is being invoked.",::NATURE:ChildOf:CWE ID:1120:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-8::,,
1057,Data Access Operations Outside of Expected Data Manager Component,Base,Incomplete,"The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager.","This issue can make the product perform more slowly than intended, since the intended central data manager may have been explicitly optimized for performance or other quality characteristics. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1061:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-11::,,
1058,Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element,Base,Incomplete,The code contains a function or method that operates in a multi-threaded environment but owns an unsafe non-final static storable or member data element.,"This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:662:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:662:VIEW ID:1305:ORDINAL:Primary::NATURE:ChildOf:CWE ID:662:VIEW ID:1340:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-11::,,
1060,Excessive Number of Inefficient Server-Side Data Accesses,Base,Incomplete,The product performs too many data queries without using efficient data processing functionality such as stored procedures.,"This issue can make the product perform more slowly due to computational expense. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of too many data queries may vary for each product or developer, CISQ recommends a default maximum of 5 data queries for an inefficient function/procedure.",::NATURE:ChildOf:CWE ID:1120:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-9::,,
1062,Parent Class with References to Child Class,Base,Incomplete,"The code has a parent class that contains references to a child class, its methods, or its members.","This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1061:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-14::,,
1063,Creation of Class Instance within a Static Code Block,Base,Incomplete,A static code block creates an instance of a class.,"This pattern identifies situations where a storable data element or member data element is initialized with a value in a block of code which is declared as static. This issue can make the product perform more slowly by performing initialization before it is needed. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1176:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-1::,,
1064,Invokable Control Element with Signature Containing an Excessive Number of Parameters,Base,Incomplete,"The product contains a function, subroutine, or method whose signature has an unnecessarily large number of parameters/arguments.","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpretation of large number of parameters. may vary for each product or developer, CISQ recommends a default maximum of 7 parameters/arguments.",::NATURE:ChildOf:CWE ID:1120:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-13::,,
1065,Runtime Resource Management Control Element in a Component Built to Run on Application Servers,Base,Incomplete,"The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server.","This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:710:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-5::,,
1066,Missing Serialization Control Element,Base,Incomplete,The product contains a serializable data element that does not have an associated serialization method.,"This issue can prevent the product from running reliably, e.g. by triggering an exception. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability. As examples, the serializable nature of a data element comes from a serializable SerializableAttribute attribute in .NET and the inheritance from the java.io.Serializable interface in Java.",::NATURE:ChildOf:CWE ID:710:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-2::,,
1067,Excessive Execution of Sequential Searches of Data Resource,Base,Incomplete,The product contains a data query against an SQL table or view that is configured in a way that does not utilize an index and may cause sequential searches to be performed.,"This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1176:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-5::,,
1068,Inconsistency Between Implementation and Documented Design,Base,Incomplete,The implementation of the product is not consistent with the design as described within the relevant documentation.,"This issue makes it more difficult to maintain the product due to inconsistencies, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",::NATURE:ChildOf:CWE ID:710:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,::TECHNOLOGY CLASS:Not Technology-Specific:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:ICS/OT:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Implementation::PHASE:Architecture and Design::,,,,,,,,,,,
1069,Empty Exception Block,Base,Incomplete,"An invokable code block contains an exception handling block that does not contain any code, i.e. is empty.","When an exception handling block (such as a Catch and Finally block) is used, but that block is empty, this can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1071:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,::PHASE:Implementation:DESCRIPTION:For every exception block add code that handles the specific exception in the way intended by the application.::,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-1::,,
1070,Serializable Data Element Containing non-Serializable Item Elements,Base,Incomplete,"The product contains a serializable, storable data element such as a field or member, but the data element contains member elements that are not serializable.","This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability. As examples, the serializable nature of a data element comes from a serializable SerializableAttribute attribute in .NET and the inheritance from the java.io.Serializable interface in Java.",::NATURE:ChildOf:CWE ID:710:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-3::,,
1071,Empty Code Block,Base,Incomplete,"The source code contains a block that does not contain any code, i.e., the block is empty.","Empty code blocks can occur in the bodies of conditionals, function or method definitions, exception handlers, etc. While an empty code block might be intentional, it might also indicate incomplete implementation, accidental code deletion, unexpected macro expansion, etc. For some programming languages and constructs, an empty block might be allowed by the syntax, but the lack of any behavior within the block might violate a convention or API in such a way that it is an error.",::NATURE:ChildOf:CWE ID:1164:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,,,
1072,Data Resource Access without Use of Connection Pooling,Base,Incomplete,The product accesses a data resource through a database without using a connection pooling capability.,"This issue can make the product perform more slowly, as connection pools allow connections to be reused without the overhead and time consumption of opening and closing a new connection. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:405:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-13::,,
1073,Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses,Base,Incomplete,"The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities.","This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of large number of data accesses/queries may vary for each product or developer, CISQ recommends a default maximum of 2 data accesses per function/method.",::NATURE:ChildOf:CWE ID:405:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Performance::,,,,,,::TAXONOMY NAME:OMG ASCPEM:ENTRY ID:ASCPEM-PRF-10::,,
1074,Class with Excessively Deep Inheritance,Base,Incomplete,"A class has an inheritance level that is too high, i.e., it has a large number of parent classes.","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpretation of large number of parent classes may vary for each product or developer, CISQ recommends a default maximum of 7 parent classes.",::NATURE:ChildOf:CWE ID:1093:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-17::,,
1075,Unconditional Control Flow Transfer outside of Switch Block,Base,Incomplete,The product performs unconditional control transfer (such as a goto) in code outside of a branching structure such as a switch block.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",::NATURE:ChildOf:CWE ID:1120:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-1::,,
1079,Parent Class without Virtual Destructor Method,Base,Incomplete,"A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.","This issue can prevent the product from running reliably due to undefined or unexpected behaviors. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1076:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-16::,,
1080,Source Code File with Excessive Number of Lines of Code,Base,Incomplete,A source code file has too many lines of code.,"This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpretation of too many lines of code may vary for each product or developer, CISQ recommends a default threshold value of 1000.",::NATURE:ChildOf:CWE ID:1120:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-8::,,
1082,Class Instance Self Destruction Control Element,Base,Incomplete,The code contains a class instance that calls the method or function to delete or destroy itself.,"For example, in C++, delete this will cause the object to delete itself. This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1076:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-7::,,
1083,Data Access from Outside Expected Data Manager Component,Base,Incomplete,"The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component.","When the product has a data access component, the design may be intended to handle all data access operations through that component. If a data access operation is performed outside of that component, then this may indicate a violation of the intended design. This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",::NATURE:ChildOf:CWE ID:1061:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Reliability::,,,,,,::TAXONOMY NAME:OMG ASCRM:ENTRY ID:ASCRM-RLB-10::,,
1084,Invokable Control Element with Excessive File or Data Access Operations,Base,Incomplete,A function or method contains too many operations that utilize a data manager or file resource.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpretation of too many operations may vary for each product or developer, CISQ recommends a default maximum of 7 operations for the same data manager or file.",::NATURE:ChildOf:CWE ID:405:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,,,,,,,::SCOPE:Other:IMPACT:Reduce Maintainability::,,,,,,::TAXONOMY NAME:OMG ASCMM:ENTRY ID:ASCMM-MNT-14::,,
