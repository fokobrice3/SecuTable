"Name","Status","Description","References","Phase","Votes","Comments"
CVE-2020-15190,Candidate,"In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `tf.raw_ops.Switch` operation takes as input a tensor and a boolean and outputs two tensors. Depending on the boolean value, one of the tensors is exactly the input tensor whereas the other one should be an empty tensor. However, the eager runtime traverses all tensors in the output. Since only one of the tensors is defined, the other one is `nullptr`, hence we are binding a reference to `nullptr`. This is undefined behavior and reported as an error if compiling with `-fsanitize=null`. In this case, this results in a segmentation fault The issue is patched in commit da8558533d925694483d2c136a9220d6d49d843c, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4g9f-63rx-5cw4   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4g9f-63rx-5cw4   |   MISC:https://github.com/tensorflow/tensorflow/commit/da8558533d925694483d2c136a9220d6d49d843c   |   URL:https://github.com/tensorflow/tensorflow/commit/da8558533d925694483d2c136a9220d6d49d843c   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15191,Candidate,"In Tensorflow before versions 2.2.1 and 2.3.1, if a user passes an invalid argument to `dlpack.to_dlpack` the expected validations will cause variables to bind to `nullptr` while setting a `status` variable to the error condition. However, this `status` argument is not properly checked. Hence, code following these methods will bind references to null pointers. This is undefined behavior and reported as an error if compiling with `-fsanitize=null`. The issue is patched in commit 22e07fb204386768e5bcbea563641ea11f96ceb8 and is released in TensorFlow versions 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q8qj-fc9q-cphr   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q8qj-fc9q-cphr   |   MISC:https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8   |   URL:https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15192,Candidate,"In Tensorflow before versions 2.2.1 and 2.3.1, if a user passes a list of strings to `dlpack.to_dlpack` there is a memory leak following an expected validation failure. The issue occurs because the `status` argument during validation failures is not properly checked. Since each of the above methods can return an error status, the `status` value must be checked before continuing. The issue is patched in commit 22e07fb204386768e5bcbea563641ea11f96ceb8 and is released in TensorFlow versions 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8fxw-76px-3rxv   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8fxw-76px-3rxv   |   MISC:https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8   |   URL:https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15193,Candidate,"In Tensorflow before versions 2.2.1 and 2.3.1, the implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor. However, there is nothing stopping users from passing in a Python object instead of a tensor. The uninitialized memory address is due to a `reinterpret_cast` Since the `PyObject` is a Python object, not a TensorFlow Tensor, the cast to `EagerTensor` fails. The issue is patched in commit 22e07fb204386768e5bcbea563641ea11f96ceb8 and is released in TensorFlow versions 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v   |   MISC:https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8   |   URL:https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15194,Candidate,"In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `SparseFillEmptyRowsGrad` implementation has incomplete validation of the shapes of its arguments. Although `reverse_index_map_t` and `grad_values_t` are accessed in a similar pattern, only `reverse_index_map_t` is validated to be of proper shape. Hence, malicious users can pass a bad `grad_values_t` to trigger an assertion failure in `vec`, causing denial of service in serving installations. The issue is patched in commit 390611e0d45c5793c7066110af37c8514e6a6c54, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.""","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9mqp-7v2h-2382   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9mqp-7v2h-2382   |   MISC:https://github.com/tensorflow/tensorflow/commit/390611e0d45c5793c7066110af37c8514e6a6c54   |   URL:https://github.com/tensorflow/tensorflow/commit/390611e0d45c5793c7066110af37c8514e6a6c54   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15195,Candidate,"In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the implementation of `SparseFillEmptyRowsGrad` uses a double indexing pattern. It is possible for `reverse_index_map(i)` to be an index outside of bounds of `grad_values`, thus resulting in a heap buffer overflow. The issue is patched in commit 390611e0d45c5793c7066110af37c8514e6a6c54, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-63xm-rx5p-xvqr   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-63xm-rx5p-xvqr   |   MISC:https://github.com/tensorflow/tensorflow/commit/390611e0d45c5793c7066110af37c8514e6a6c54   |   URL:https://github.com/tensorflow/tensorflow/commit/390611e0d45c5793c7066110af37c8514e6a6c54   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15196,Candidate,"In Tensorflow version 2.3.0, the `SparseCountSparseOutput` and `RaggedCountSparseOutput` implementations don't validate that the `weights` tensor has the same shape as the data. The check exists for `DenseCountSparseOutput`, where both tensors are fully specified. In the sparse and ragged count weights are still accessed in parallel with the data. But, since there is no validation, a user passing fewer weights than the values for the tensors can generate a read from outside the bounds of the heap buffer allocated for the weights. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pg59-2f92-5cph   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pg59-2f92-5cph   |   MISC:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   URL:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15197,Candidate,"In Tensorflow before version 2.3.1, the `SparseCountSparseOutput` implementation does not validate that the input arguments form a valid sparse tensor. In particular, there is no validation that the `indices` tensor has rank 2. This tensor must be a matrix because code assumes its elements are accessed as elements of a matrix. However, malicious users can pass in tensors of different rank, resulting in a `CHECK` assertion failure and a crash. This can be used to cause denial of service in serving installations, if users are allowed to control the components of the input sparse tensor. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qc53-44cj-vfvx   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qc53-44cj-vfvx   |   MISC:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   URL:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15198,Candidate,"In Tensorflow before version 2.3.1, the `SparseCountSparseOutput` implementation does not validate that the input arguments form a valid sparse tensor. In particular, there is no validation that the `indices` tensor has the same shape as the `values` one. The values in these tensors are always accessed in parallel. Thus, a shape mismatch can result in accesses outside the bounds of heap allocated buffers. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jc87-6vpp-7ff3   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jc87-6vpp-7ff3   |   MISC:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   URL:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15199,Candidate,"In Tensorflow before version 2.3.1, the `RaggedCountSparseOutput` does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the `splits` tensor has the minimum required number of elements. Code uses this quantity to initialize a different data structure. Since `BatchedMap` is equivalent to a vector, it needs to have at least one element to not be `nullptr`. If user passes a `splits` tensor that is empty or has exactly one element, we get a `SIGABRT` signal raised by the operating system. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x5cp-9pcf-pp3h   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x5cp-9pcf-pp3h   |   MISC:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   URL:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1520,Candidate,"A remote code execution vulnerability exists when the Windows Font Driver Host improperly handles memory.An attacker who successfully exploited the vulnerability would gain execution on a victim system.The security update addresses the vulnerability by correcting how the Windows Font Driver Host handles memory., aka 'Windows Font Driver Host Remote Code Execution Vulnerability'.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1520   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1520",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15200,Candidate,"In Tensorflow before version 2.3.1, the `RaggedCountSparseOutput` implementation does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the values in the `splits` tensor generate a valid partitioning of the `values` tensor. Thus, the code sets up conditions to cause a heap buffer overflow. A `BatchedMap` is equivalent to a vector where each element is a hashmap. However, if the first element of `splits_values` is not 0, `batch_idx` will never be 1, hence there will be no hashmap at index 0 in `per_batch_counts`. Trying to access that in the user code results in a segmentation fault. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x7rp-74x2-mjf3   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x7rp-74x2-mjf3   |   MISC:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   URL:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15201,Candidate,"In Tensorflow before version 2.3.1, the `RaggedCountSparseOutput` implementation does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the values in the `splits` tensor generate a valid partitioning of the `values` tensor. Hence, the code is prone to heap buffer overflow. If `split_values` does not end with a value at least `num_values` then the `while` loop condition will trigger a read outside of the bounds of `split_values` once `batch_idx` grows too large. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p5f8-gfw5-33w4   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p5f8-gfw5-33w4   |   MISC:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   URL:https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15202,Candidate,"In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `Shard` API in TensorFlow expects the last argument to be a function taking two `int64` (i.e., `long long`) arguments. However, there are several places in TensorFlow where a lambda taking `int` or `int32` arguments is being used. In these cases, if the amount of work to be parallelized is large enough, integer truncation occurs. Depending on how the two arguments of the lambda are used, this can result in segfaults, read/write outside of heap allocated arrays, stack overflows, or data corruption. The issue is patched in commits 27b417360cbd671ef55915e4bb6bb06af8b8a832 and ca8c013b5e97b1373b3bb1c97ea655e69f31a575, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6fg-mjxg-hqq4   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6fg-mjxg-hqq4   |   MISC:https://github.com/tensorflow/tensorflow/commit/27b417360cbd671ef55915e4bb6bb06af8b8a832   |   URL:https://github.com/tensorflow/tensorflow/commit/27b417360cbd671ef55915e4bb6bb06af8b8a832   |   MISC:https://github.com/tensorflow/tensorflow/commit/ca8c013b5e97b1373b3bb1c97ea655e69f31a575   |   URL:https://github.com/tensorflow/tensorflow/commit/ca8c013b5e97b1373b3bb1c97ea655e69f31a575   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15203,Candidate,"In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, by controlling the `fill` argument of tf.strings.as_string, a malicious attacker is able to trigger a format string vulnerability due to the way the internal format use in a `printf` call is constructed. This may result in segmentation fault. The issue is patched in commit 33be22c65d86256e6826666662e40dbdfe70ee83, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xmq7-7fxm-rr79   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xmq7-7fxm-rr79   |   MISC:https://github.com/tensorflow/tensorflow/commit/33be22c65d86256e6826666662e40dbdfe70ee83   |   URL:https://github.com/tensorflow/tensorflow/commit/33be22c65d86256e6826666662e40dbdfe70ee83   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15204,Candidate,"In eager mode, TensorFlow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1 does not set the session state. Hence, calling `tf.raw_ops.GetSessionHandle` or `tf.raw_ops.GetSessionHandleV2` results in a null pointer dereference In linked snippet, in eager mode, `ctx->session_state()` returns `nullptr`. Since code immediately dereferences this, we get a segmentation fault. The issue is patched in commit 9a133d73ae4b4664d22bd1aa6d654fec13c52ee1, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q8gv-q7wr-9jf8   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q8gv-q7wr-9jf8   |   MISC:https://github.com/tensorflow/tensorflow/commit/9a133d73ae4b4664d22bd1aa6d654fec13c52ee1   |   URL:https://github.com/tensorflow/tensorflow/commit/9a133d73ae4b4664d22bd1aa6d654fec13c52ee1   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15205,Candidate,"In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `data_splits` argument of `tf.raw_ops.StringNGrams` lacks validation. This allows a user to pass values that can cause heap overflow errors and even leak contents of memory In the linked code snippet, all the binary strings after `ee ff` are contents from the memory stack. Since these can contain return addresses, this data leak can be used to defeat ASLR. The issue is patched in commit 0462de5b544ed4731aa2fb23946ac22c01856b80, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g7p5-5759-qv46   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g7p5-5759-qv46   |   MISC:https://github.com/tensorflow/tensorflow/commit/0462de5b544ed4731aa2fb23946ac22c01856b80   |   URL:https://github.com/tensorflow/tensorflow/commit/0462de5b544ed4731aa2fb23946ac22c01856b80   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15206,Candidate,"In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, changing the TensorFlow's `SavedModel` protocol buffer and altering the name of required keys results in segfaults and data corruption while loading the model. This can cause a denial of service in products using `tensorflow-serving` or other inference-as-a-service installments. Fixed were added in commits f760f88b4267d981e13f4b302c437ae800445968 and fcfef195637c6e365577829c4d67681695956e7d (both going into TensorFlow 2.2.0 and 2.3.0 but not yet backported to earlier versions). However, this was not enough, as #41097 reports a different failure mode. The issue is patched in commit adf095206f25471e864a8e63a0f1caef53a0e3a6, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w5gh-2wr2-pm6g   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w5gh-2wr2-pm6g   |   MISC:https://github.com/tensorflow/tensorflow/commit/adf095206f25471e864a8e63a0f1caef53a0e3a6   |   URL:https://github.com/tensorflow/tensorflow/commit/adf095206f25471e864a8e63a0f1caef53a0e3a6   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15207,Candidate,"In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, to mimic Python's indexing with negative values, TFLite uses `ResolveAxis` to convert negative values to positive indices. However, the only check that the converted index is now valid is only present in debug builds. If the `DCHECK` does not trigger, then code execution moves ahead with a negative index. This, in turn, results in accessing data out of bounds which results in segfaults and/or data corruption. The issue is patched in commit 2d88f470dea2671b430884260f3626b1fe99830a, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q4qf-3fc6-8x34   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q4qf-3fc6-8x34   |   MISC:https://github.com/tensorflow/tensorflow/commit/2d88f470dea2671b430884260f3626b1fe99830a   |   URL:https://github.com/tensorflow/tensorflow/commit/2d88f470dea2671b430884260f3626b1fe99830a   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15208,Candidate,"In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, when determining the common dimension size of two tensors, TFLite uses a `DCHECK` which is no-op outside of debug compilation modes. Since the function always returns the dimension of the first tensor, malicious attackers can craft cases where this is larger than that of the second tensor. In turn, this would result in reads/writes outside of bounds since the interpreter will wrongly assume that there is enough data in both tensors. The issue is patched in commit 8ee24e7949a203d234489f9da2c5bf45a7d5157d, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mxjj-953w-2c2v   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mxjj-953w-2c2v   |   MISC:https://github.com/tensorflow/tensorflow/commit/8ee24e7949a203d234489f9da2c5bf45a7d5157d   |   URL:https://github.com/tensorflow/tensorflow/commit/8ee24e7949a203d234489f9da2c5bf45a7d5157d   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15209,Candidate,"In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, a crafted TFLite model can force a node to have as input a tensor backed by a `nullptr` buffer. This can be achieved by changing a buffer index in the flatbuffer serialization to convert a read-only tensor to a read-write one. The runtime assumes that these buffers are written to before a possible read, hence they are initialized with `nullptr`. However, by changing the buffer index for a tensor and implicitly converting that tensor to be a read-write one, as there is nothing in the model that writes to it, we get a null pointer dereference. The issue is patched in commit 0b5662bc, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qh32-6jjc-qprm   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qh32-6jjc-qprm   |   MISC:https://github.com/tensorflow/tensorflow/commit/0b5662bc2be13a8c8f044d925d87fb6e56247cd8   |   URL:https://github.com/tensorflow/tensorflow/commit/0b5662bc2be13a8c8f044d925d87fb6e56247cd8   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1521,Candidate,"An elevation of privilege vulnerability exists when the Windows Speech Runtime improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka 'Windows Speech Runtime Elevation of Privilege Vulnerability'. This CVE ID is unique from CVE-2020-1522.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1521   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1521",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15210,Candidate,"In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, if a TFLite saved model uses the same tensor as both input and output of an operator, then, depending on the operator, we can observe a segmentation fault or just memory corruption. We have patched the issue in d58c96946b and will release patch releases for all versions between 1.15 and 2.3. We recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x9j7-x98r-r4w2   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x9j7-x98r-r4w2   |   MISC:https://github.com/tensorflow/tensorflow/commit/d58c96946b2880991d63d1dacacb32f0a4dfa453   |   URL:https://github.com/tensorflow/tensorflow/commit/d58c96946b2880991d63d1dacacb32f0a4dfa453   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15211,Candidate,"In TensorFlow Lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, saved models in the flatbuffer format use a double indexing scheme: a model has a set of subgraphs, each subgraph has a set of operators and each operator has a set of input/output tensors. The flatbuffer format uses indices for the tensors, indexing into an array of tensors that is owned by the subgraph. This results in a pattern of double array indexing when trying to get the data of each tensor. However, some operators can have some tensors be optional. To handle this scenario, the flatbuffer model uses a negative `-1` value as index for these tensors. This results in special casing during validation at model loading time. Unfortunately, this means that the `-1` index is a valid tensor index for any operator, including those that don't expect optional inputs and including for output tensors. Thus, this allows writing and reading from outside the bounds of heap allocated arrays, although only at a specific offset from the start of these arrays. This results in both read and write gadgets, albeit very limited in scope. The issue is patched in several commits (46d5b0852, 00302787b7, e11f5558, cd31fd0ce, 1970c21, and fff2c83), and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1. A potential workaround would be to add a custom `Verifier` to the model loading code to ensure that only operators which accept optional inputs use the `-1` special value and only for the tensors that they expect to be optional. Since this allow-list type approach is erro-prone, we advise upgrading to the patched code.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cvpc-8phh-8f45   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cvpc-8phh-8f45   |   MISC:https://github.com/tensorflow/tensorflow/commit/00302787b788c5ff04cb6f62aed5a74d936e86c0   |   URL:https://github.com/tensorflow/tensorflow/commit/00302787b788c5ff04cb6f62aed5a74d936e86c0   |   MISC:https://github.com/tensorflow/tensorflow/commit/1970c2158b1ffa416d159d03c3370b9a462aee35   |   URL:https://github.com/tensorflow/tensorflow/commit/1970c2158b1ffa416d159d03c3370b9a462aee35   |   MISC:https://github.com/tensorflow/tensorflow/commit/46d5b0852528ddfd614ded79bccc75589f801bd9   |   URL:https://github.com/tensorflow/tensorflow/commit/46d5b0852528ddfd614ded79bccc75589f801bd9   |   MISC:https://github.com/tensorflow/tensorflow/commit/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f   |   URL:https://github.com/tensorflow/tensorflow/commit/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f   |   MISC:https://github.com/tensorflow/tensorflow/commit/e11f55585f614645b360563072ffeb5c3eeff162   |   URL:https://github.com/tensorflow/tensorflow/commit/e11f55585f614645b360563072ffeb5c3eeff162   |   MISC:https://github.com/tensorflow/tensorflow/commit/fff2c8326280c07733828f990548979bdc893859   |   URL:https://github.com/tensorflow/tensorflow/commit/fff2c8326280c07733828f990548979bdc893859   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   SUSE:openSUSE-SU-2020:1766   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15212,Candidate,"In TensorFlow Lite before versions 2.2.1 and 2.3.1, models using segment sum can trigger writes outside of bounds of heap allocated buffers by inserting negative elements in the segment ids tensor. Users having access to `segment_ids_data` can alter `output_index` and then write to outside of `output_data` buffer. This might result in a segmentation fault but it can also be used to further corrupt the memory and can be chained with other vulnerabilities to create more advanced exploits. The issue is patched in commit 204945b19e44b57906c9344c0d00120eeeae178a and is released in TensorFlow versions 2.2.1, or 2.3.1. A potential workaround would be to add a custom `Verifier` to the model loading code to ensure that the segment ids are all positive, although this only handles the case when the segment ids are stored statically in the model. A similar validation could be done if the segment ids are generated at runtime between inference steps. If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx2x-85gr-wrpq   |   MISC:https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a   |   URL:https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15213,Candidate,"In TensorFlow Lite before versions 2.2.1 and 2.3.1, models using segment sum can trigger a denial of service by causing an out of memory allocation in the implementation of segment sum. Since code uses the last element of the tensor holding them to determine the dimensionality of output tensor, attackers can use a very large value to trigger a large allocation. The issue is patched in commit 204945b19e44b57906c9344c0d00120eeeae178a and is released in TensorFlow versions 2.2.1, or 2.3.1. A potential workaround would be to add a custom `Verifier` to limit the maximum value in the segment ids tensor. This only handles the case when the segment ids are stored statically in the model, but a similar validation could be done if the segment ids are generated at runtime, between inference steps. However, if the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hjmq-236j-8m87   |   MISC:https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a   |   URL:https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15214,Candidate,"In TensorFlow Lite before versions 2.2.1 and 2.3.1, models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor. This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array. This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits. The issue is patched in commit 204945b19e44b57906c9344c0d00120eeeae178a and is released in TensorFlow versions 2.2.1, or 2.3.1. A potential workaround would be to add a custom `Verifier` to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model. A similar validation could be done if the segment ids are generated at runtime between inference steps. If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm   |   MISC:https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a   |   URL:https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a   |   MISC:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1   |   URL:https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15215,Candidate,"Electron before versions 11.0.0-beta.6, 10.1.2, 9.3.1 or 8.5.2 is vulnerable to a context isolation bypass. Apps using both `contextIsolation` and `sandbox: true` are affected. Apps using both `contextIsolation` and `nodeIntegrationInSubFrames: true` are affected. This is a context isolation bypass, meaning that code running in the main world context in the renderer can reach into the isolated Electron context and perform privileged actions.","CONFIRM:https://github.com/electron/electron/security/advisories/GHSA-56pc-6jqp-xqj8   |   URL:https://github.com/electron/electron/security/advisories/GHSA-56pc-6jqp-xqj8",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15216,Candidate,"In goxmldsig (XML Digital Signatures implemented in pure Go) before version 1.1.0, with a carefully crafted XML file, an attacker can completely bypass signature validation and pass off an altered file as a signed one. A patch is available, all users of goxmldsig should upgrade to at least revision f6188febf0c29d7ffe26a0436212b19cb9615e64 or version 1.1.0","CONFIRM:https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7   |   URL:https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7   |   FEDORA:FEDORA-2021-9316ee2948   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GUH33FPUXED3FHYL25BJOQPRKFGPOMS2/   |   FEDORA:FEDORA-2021-a2a7673da2   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZECBFD4M4PHBMBOCMSQ537NOU37QOVWP/   |   MISC:https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64   |   URL:https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64   |   MISC:https://pkg.go.dev/github.com/russellhaering/goxmldsig?tab=overview   |   URL:https://pkg.go.dev/github.com/russellhaering/goxmldsig?tab=overview",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15217,Candidate,"In GLPI before version 9.5.2, there is a leakage of user information through the public FAQ. The issue was introduced in version 9.5.0 and patched in 9.5.2. As a workaround, disable public access to the FAQ.","CONFIRM:https://github.com/glpi-project/glpi/commit/39e25591efddc560e3679ab07e443ee6198705e2   |   URL:https://github.com/glpi-project/glpi/commit/39e25591efddc560e3679ab07e443ee6198705e2   |   CONFIRM:https://github.com/glpi-project/glpi/security/advisories/GHSA-x9hg-j29f-wvvv   |   URL:https://github.com/glpi-project/glpi/security/advisories/GHSA-x9hg-j29f-wvvv",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15218,Candidate,"Combodo iTop is a web based IT Service Management tool. In iTop before versions 2.7.2 and 3.0.0, admin pages are cached, so that their content is visible after deconnection by using the browser back button. This is fixed in versions 2.7.2 and 3.0.0.","CONFIRM:https://github.com/Combodo/iTop/security/advisories/GHSA-3m3g-86hp-5p2j   |   URL:https://github.com/Combodo/iTop/security/advisories/GHSA-3m3g-86hp-5p2j",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15219,Candidate,"Combodo iTop is a web based IT Service Management tool. In iTop before versions 2.7.2 and 3.0.0, when a download error is triggered in the user portal, an SQL query is displayed to the user. This is fixed in versions 2.7.2 and 3.0.0.","CONFIRM:https://github.com/Combodo/iTop/security/advisories/GHSA-q5cf-46rg-frf8   |   URL:https://github.com/Combodo/iTop/security/advisories/GHSA-q5cf-46rg-frf8",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1522,Candidate,"An elevation of privilege vulnerability exists when the Windows Speech Runtime improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka 'Windows Speech Runtime Elevation of Privilege Vulnerability'. This CVE ID is unique from CVE-2020-1521.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1522   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1522",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15220,Candidate,"Combodo iTop is a web based IT Service Management tool. In iTop before versions 2.7.2 and 3.0.0, two cookies are created for the same session, which leads to a possibility to steal user session. This is fixed in versions 2.7.2 and 3.0.0.","CONFIRM:https://github.com/Combodo/iTop/security/advisories/GHSA-qw4q-cmcv-7vv2   |   URL:https://github.com/Combodo/iTop/security/advisories/GHSA-qw4q-cmcv-7vv2",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15221,Candidate,"Combodo iTop is a web based IT Service Management tool. In iTop before versions 2.7.2 and 3.0.0, by modifying target browser local storage, an XSS can be generated in the iTop console breadcrumb. This is fixed in versions 2.7.2 and 3.0.0.","CONFIRM:https://github.com/Combodo/iTop/security/advisories/GHSA-w6g2-p7pf-7hvw   |   URL:https://github.com/Combodo/iTop/security/advisories/GHSA-w6g2-p7pf-7hvw",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15222,Candidate,"In ORY Fosite (the security first OAuth2 & OpenID Connect framework for Go) before version 0.31.0, when using ""private_key_jwt"" authentication the uniqueness of the `jti` value is not checked. When using client authentication method ""private_key_jwt"", OpenId specification says the following about assertion `jti`: ""A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties"". Hydra does not seem to check the uniqueness of this `jti` value. This problem is fixed in version 0.31.0.","CONFIRM:https://github.com/ory/fosite/security/advisories/GHSA-v3q9-2p3m-7g43   |   URL:https://github.com/ory/fosite/security/advisories/GHSA-v3q9-2p3m-7g43   |   MISC:https://github.com/ory/fosite/commit/0c9e0f6d654913ad57c507dd9a36631e1858a3e9   |   URL:https://github.com/ory/fosite/commit/0c9e0f6d654913ad57c507dd9a36631e1858a3e9   |   MISC:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication   |   URL:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15223,Candidate,"In ORY Fosite (the security first OAuth2 & OpenID Connect framework for Go) before version 0.34.0, the `TokenRevocationHandler` ignores errors coming from the storage. This can lead to unexpected 200 status codes indicating successful revocation while the token is still valid. Whether an attacker can use this for her advantage depends on the ability to trigger errors in the store. This is fixed in version 0.34.0","CONFIRM:https://github.com/ory/fosite/security/advisories/GHSA-7mqr-2v3q-v2wm   |   URL:https://github.com/ory/fosite/security/advisories/GHSA-7mqr-2v3q-v2wm   |   MISC:https://github.com/ory/fosite/commit/03dd55813f5521985f7dd64277b7ba0cf1441319   |   URL:https://github.com/ory/fosite/commit/03dd55813f5521985f7dd64277b7ba0cf1441319   |   MISC:https://tools.ietf.org/html/rfc7009#section-2.2.1   |   URL:https://tools.ietf.org/html/rfc7009#section-2.2.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15224,Candidate,"In Open Enclave before version 0.12.0, an information disclosure vulnerability exists when an enclave application using the syscalls provided by the sockets.edl is loaded by a malicious host application. An attacker who successfully exploited the vulnerability could read privileged data from the enclave heap across trust boundaries. To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to elevate user rights directly, but it could be used to obtain information otherwise considered confidential in an enclave, which could be used in further compromises. The issue has been addressed in version 0.12.0 and the current master branch. Users will need to to recompile their applications against the patched libraries to be protected from this vulnerability.","CONFIRM:https://github.com/openenclave/openenclave/security/advisories/GHSA-525h-wxcc-f66m   |   URL:https://github.com/openenclave/openenclave/security/advisories/GHSA-525h-wxcc-f66m   |   MISC:https://github.com/openenclave/openenclave/blob/master/CHANGELOG.md#v0120   |   URL:https://github.com/openenclave/openenclave/blob/master/CHANGELOG.md#v0120   |   MISC:https://github.com/openenclave/openenclave/commit/bcac8e7acb514429fee9e0b5d0c7a0308fd4d76b   |   URL:https://github.com/openenclave/openenclave/commit/bcac8e7acb514429fee9e0b5d0c7a0308fd4d76b",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15225,Candidate,"django-filter is a generic system for filtering Django QuerySets based on user selections. In django-filter before version 2.4.0, automatically generated `NumberFilter` instances, whose value was later converted to an integer, were subject to potential DoS from maliciously input using exponential format with sufficiently large exponents. Version 2.4.0+ applies a `MaxValueValidator` with a a default `limit_value` of 1e50 to the form field used by `NumberFilter` instances. In addition, `NumberFilter` implements the new `get_max_validator()` which should return a configured validator instance to customise the limit, or else `None` to disable the additional validation. Users may manually apply an equivalent validator if they are not able to upgrade.","CONFIRM:https://security.netapp.com/advisory/ntap-20210604-0010/   |   CONFIRM:https://github.com/carltongibson/django-filter/security/advisories/GHSA-x7gm-rfgv-w973   |   URL:https://github.com/carltongibson/django-filter/security/advisories/GHSA-x7gm-rfgv-w973   |   FEDORA:FEDORA-2021-1acbee2459   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FAT2ZAEF6DM3VFSOHKB7X3ASSHGQHJAK/   |   FEDORA:FEDORA-2021-f213fea441   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DPHENTRHRAYFXYPPBT7JRHZRWILRY44S/   |   MISC:https://github.com/carltongibson/django-filter/commit/340cf7a23a2b3dcd7183f6a0d6c383e85b130d2b   |   URL:https://github.com/carltongibson/django-filter/commit/340cf7a23a2b3dcd7183f6a0d6c383e85b130d2b   |   MISC:https://github.com/carltongibson/django-filter/releases/tag/2.4.0   |   URL:https://github.com/carltongibson/django-filter/releases/tag/2.4.0   |   MISC:https://pypi.org/project/django-filter/   |   URL:https://pypi.org/project/django-filter/",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15226,Candidate,"In GLPI before version 9.5.2, there is a SQL Injection in the API's search function. Not only is it possible to break the SQL syntax, but it is also possible to utilise a UNION SELECT query to reflect sensitive information such as the current database version, or database user. The most likely scenario for this vulnerability is with someone who has an API account to the system. The issue is patched in version 9.5.2. A proof-of-concept with technical details is available in the linked advisory.","CONFIRM:https://github.com/glpi-project/glpi/commit/3dc4475c56b241ad659cc5c7cb5fb65727409cf0   |   URL:https://github.com/glpi-project/glpi/commit/3dc4475c56b241ad659cc5c7cb5fb65727409cf0   |   CONFIRM:https://github.com/glpi-project/glpi/security/advisories/GHSA-jwpv-7m4h-5gvc   |   URL:https://github.com/glpi-project/glpi/security/advisories/GHSA-jwpv-7m4h-5gvc",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15227,Candidate,"Nette versions before 2.0.19, 2.1.13, 2.2.10, 2.3.14, 2.4.16, 3.0.6 are vulnerable to an code injection attack by passing specially formed parameters to URL that may possibly leading to RCE. Nette is a PHP/Composer MVC Framework.","CONFIRM:https://github.com/nette/application/security/advisories/GHSA-8gv3-3j7f-wg94   |   URL:https://github.com/nette/application/security/advisories/GHSA-8gv3-3j7f-wg94   |   MISC:https://packagist.org/packages/nette/application   |   URL:https://packagist.org/packages/nette/application   |   MISC:https://packagist.org/packages/nette/nette   |   URL:https://packagist.org/packages/nette/nette   |   MLIST:[debian-lts-announce] 20210404 [SECURITY] [DLA 2617-1] php-nette security update   |   URL:https://lists.debian.org/debian-lts-announce/2021/04/msg00003.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15228,Candidate,"In the `@actions/core` npm module before version 1.2.6,`addPath` and `exportVariable` functions communicate with the Actions Runner over stdout by generating a string in a specific format. Workflows that log untrusted data to stdout may invoke these commands, resulting in the path or environment variables being modified without the intention of the workflow or action author. The runner will release an update that disables the `set-env` and `add-path` workflow commands in the near future. For now, users should upgrade to `@actions/core v1.2.6` or later, and replace any instance of the `set-env` or `add-path` commands in their workflows with the new Environment File Syntax. Workflows and actions using the old commands or older versions of the toolkit will start to warn, then error out during workflow execution.","CONFIRM:https://github.com/actions/toolkit/security/advisories/GHSA-mfwh-5m23-j46w   |   URL:https://github.com/actions/toolkit/security/advisories/GHSA-mfwh-5m23-j46w   |   MISC:http://packetstormsecurity.com/files/159794/GitHub-Widespread-Injection.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15229,Candidate,"Singularity (an open source container platform) from version 3.1.1 through 3.6.3 has a vulnerability. Due to insecure handling of path traversal and the lack of path sanitization within `unsquashfs`, it is possible to overwrite/create any files on the host filesystem during the extraction with a crafted squashfs filesystem. The extraction occurs automatically for unprivileged (either installation or with `allow setuid = no`) run of Singularity when a user attempt to run an image which is a local SIF image or a single file containing a squashfs filesystem and is coming from remote sources `library://` or `shub://`. Image build is also impacted in a more serious way as it can be used by a root user, allowing an attacker to overwrite/create files leading to a system compromise, so far bootstrap methods `library`, `shub` and `localimage` are triggering the squashfs extraction. This issue is addressed in Singularity 3.6.4. All users are advised to upgrade to 3.6.4 especially if they use Singularity mainly for building image as root user. There is no solid workaround except to temporary avoid to use unprivileged mode with single file images in favor of sandbox images instead. Regarding image build, temporary avoid to build from `library` and `shub` sources and as much as possible use `--fakeroot` or a VM for that.","CONFIRM:https://github.com/hpcng/singularity/security/advisories/GHSA-7gcp-w6ww-2xv9   |   URL:https://github.com/hpcng/singularity/security/advisories/GHSA-7gcp-w6ww-2xv9   |   MISC:https://github.com/hpcng/singularity/blob/v3.6.4/CHANGELOG.md#security-related-fixes   |   URL:https://github.com/hpcng/singularity/blob/v3.6.4/CHANGELOG.md#security-related-fixes   |   MISC:https://github.com/hpcng/singularity/commit/eba3dea260b117198fdb6faf41f2482ab2f8d53e   |   URL:https://github.com/hpcng/singularity/commit/eba3dea260b117198fdb6faf41f2482ab2f8d53e   |   MISC:https://github.com/hpcng/singularity/pull/5611   |   URL:https://github.com/hpcng/singularity/pull/5611   |   SUSE:openSUSE-SU-2020:1769   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00071.html   |   SUSE:openSUSE-SU-2020:1770   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00070.html   |   SUSE:openSUSE-SU-2020:1814   |   URL:http://lists.opensuse.org/opensuse-security-announce/2020-11/msg00009.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1523,Candidate,"A tampering vulnerability exists when Microsoft SharePoint Server fails to properly handle profile data, aka 'Microsoft SharePoint Server Tampering Vulnerability'. This CVE ID is unique from CVE-2020-1440.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1523   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1523",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15230,Candidate,"Vapor is a web framework for Swift. In Vapor before version 4.29.4, Attackers can access data at arbitrary filesystem paths on the same host as an application. Only applications using FileMiddleware are affected. This is fixed in version 4.29.4.","CONFIRM:https://github.com/vapor/vapor/security/advisories/GHSA-vcvg-xgr8-p5gq   |   URL:https://github.com/vapor/vapor/security/advisories/GHSA-vcvg-xgr8-p5gq   |   MISC:https://github.com/vapor/vapor/commit/cf1651f7ff76515593f4d8ca6e6e15d2247fe255   |   URL:https://github.com/vapor/vapor/commit/cf1651f7ff76515593f4d8ca6e6e15d2247fe255   |   MISC:https://github.com/vapor/vapor/pull/2500   |   URL:https://github.com/vapor/vapor/pull/2500",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15231,Candidate,"In mapfish-print before version 3.24, a user can use the JSONP support to do a Cross-site scripting.","CONFIRM:https://github.com/mapfish/mapfish-print/security/advisories/GHSA-w534-q4xf-h5v2   |   URL:https://github.com/mapfish/mapfish-print/security/advisories/GHSA-w534-q4xf-h5v2   |   MISC:https://github.com/mapfish/mapfish-print/pull/1397/commits/89155f2506b9cee822e15ce60ccae390a1419d5e   |   URL:https://github.com/mapfish/mapfish-print/pull/1397/commits/89155f2506b9cee822e15ce60ccae390a1419d5e",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15232,Candidate,"In mapfish-print before version 3.24, a user can do to an XML External Entity (XXE) attack with the provided SDL style.","CONFIRM:https://github.com/mapfish/mapfish-print/security/advisories/GHSA-vjv6-gq77-3mjw   |   URL:https://github.com/mapfish/mapfish-print/security/advisories/GHSA-vjv6-gq77-3mjw   |   MISC:https://github.com/mapfish/mapfish-print/pull/1397/commits/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e   |   URL:https://github.com/mapfish/mapfish-print/pull/1397/commits/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15233,Candidate,"ORY Fosite is a security first OAuth2 & OpenID Connect framework for Go. In Fosite from version 0.30.2 and before version 0.34.1, there is an issue in which an an attacker can override the registered redirect URL by performing an OAuth flow and requesting a redirect URL that is to the loopback adapter. Attackers can provide both custom URL query parameters to their loopback redirect URL, as well as actually overriding the host of the registered redirect URL. These attacks are only applicable in scenarios where the attacker has access over the loopback interface. This vulnerability has been patched in ORY Fosite v0.34.1.","CONFIRM:https://github.com/ory/fosite/security/advisories/GHSA-rfq3-w54c-f9q5   |   URL:https://github.com/ory/fosite/security/advisories/GHSA-rfq3-w54c-f9q5   |   MISC:https://github.com/ory/fosite/commit/cdee51ebe721bfc8acca0fd0b86b030ca70867bf   |   URL:https://github.com/ory/fosite/commit/cdee51ebe721bfc8acca0fd0b86b030ca70867bf",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15234,Candidate,"ORY Fosite is a security first OAuth2 & OpenID Connect framework for Go. In Fosite before version 0.34.1, the OAuth 2.0 Client's registered redirect URLs and the redirect URL provided at the OAuth2 Authorization Endpoint where compared using strings.ToLower while they should have been compared with a simple string match. This allows an attacker to register a client with allowed redirect URL https://example.com/callback. Then perform an OAuth2 flow and requesting redirect URL https://example.com/CALLBACK. Instead of an error (invalid redirect URL), the browser is redirected to https://example.com/CALLBACK with a potentially successful OAuth2 response, depending on the state of the overall OAuth2 flow (the user might still deny the request for example). This vulnerability has been patched in ORY Fosite v0.34.1.","CONFIRM:https://github.com/ory/fosite/security/advisories/GHSA-grfp-q2mm-hfp6   |   URL:https://github.com/ory/fosite/security/advisories/GHSA-grfp-q2mm-hfp6   |   MISC:https://github.com/ory/fosite/commit/cdee51ebe721bfc8acca0fd0b86b030ca70867bf   |   URL:https://github.com/ory/fosite/commit/cdee51ebe721bfc8acca0fd0b86b030ca70867bf",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15235,Candidate,"In RACTF before commit f3dc89b, unauthenticated users are able to get the value of sensitive config keys that would normally be hidden to everyone except admins. All versions after commit f3dc89b9f6ab1544a289b3efc06699b13d63e0bd(3/10/20) are patched.","CONFIRM:https://github.com/ractf/core/security/advisories/GHSA-ph67-c355-52vm   |   URL:https://github.com/ractf/core/security/advisories/GHSA-ph67-c355-52vm   |   MISC:https://github.com/ractf/core/commit/f3dc89b9f6ab1544a289b3efc06699b13d63e0bd   |   URL:https://github.com/ractf/core/commit/f3dc89b9f6ab1544a289b3efc06699b13d63e0bd",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15236,Candidate,"In Wiki.js before version 2.5.151, directory traversal outside of Wiki.js context is possible when a storage module with local asset cache fetching is enabled. A malicious user can potentially read any file on the file system by crafting a special URL that allows for directory traversal. This is only possible when a storage module implementing local asset cache (e.g Local File System or Git) is enabled and that no web application firewall solution (e.g. cloudflare) strips potentially malicious URLs. Commit 084dcd69d1591586ee4752101e675d5f0ac6dcdc fixes this vulnerability by sanitizing the path before it is passed on to the storage module. The sanitization step removes any directory traversal (e.g. `..` and `.`) sequences as well as invalid filesystem characters from the path. As a workaround, disable any storage module with local asset caching capabilities such as Local File System and Git.","CONFIRM:https://github.com/Requarks/wiki/security/advisories/GHSA-whpv-5xg2-w527   |   URL:https://github.com/Requarks/wiki/security/advisories/GHSA-whpv-5xg2-w527   |   MISC:https://github.com/Requarks/wiki/commit/084dcd69d1591586ee4752101e675d5f0ac6dcdc   |   URL:https://github.com/Requarks/wiki/commit/084dcd69d1591586ee4752101e675d5f0ac6dcdc",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15237,Candidate,"In Shrine before version 3.3.0, when using the `derivation_endpoint` plugin, it's possible for the attacker to use a timing attack to guess the signature of the derivation URL. The problem has been fixed by comparing sent and calculated signature in constant time, using `Rack::Utils.secure_compare`. Users using the `derivation_endpoint` plugin are urged to upgrade to Shrine 3.3.0 or greater. A possible workaround is provided in the linked advisory.","CONFIRM:https://github.com/shrinerb/shrine/security/advisories/GHSA-5jjv-x4fq-qjwp   |   URL:https://github.com/shrinerb/shrine/security/advisories/GHSA-5jjv-x4fq-qjwp   |   MISC:https://github.com/shrinerb/shrine/commit/1b27090ce31543bf39f186c20ea47c8250fca2f0   |   URL:https://github.com/shrinerb/shrine/commit/1b27090ce31543bf39f186c20ea47c8250fca2f0",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15238,Candidate,"Blueman is a GTK+ Bluetooth Manager. In Blueman before 2.1.4, the DhcpClient method of the D-Bus interface to blueman-mechanism is prone to an argument injection vulnerability. The impact highly depends on the system configuration. If Polkit-1 is disabled and for versions lower than 2.0.6, any local user can possibly exploit this. If Polkit-1 is enabled for version 2.0.6 and later, a possible attacker needs to be allowed to use the `org.blueman.dhcp.client` action. That is limited to users in the wheel group in the shipped rules file that do have the privileges anyway. On systems with ISC DHCP client (dhclient), attackers can pass arguments to `ip link` with the interface name that can e.g. be used to bring down an interface or add an arbitrary XDP/BPF program. On systems with dhcpcd and without ISC DHCP client, attackers can even run arbitrary scripts by passing `-c/path/to/script` as an interface name. Patches are included in 2.1.4 and master that change the DhcpClient D-Bus method(s) to accept BlueZ network object paths instead of network interface names. A backport to 2.0(.8) is also available. As a workaround, make sure that Polkit-1-support is enabled and limit privileges for the `org.blueman.dhcp.client` action to users that are able to run arbitrary commands as root anyway in /usr/share/polkit-1/rules.d/blueman.rules.","CONFIRM:https://github.com/blueman-project/blueman/security/advisories/GHSA-jpc9-mgw6-2xwx   |   URL:https://github.com/blueman-project/blueman/security/advisories/GHSA-jpc9-mgw6-2xwx   |   DEBIAN:DSA-4781   |   URL:https://www.debian.org/security/2020/dsa-4781   |   FEDORA:FEDORA-2020-7c22b25a07   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6CFLMNHAHX5HPIKC5IG6F25HO5Z6RH2N/   |   FEDORA:FEDORA-2020-e083225fa1   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3F4EQU6CAPBKAPJ42HTB473NJLXFKB32/   |   FEDORA:FEDORA-2020-ebabb6bf76   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W52NP7HRFTNAVNZLGKY4GR3JIZG5KKGS/   |   GENTOO:GLSA-202011-11   |   URL:https://security.gentoo.org/glsa/202011-11   |   MISC:http://packetstormsecurity.com/files/159740/Blueman-Local-Root-Privilege-Escalation.html   |   MISC:https://bugs.launchpad.net/ubuntu/+source/blueman/+bug/1897287   |   URL:https://bugs.launchpad.net/ubuntu/+source/blueman/+bug/1897287   |   MISC:https://github.com/blueman-project/blueman/releases/tag/2.1.4   |   URL:https://github.com/blueman-project/blueman/releases/tag/2.1.4   |   MLIST:[debian-lts-announce] 20201103 [SECURITY] [DLA 2430-1] blueman security update   |   URL:https://lists.debian.org/debian-lts-announce/2020/11/msg00005.html",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15239,Candidate,"In xmpp-http-upload before version 0.4.0, when the GET method is attacked, attackers can read files which have a `.data` suffix and which are accompanied by a JSON file with the `.meta` suffix. This can lead to Information Disclosure and in some shared-hosting scenarios also to circumvention of authentication or other limitations on the outbound (GET) traffic. For example, in a scenario where a single server has multiple instances of the application running (with separate DATA_ROOT settings), an attacker who has knowledge about the directory structure is able to read files from any other instance to which the process has read access. If instances have individual authentication (for example, HTTP authentication via a reverse proxy, source IP based filtering) or other restrictions (such as quotas), attackers may circumvent those limits in such a scenario by using the Directory Traversal to retrieve data from the other instances. If the associated XMPP server (or anyone knowing the SECRET_KEY) is malicious, they can write files outside the DATA_ROOT. The files which are written are constrained to have the `.meta` and the `.data` suffixes; the `.meta` file will contain the JSON with the Content-Type of the original request and the `.data` file will contain the payload. The issue is patched in version 0.4.0.","CONFIRM:https://github.com/horazont/xmpp-http-upload/security/advisories/GHSA-hwv5-w8gm-fq9f   |   URL:https://github.com/horazont/xmpp-http-upload/security/advisories/GHSA-hwv5-w8gm-fq9f   |   MISC:https://github.com/horazont/xmpp-http-upload/commit/82056540191e89f0cd697c81f57714c00962ed75   |   URL:https://github.com/horazont/xmpp-http-upload/commit/82056540191e89f0cd697c81f57714c00962ed75   |   MISC:https://github.com/horazont/xmpp-http-upload/pull/12   |   URL:https://github.com/horazont/xmpp-http-upload/pull/12   |   MISC:https://pypi.org/project/xmpp-http-upload/#history   |   URL:https://pypi.org/project/xmpp-http-upload/#history",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1524,Candidate,"An elevation of privilege vulnerability exists when the Windows Speech Shell Components improperly handle memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka 'Windows Speech Shell Components Elevation of Privilege Vulnerability'.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1524   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1524",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15240,Candidate,"omniauth-auth0 (rubygems) versions >= 2.3.0 and < 2.4.1 improperly validate the JWT token signature when using the `jwt_validator.verify` method. Improper validation of the JWT token signature can allow an attacker to bypass authentication and authorization. You are affected by this vulnerability if all of the following conditions apply: 1. You are using `omniauth-auth0`. 2. You are using `JWTValidator.verify` method directly OR you are not authenticating using the SDK&#8217;s default Authorization Code Flow. The issue is patched in version 2.4.1.","CONFIRM:https://github.com/auth0/omniauth-auth0/security/advisories/GHSA-58r4-h6v8-jcvm   |   URL:https://github.com/auth0/omniauth-auth0/security/advisories/GHSA-58r4-h6v8-jcvm   |   MISC:https://github.com/auth0/omniauth-auth0/commit/fd3a14f4ccdfbc515d1121d6378ff88bf55a7a7a   |   URL:https://github.com/auth0/omniauth-auth0/commit/fd3a14f4ccdfbc515d1121d6378ff88bf55a7a7a   |   MISC:https://rubygems.org/gems/omniauth-auth0   |   URL:https://rubygems.org/gems/omniauth-auth0",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15241,Candidate,"TYPO3 Fluid Engine (package `typo3fluid/fluid`) before versions 2.0.5, 2.1.4, 2.2.1, 2.3.5, 2.4.1, 2.5.5 or 2.6.1 is vulnerable to cross-site scripting when making use of the ternary conditional operator in templates like `{showFullName ? fullName : defaultValue}`. Updated versions of this package are bundled in following TYPO3 (`typo3/cms-core`) versions as well: TYPO3 v8.7.25 (using `typo3fluid/fluid` v2.5.4) and TYPO3 v9.5.6 (using `typo3fluid/fluid` v2.6.1).","CONFIRM:https://github.com/TYPO3/Fluid/security/advisories/GHSA-7733-hjv6-4h47   |   URL:https://github.com/TYPO3/Fluid/security/advisories/GHSA-7733-hjv6-4h47   |   MISC:https://github.com/TYPO3/Fluid/commit/9ef6a8ffff2e812025fc0701b4ce72eea6911a3d   |   URL:https://github.com/TYPO3/Fluid/commit/9ef6a8ffff2e812025fc0701b4ce72eea6911a3d   |   MISC:https://typo3.org/security/advisory/typo3-core-sa-2019-013   |   URL:https://typo3.org/security/advisory/typo3-core-sa-2019-013",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15242,Candidate,"Next.js versions >=9.5.0 and <9.5.4 are vulnerable to an Open Redirect. Specially encoded paths could be used with the trailing slash redirect to allow an open redirect to occur to an external site. In general, this redirect does not directly harm users although can allow for phishing attacks by redirecting to an attackers domain from a trusted domain. The issue is fixed in version 9.5.4.","CONFIRM:https://github.com/vercel/next.js/security/advisories/GHSA-x56p-c8cg-q435   |   URL:https://github.com/vercel/next.js/security/advisories/GHSA-x56p-c8cg-q435   |   MISC:https://github.com/zeit/next.js/releases/tag/v9.5.4   |   URL:https://github.com/zeit/next.js/releases/tag/v9.5.4",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15243,Candidate,"Affected versions of Smartstore have a missing WebApi Authentication attribute. This vulnerability affects Smartstore shops in version 4.0.0 & 4.0.1 which have installed and activated the Web API plugin. Users of Smartstore 4.0.0 and 4.0.1 must merge their repository with 4.0.x or overwrite the file SmartStore.Web.Framework in the */bin* directory of the deployed shop with this file. As a workaround without updating uninstall the Web API plugin to close this vulnerability.","CONFIRM:https://github.com/smartstore/SmartStoreNET/security/advisories/GHSA-8g9m-jx26-qp4h   |   URL:https://github.com/smartstore/SmartStoreNET/security/advisories/GHSA-8g9m-jx26-qp4h",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15244,Candidate,"In Magento (rubygems openmage/magento-lts package) before versions 19.4.8 and 20.0.4, an admin user can generate soap credentials that can be used to trigger RCE via PHP Object Injection through product attributes and a product. The issue is patched in versions 19.4.8 and 20.0.4.","CONFIRM:https://github.com/OpenMage/magento-lts/security/advisories/GHSA-jrgf-vfw2-hj26   |   URL:https://github.com/OpenMage/magento-lts/security/advisories/GHSA-jrgf-vfw2-hj26   |   MISC:https://github.com/OpenMage/magento-lts/commit/26433d15b57978fcb7701b5f99efe8332ca8630b   |   URL:https://github.com/OpenMage/magento-lts/commit/26433d15b57978fcb7701b5f99efe8332ca8630b",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15245,Candidate,"In Sylius before versions 1.6.9, 1.7.9 and 1.8.3, the user may register in a shop by email mail@example.com, verify it, change it to the mail another@domain.com and stay verified and enabled. This may lead to having accounts addressed to totally different emails, that were verified. Note, that this way one is not able to take over any existing account (guest or normal one). The issue has been patched in Sylius 1.6.9, 1.7.9 and 1.8.3. As a workaround, you may resolve this issue on your own by creating a custom event listener, which will listen to the sylius.customer.pre_update event. You can determine that email has been changed if customer email and user username are different. They are synchronized later on. Pay attention, to email changing behavior for administrators. You may need to skip this logic for them. In order to achieve this, you should either check master request path info, if it does not contain /admin prefix or adjust event triggered during customer update in the shop. You can find more information on how to customize the event here.","CONFIRM:https://github.com/Sylius/Sylius/security/advisories/GHSA-6gw4-x63h-5499   |   URL:https://github.com/Sylius/Sylius/security/advisories/GHSA-6gw4-x63h-5499   |   MISC:https://github.com/Sylius/Sylius/commit/60636d711a4011e8694d10d201b53632c7e8ecaf   |   URL:https://github.com/Sylius/Sylius/commit/60636d711a4011e8694d10d201b53632c7e8ecaf",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15246,Candidate,"October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.421 and before version 1.0.469, an attacker can read local files on an October CMS server via a specially crafted request. Issue has been patched in Build 469 (v1.0.469) and v1.1.0.","CONFIRM:https://github.com/octobercms/october/security/advisories/GHSA-xwjr-6fj7-fc6h   |   URL:https://github.com/octobercms/october/security/advisories/GHSA-xwjr-6fj7-fc6h   |   MISC:https://github.com/octobercms/library/commit/80aab47f044a2660aa352450f55137598f362aa4   |   URL:https://github.com/octobercms/library/commit/80aab47f044a2660aa352450f55137598f362aa4",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15247,Candidate,"October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.319 and before version 1.0.469, an authenticated backend user with the cms.manage_pages, cms.manage_layouts, or cms.manage_partials permissions who would normally not be permitted to provide PHP code to be executed by the CMS due to cms.enableSafeMode being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP. This is not a problem for anyone that trusts their users with those permissions to normally write & manage PHP within the CMS by not having cms.enableSafeMode enabled, but would be a problem for anyone relying on cms.enableSafeMode to ensure that users with those permissions in production do not have access to write & execute arbitrary PHP. Issue has been patched in Build 469 (v1.0.469) and v1.1.0.","CONFIRM:https://github.com/octobercms/october/security/advisories/GHSA-94vp-rmqv-5875   |   URL:https://github.com/octobercms/october/security/advisories/GHSA-94vp-rmqv-5875   |   MISC:https://github.com/octobercms/october/commit/4c650bb775ab849e48202a4923bac93bd74f9982   |   URL:https://github.com/octobercms/october/commit/4c650bb775ab849e48202a4923bac93bd74f9982",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15248,Candidate,"October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.319 and before version 1.0.470, backend users with the default ""Publisher"" system role have access to create & manage users where they can choose which role the new user has. This means that a user with ""Publisher"" access has the ability to escalate their access to ""Developer"" access. Issue has been patched in Build 470 (v1.0.470) & v1.1.1.","CONFIRM:https://github.com/octobercms/october/security/advisories/GHSA-rfjc-xrmf-5vvw   |   URL:https://github.com/octobercms/october/security/advisories/GHSA-rfjc-xrmf-5vvw   |   MISC:https://github.com/octobercms/october/commit/78a37298a4ed4602b383522344a31e311402d829   |   URL:https://github.com/octobercms/october/commit/78a37298a4ed4602b383522344a31e311402d829",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15249,Candidate,"October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.319 and before version 1.0.469, backend users with access to upload files were permitted to upload SVG files without any sanitization applied to the uploaded files. Since SVG files support being parsed as HTML by browsers, this means that they could theoretically upload Javascript that would be executed on a path under the website's domain (i.e. /storage/app/media/evil.svg), but they would have to convince their target to visit that location directly in the target's browser as the backend does not display SVGs inline anywhere, SVGs are only displayed as image resources in the backend and are thus unable to be executed. Issue has been patched in Build 469 (v1.0.469) & v1.1.0.","CONFIRM:https://github.com/octobercms/october/security/advisories/GHSA-fx3v-553x-3c4q   |   URL:https://github.com/octobercms/october/security/advisories/GHSA-fx3v-553x-3c4q   |   MISC:https://github.com/octobercms/library/commit/80aab47f044a2660aa352450f55137598f362aa4   |   URL:https://github.com/octobercms/library/commit/80aab47f044a2660aa352450f55137598f362aa4",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1525,Candidate,"A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory, aka 'Media Foundation Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2020-1379, CVE-2020-1477, CVE-2020-1478, CVE-2020-1492, CVE-2020-1554.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1525   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1525",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15250,Candidate,"In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.","CONFIRM:https://github.com/junit-team/junit4/security/advisories/GHSA-269g-pwp5-87pp   |   URL:https://github.com/junit-team/junit4/security/advisories/GHSA-269g-pwp5-87pp   |   MISC:https://github.com/junit-team/junit4/blob/7852b90cfe1cea1e0cdaa19d490c83f0d8684b50/doc/ReleaseNotes4.13.1.md   |   URL:https://github.com/junit-team/junit4/blob/7852b90cfe1cea1e0cdaa19d490c83f0d8684b50/doc/ReleaseNotes4.13.1.md   |   MISC:https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae   |   URL:https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae   |   MISC:https://github.com/junit-team/junit4/issues/1676   |   URL:https://github.com/junit-team/junit4/issues/1676   |   MISC:https://junit.org/junit4/javadoc/4.13/org/junit/rules/TemporaryFolder.html   |   URL:https://junit.org/junit4/javadoc/4.13/org/junit/rules/TemporaryFolder.html   |   MISC:https://www.oracle.com/security-alerts/cpuapr2022.html   |   URL:https://www.oracle.com/security-alerts/cpuapr2022.html   |   MLIST:[creadur-commits] 20201014 [creadur-rat] 01/02: RAT-277: Update junit to fix CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r95f8ef60c4b3a5284b647bb3132cda08e6fadad888a66b84f49da0b0@%3Ccommits.creadur.apache.org%3E   |   MLIST:[creadur-commits] 20201014 [creadur-tentacles] branch master updated: Update junit to fix CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/rde385b8b53ed046600ef68dd6b4528dea7566aaddb02c3e702cc28bc@%3Ccommits.creadur.apache.org%3E   |   MLIST:[creadur-commits] 20201014 [creadur-whisker] branch master updated: Update junit to fix CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r717877028482c55acf604d7a0106af4ca05da4208c708fb157b53672@%3Ccommits.creadur.apache.org%3E   |   MLIST:[creadur-commits] 20210621 [creadur-rat] 02/13: RAT-277: Update junit to fix CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r30f502d2f79e8d635361adb8108dcbb73095163fcbd776ee7984a094@%3Ccommits.creadur.apache.org%3E   |   MLIST:[creadur-dev] 20201013 [jira] [Created] (RAT-277) Update junit in all Creadur projects in order to fix CVE-2020-15250 (Low severity)   |   URL:https://lists.apache.org/thread.html/r5f8841507576f595bb783ccec6a7cb285ea90d4e6f5043eae0e61a41@%3Cdev.creadur.apache.org%3E   |   MLIST:[creadur-dev] 20201014 [jira] [Assigned] (RAT-277) Update junit in all Creadur projects in order to fix CVE-2020-15250 (Low severity)   |   URL:https://lists.apache.org/thread.html/rb2771949c676ca984e58a5cd5ca79c2634dee1945e0406e48e0f8457@%3Cdev.creadur.apache.org%3E   |   MLIST:[creadur-dev] 20201014 [jira] [Closed] (RAT-277) Update junit in all Creadur projects in order to fix CVE-2020-15250 (Low severity)   |   URL:https://lists.apache.org/thread.html/r500517c23200fb2fdb0b82770a62dd6c88b3521cfb01cfd0c76e3f8b@%3Cdev.creadur.apache.org%3E   |   MLIST:[creadur-dev] 20201014 [jira] [Commented] (RAT-277) Update junit in all Creadur projects in order to fix CVE-2020-15250 (Low severity)   |   URL:https://lists.apache.org/thread.html/rbaec90e699bc7c7bd9a053f76707a36fda48b6d558f31dc79147dbf9@%3Cdev.creadur.apache.org%3E   |   MLIST:[creadur-dev] 20201014 [jira] [Updated] (RAT-277) Update junit in all Creadur projects in order to fix CVE-2020-15250 (Low severity)   |   URL:https://lists.apache.org/thread.html/rc49cf1547ef6cac1be4b3c92339b2cae0acacf5acaba13cfa429a872@%3Cdev.creadur.apache.org%3E   |   MLIST:[debian-lts-announce] 20201101 [SECURITY] [DLA 2426-1] junit4 security update   |   URL:https://lists.debian.org/debian-lts-announce/2020/11/msg00003.html   |   MLIST:[knox-commits] 20211008 [knox] branch master updated: KNOX-2674 - Upgrade junit to 4.13.2 due to CVE-2020-15250 (#505)   |   URL:https://lists.apache.org/thread.html/r9710067c7096b83cb6ae8f53a2f6f94e9c042d1bf1d6929f8f2a2b7a@%3Ccommits.knox.apache.org%3E   |   MLIST:[knox-dev] 20211004 [GitHub] [knox] zeroflag commented on pull request #505: KNOX-2674 - Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r934208a520b38f5cf0cae199b6b076bfe7d081809528b0eff2459e40@%3Cdev.knox.apache.org%3E   |   MLIST:[knox-dev] 20211004 [GitHub] [knox] zeroflag opened a new pull request #505: KNOX-2674 - Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/rf6e5d894d4b03bef537c9d6641272e0197c047c0d1982b4e176d0353@%3Cdev.knox.apache.org%3E   |   MLIST:[knox-dev] 20211004 [jira] [Created] (KNOX-2674) Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r2b78f23bc2711a76a7fc73ad67b7fcd6817c5cfccefd6f30a4f54943@%3Cdev.knox.apache.org%3E   |   MLIST:[knox-dev] 20211004 [jira] [Work logged] (KNOX-2674) Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r687f489b10b0d14e46f626aa88476545e1a2600b24c4ebd3c0d2a10b@%3Cdev.knox.apache.org%3E   |   MLIST:[knox-dev] 20211008 [GitHub] [knox] smolnar82 merged pull request #505: KNOX-2674 - Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/rb2ffe2993f4dccc48d832e1a0f1c419477781b6ea16e725ca2276dbb@%3Cdev.knox.apache.org%3E   |   MLIST:[knox-dev] 20211008 [jira] [Commented] (KNOX-2674) Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r8b02dc6f18df11ff39eedb3038f1e31e6f90a779b1959bae65107279@%3Cdev.knox.apache.org%3E   |   MLIST:[knox-dev] 20211008 [jira] [Resolved] (KNOX-2674) Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r1209986f79359b518d09513ff05a88e5b3c398540e775edea76a4774@%3Cdev.knox.apache.org%3E   |   MLIST:[knox-dev] 20211008 [jira] [Work logged] (KNOX-2674) Upgrade junit to 4.13.2 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r742b44fd75215fc75963b8ecc22b2e4372e68d67d3d859d2b5e8743f@%3Cdev.knox.apache.org%3E   |   MLIST:[pdfbox-dev] 20201115 ossindex-maven-plugin and build issue   |   URL:https://lists.apache.org/thread.html/ra1bdb9efae84794e8ffa2f8474be8290ba57830eefe9714b95da714b@%3Cdev.pdfbox.apache.org%3E   |   MLIST:[portals-pluto-dev] 20210714 [jira] [Closed] (PLUTO-790) Upgrade to JUnit 4.13.1 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r925eaae7dd8f77dd61eefc49c1fcf54bd9ecfe605486870d7b1e9390@%3Cpluto-dev.portals.apache.org%3E   |   MLIST:[portals-pluto-dev] 20210714 [jira] [Created] (PLUTO-790) Upgrade to JUnit 4.13.1 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r09cfbb5aedd76023691bbce9ca4ce2e16bb07dd37554a17efc19935d@%3Cpluto-dev.portals.apache.org%3E   |   MLIST:[portals-pluto-scm] 20210714 [portals-pluto] branch master updated: PLUTO-790 Upgrade to JUnit 4.13.1 due to CVE-2020-15250   |   URL:https://lists.apache.org/thread.html/r29d703d1986d9b871466ff24082a1828ac8ad27bb0965a93a383872e@%3Cpluto-scm.portals.apache.org%3E   |   MLIST:[pulsar-commits] 20210406 [GitHub] [pulsar] lhotari opened a new pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/raebf13f53cd5d23d990712e3d11c80da9a7bae94a6284050f148ed99@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210413 [GitHub] [pulsar] lhotari commented on pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/rde8e70b95c992378e8570e4df400c6008a9839eabdfb8f800a3e5af6@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210413 [GitHub] [pulsar] lhotari removed a comment on pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/r01110833b63616ddbef59ae4e10c0fbd0060f0a51206defd4cb4d917@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210414 [GitHub] [pulsar] lhotari commented on pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/rdef7d1380c86e7c0edf8a0f89a2a8db86fce5e363457d56b722691b4@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210414 [GitHub] [pulsar] lhotari removed a comment on pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/rdbdd30510a7c4d0908fd22075c02b75bbc2e0d977ec22249ef3133cb@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210415 [GitHub] [pulsar] eolivelli merged pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/reb700e60b9642eafa4b7922bfee80796394135aa09c7a239ef9f7486@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210415 [GitHub] [pulsar] lhotari commented on pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/rf797d119cc3f51a8d7c3c5cbe50cb4524c8487282b986edde83a9467@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210415 [GitHub] [pulsar] lhotari removed a comment on pull request #10147: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak   |   URL:https://lists.apache.org/thread.html/rea812d8612fdc46842a2a57248cad4b01ddfdb1e9b037c49e68fdbfb@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[pulsar-commits] 20210415 [pulsar] branch master updated: [Security] Upgrade junit version to 4.13.1 to resolve CVE-2020-15250 and fix test dependency leak (#10147)   |   URL:https://lists.apache.org/thread.html/rf2ec93f4ca9a97d1958eb4a31b1830f723419ce9bf2018a6e5741d5b@%3Ccommits.pulsar.apache.org%3E   |   MLIST:[turbine-commits] 20210203 svn commit: r1886168 - in /turbine/core/trunk: ./ conf/ conf/test/ src/java/org/apache/turbine/services/urlmapper/ src/test/org/apache/turbine/services/urlmapper/ src/test/org/apache/turbine/services/urlmapper/model/ xdocs/howto/   |   URL:https://lists.apache.org/thread.html/rb33212dab7beccaf1ffef9b88610047c644f644c7a0ebdc44d77e381@%3Ccommits.turbine.apache.org%3E",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15251,Candidate,"In the Channelmgnt plug-in for Sopel (a Python IRC bot) before version 1.0.3, malicious users are able to op/voice and take over a channel. This is an ACL bypass vulnerability. This plugin is bundled with MirahezeBot-Plugins with versions from 9.0.0 and less than 9.0.2 affected. Version 9.0.2 includes 1.0.3 of channelmgnt, and thus is safe from this vulnerability. See referenced GHSA-23pc-4339-95vg.","CONFIRM:https://github.com/MirahezeBots/sopel-channelmgnt/security/advisories/GHSA-j257-jfvv-h3x5   |   URL:https://github.com/MirahezeBots/sopel-channelmgnt/security/advisories/GHSA-j257-jfvv-h3x5   |   MISC:https://github.com/MirahezeBots/MirahezeBots/security/advisories/GHSA-23pc-4339-95vg   |   URL:https://github.com/MirahezeBots/MirahezeBots/security/advisories/GHSA-23pc-4339-95vg   |   MISC:https://github.com/MirahezeBots/sopel-channelmgnt/pull/3   |   URL:https://github.com/MirahezeBots/sopel-channelmgnt/pull/3   |   MISC:https://phab.bots.miraheze.wiki/T117   |   URL:https://phab.bots.miraheze.wiki/T117   |   MISC:https://phab.bots.miraheze.wiki/phame/live/1/post/1/summary/   |   URL:https://phab.bots.miraheze.wiki/phame/live/1/post/1/summary/   |   MISC:https://pypi.org/project/sopel-plugins.channelmgnt/   |   URL:https://pypi.org/project/sopel-plugins.channelmgnt/",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15252,Candidate,"In XWiki before version 12.5 and 11.10.6, any user with SCRIPT right (EDIT right before XWiki 7.4) can gain access to the application server Servlet context which contains tools allowing to instantiate arbitrary Java objects and invoke methods that may lead to arbitrary code execution. This is patched in XWiki 12.5 and XWiki 11.10.6.","CONFIRM:https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-5hv6-mh8q-q9v8   |   URL:https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-5hv6-mh8q-q9v8   |   MISC:https://jira.xwiki.org/browse/XWIKI-17141   |   URL:https://jira.xwiki.org/browse/XWIKI-17141   |   MISC:https://jira.xwiki.org/browse/XWIKI-17423   |   URL:https://jira.xwiki.org/browse/XWIKI-17423",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15253,Candidate,"Versions of Grocy <= 2.7.1 are vulnerable to Cross-Site Scripting via the Create Shopping List module, that is rendered upon deleting that Shopping List. The issue was also found in users, batteries, chores, equipment, locations, quantity units, shopping locations, tasks, taskcategories, product groups, recipes and products. Authentication is required to exploit these issues and Grocy should not be publicly exposed. The linked reference details a proof-of-concept.","CONFIRM:https://github.com/grocy/grocy/security/advisories/GHSA-7f37-2fjr-v9p7   |   URL:https://github.com/grocy/grocy/security/advisories/GHSA-7f37-2fjr-v9p7   |   MISC:https://github.com/grocy/grocy/commit/0624b0df594a4353ef25e6b1874565ea52ce7772   |   URL:https://github.com/grocy/grocy/commit/0624b0df594a4353ef25e6b1874565ea52ce7772   |   MISC:https://github.com/grocy/grocy/commit/0df2590de27c60c18b7db6e056347bd2aff5a887   |   URL:https://github.com/grocy/grocy/commit/0df2590de27c60c18b7db6e056347bd2aff5a887   |   MISC:https://github.com/grocy/grocy/issues/996   |   URL:https://github.com/grocy/grocy/issues/996   |   MISC:https://www.exploit-db.com/exploits/48792   |   URL:https://www.exploit-db.com/exploits/48792",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15254,Candidate,"Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4.","CONFIRM:https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx   |   URL:https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx   |   MISC:https://github.com/RustSec/advisory-db/pull/425   |   URL:https://github.com/RustSec/advisory-db/pull/425   |   MISC:https://github.com/crossbeam-rs/crossbeam/issues/539   |   URL:https://github.com/crossbeam-rs/crossbeam/issues/539   |   MISC:https://github.com/crossbeam-rs/crossbeam/pull/533   |   URL:https://github.com/crossbeam-rs/crossbeam/pull/533",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15255,Candidate,"In Anuko Time Tracker before verion 1.19.23.5325, due to not properly filtered user input a CSV export of a report could contain cells that are treated as formulas by spreadsheet software (for example, when a cell value starts with an equal sign). This is fixed in version 1.19.23.5325.","CONFIRM:https://github.com/anuko/timetracker/security/advisories/GHSA-prjf-9mgh-8fpv   |   URL:https://github.com/anuko/timetracker/security/advisories/GHSA-prjf-9mgh-8fpv   |   MISC:http://packetstormsecurity.com/files/159996/Anuko-Time-Tracker-1.19.23.5325-CSV-Injection.html   |   URL:http://packetstormsecurity.com/files/159996/Anuko-Time-Tracker-1.19.23.5325-CSV-Injection.html   |   MISC:https://github.com/anuko/timetracker/commit/d9472904361495f318c9d0294ffd28acaaeae42f   |   URL:https://github.com/anuko/timetracker/commit/d9472904361495f318c9d0294ffd28acaaeae42f   |   MISC:https://www.exploit-db.com/exploits/49027   |   URL:https://www.exploit-db.com/exploits/49027",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15256,Candidate,"A prototype pollution vulnerability has been found in `object-path` <= 0.11.4 affecting the `set()` method. The vulnerability is limited to the `includeInheritedProps` mode (if version >= 0.11.0 is used), which has to be explicitly enabled by creating a new instance of `object-path` and setting the option `includeInheritedProps: true`, or by using the default `withInheritedProps` instance. The default operating mode is not affected by the vulnerability if version >= 0.11.0 is used. Any usage of `set()` in versions < 0.11.0 is vulnerable. The issue is fixed in object-path version 0.11.5 As a workaround, don't use the `includeInheritedProps: true` options or the `withInheritedProps` instance if using a version >= 0.11.0.","CONFIRM:https://github.com/mariocasciaro/object-path/security/advisories/GHSA-cwx2-736x-mf6w   |   URL:https://github.com/mariocasciaro/object-path/security/advisories/GHSA-cwx2-736x-mf6w   |   MISC:https://github.com/mariocasciaro/object-path/commit/2be3354c6c46215c7635eb1b76d80f1319403c68   |   URL:https://github.com/mariocasciaro/object-path/commit/2be3354c6c46215c7635eb1b76d80f1319403c68",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15257,Candidate,"containerd is an industry-standard container runtime and is available as a daemon for Linux and Windows. In containerd before versions 1.3.9 and 1.4.3, the containerd-shim API is improperly exposed to host network containers. Access controls for the shim&#8217;s API socket verified that the connecting process had an effective UID of 0, but did not otherwise restrict access to the abstract Unix domain socket. This would allow malicious containers running in the same network namespace as the shim, with an effective UID of 0 but otherwise reduced privileges, to cause new processes to be run with elevated privileges. This vulnerability has been fixed in containerd 1.3.9 and 1.4.3. Users should update to these versions as soon as they are released. It should be noted that containers started with an old version of containerd-shim should be stopped and restarted, as running containers will continue to be vulnerable even after an upgrade. If you are not providing the ability for untrusted users to start containers in the same network namespace as the shim (typically the ""host"" network namespace, for example with docker run --net=host or hostNetwork: true in a Kubernetes pod) and run with an effective UID of 0, you are not vulnerable to this issue. If you are running containers with a vulnerable configuration, you can deny access to all abstract sockets with AppArmor by adding a line similar to deny unix addr=@**, to your policy. It is best practice to run containers with a reduced set of privileges, with a non-zero UID, and with isolated namespaces. The containerd maintainers strongly advise against sharing namespaces with the host. Reducing the set of isolation mechanisms used for a container necessarily increases that container's privilege, regardless of what container runtime is used for running that container.","CONFIRM:https://github.com/containerd/containerd/security/advisories/GHSA-36xw-fx78-c5r4   |   URL:https://github.com/containerd/containerd/security/advisories/GHSA-36xw-fx78-c5r4   |   DEBIAN:DSA-4865   |   URL:https://www.debian.org/security/2021/dsa-4865   |   FEDORA:FEDORA-2020-baeb8dbaea   |   URL:https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LNKXLOLZWO5FMAPX63ZL7JNKTNNT5NQD/   |   GENTOO:GLSA-202105-33   |   URL:https://security.gentoo.org/glsa/202105-33   |   MISC:https://github.com/containerd/containerd/commit/4a4bb851f5da563ff6e68a83dc837c7699c469ad   |   URL:https://github.com/containerd/containerd/commit/4a4bb851f5da563ff6e68a83dc837c7699c469ad   |   MISC:https://github.com/containerd/containerd/releases/tag/v1.4.3   |   URL:https://github.com/containerd/containerd/releases/tag/v1.4.3",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15258,Candidate,"In Wire before 3.20.x, `shell.openExternal` was used without checking the URL. This vulnerability allows an attacker to execute code on the victims machine by sending messages containing links with arbitrary protocols. The victim has to interact with the link and sees the URL that is opened. The issue was patched by implementing a helper function which checks if the URL's protocol is common. If it is common, the URL will be opened externally. If not, the URL will not be opened and a warning appears for the user informing them that a probably insecure URL was blocked from being executed. The issue is patched in Wire 3.20.x. More technical details about exploitation are available in the linked advisory.","CONFIRM:https://github.com/wireapp/wire-desktop/security/advisories/GHSA-5gpx-9976-ggpm   |   URL:https://github.com/wireapp/wire-desktop/security/advisories/GHSA-5gpx-9976-ggpm   |   MISC:https://benjamin-altpeter.de/shell-openexternal-dangers/   |   URL:https://benjamin-altpeter.de/shell-openexternal-dangers/   |   MISC:https://github.com/wireapp/wire-desktop/commit/b3705fffa75a03f055530f55a754face5ac0623b   |   URL:https://github.com/wireapp/wire-desktop/commit/b3705fffa75a03f055530f55a754face5ac0623b",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15259,Candidate,"ad-ldap-connector's admin panel before version 5.0.13 does not provide csrf protection, which when exploited may result in remote code execution or confidential data loss. CSRF exploits may occur if the user visits a malicious page containing CSRF payload on the same machine that has access to the ad-ldap-connector admin console via a browser. You may be affected if you use the admin console included with ad-ldap-connector versions <=5.0.12. If you do not have ad-ldap-connector admin console enabled or do not visit any other public URL while on the machine it is installed on, you are not affected. The issue is fixed in version 5.0.13.","CONFIRM:https://github.com/auth0/ad-ldap-connector/security/advisories/GHSA-vx5q-cp9v-427v   |   URL:https://github.com/auth0/ad-ldap-connector/security/advisories/GHSA-vx5q-cp9v-427v   |   MISC:https://github.com/auth0/ad-ldap-connector/commit/8b793631ec5ecacf63ff3ece23231a9e138ae911   |   URL:https://github.com/auth0/ad-ldap-connector/commit/8b793631ec5ecacf63ff3ece23231a9e138ae911",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1526,Candidate,"An elevation of privilege vulnerability exists when the Windows Network Connection Broker improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka 'Windows Network Connection Broker Elevation of Privilege Vulnerability'.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1526   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1526",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15260,Candidate,"PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In version 2.10 and earlier, PJSIP transport can be reused if they have the same IP address + port + protocol. However, this is insufficient for secure transport since it lacks remote hostname authentication. Suppose we have created a TLS connection to `sip.foo.com`, which has an IP address `100.1.1.1`. If we want to create a TLS connection to another hostname, say `sip.bar.com`, which has the same IP address, then it will reuse that existing connection, even though `100.1.1.1` does not have certificate to authenticate as `sip.bar.com`. The vulnerability allows for an insecure interaction without user awareness. It affects users who need access to connections to different destinations that translate to the same address, and allows man-in-the-middle attack if attacker can route a connection to another destination such as in the case of DNS spoofing.","CONFIRM:https://github.com/pjsip/pjproject/security/advisories/GHSA-8hcp-hm38-mfph   |   URL:https://github.com/pjsip/pjproject/security/advisories/GHSA-8hcp-hm38-mfph   |   GENTOO:GLSA-202107-42   |   URL:https://security.gentoo.org/glsa/202107-42   |   MISC:https://github.com/pjsip/pjproject/commit/67e46c1ac45ad784db5b9080f5ed8b133c122872   |   URL:https://github.com/pjsip/pjproject/commit/67e46c1ac45ad784db5b9080f5ed8b133c122872   |   MISC:https://github.com/pjsip/pjproject/pull/2663   |   URL:https://github.com/pjsip/pjproject/pull/2663",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15261,Candidate,"On Windows the Veyon Service before version 4.4.2 contains an unquoted service path vulnerability, allowing locally authenticated users with administrative privileges to run malicious executables with LocalSystem privileges. Since Veyon users (both students and teachers) usually don't have administrative privileges, this vulnerability is only dangerous in anyway unsafe setups. The problem has been fixed in version 4.4.2. As a workaround, the exploitation of the vulnerability can be prevented by revoking administrative privileges from all potentially untrustworthy users.","CONFIRM:https://github.com/veyon/veyon/security/advisories/GHSA-c8cc-x786-hqqp   |   URL:https://github.com/veyon/veyon/security/advisories/GHSA-c8cc-x786-hqqp   |   MISC:http://packetstormsecurity.com/files/162873/Veyon-4.4.1-Unquoted-Service-Path.html   |   MISC:https://www.exploit-db.com/exploits/48246   |   MISC:https://www.exploit-db.com/exploits/49925   |   MISC:https://github.com/veyon/veyon/commit/f231ec511b9a09f43f49b2c7bb7c60b8046276b1   |   URL:https://github.com/veyon/veyon/commit/f231ec511b9a09f43f49b2c7bb7c60b8046276b1   |   MISC:https://github.com/veyon/veyon/issues/657   |   URL:https://github.com/veyon/veyon/issues/657",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15262,Candidate,"In webpack-subresource-integrity before version 1.5.1, all dynamically loaded chunks receive an invalid integrity hash that is ignored by the browser, and therefore the browser cannot validate their integrity. This removes the additional level of protection offered by SRI for such chunks. Top-level chunks are unaffected. This issue is patched in version 1.5.1.","CONFIRM:https://github.com/waysact/webpack-subresource-integrity/security/advisories/GHSA-4fc4-chg7-h8gh   |   URL:https://github.com/waysact/webpack-subresource-integrity/security/advisories/GHSA-4fc4-chg7-h8gh   |   MISC:https://github.com/waysact/webpack-subresource-integrity/commit/3d7090c08c333fcfb10ad9e2d6cf72e2acb7d87f   |   URL:https://github.com/waysact/webpack-subresource-integrity/commit/3d7090c08c333fcfb10ad9e2d6cf72e2acb7d87f   |   MISC:https://github.com/waysact/webpack-subresource-integrity/issues/131   |   URL:https://github.com/waysact/webpack-subresource-integrity/issues/131",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15263,Candidate,"In platform before version 9.4.4, inline attributes are not properly escaped. If the data that came from users was not escaped, then an XSS vulnerability is possible. The issue was introduced in 9.0.0 and fixed in 9.4.4.","CONFIRM:https://github.com/orchidsoftware/platform/security/advisories/GHSA-589w-hccm-265x   |   URL:https://github.com/orchidsoftware/platform/security/advisories/GHSA-589w-hccm-265x   |   MISC:https://github.com/orchidsoftware/platform/commit/03f9a113b1a70bc5075ce86a918707f0e7d82169   |   URL:https://github.com/orchidsoftware/platform/commit/03f9a113b1a70bc5075ce86a918707f0e7d82169",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15264,Candidate,"The Boxstarter installer before version 2.13.0 configures C:\ProgramData\Boxstarter to be in the system-wide PATH environment variable. However, this directory is writable by normal, unprivileged users. To exploit the vulnerability, place a DLL in this directory that a privileged service is looking for. For example, WptsExtensions.dll When Windows starts, it'll execute the code in DllMain() with SYSTEM privileges. Any unprivileged user can execute code with SYSTEM privileges. The issue is fixed in version 3.13.0","CERT-VN:VU#208577   |   URL:https://www.kb.cert.org/vuls/id/208577   |   CONFIRM:https://github.com/chocolatey/boxstarter/security/advisories/GHSA-rpgx-h675-r3jf   |   URL:https://github.com/chocolatey/boxstarter/security/advisories/GHSA-rpgx-h675-r3jf   |   MISC:https://github.com/chocolatey/boxstarter/commit/67e320491813550b48900e87105a34ceefdcf633   |   URL:https://github.com/chocolatey/boxstarter/commit/67e320491813550b48900e87105a34ceefdcf633",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15265,Candidate,"In Tensorflow before version 2.4.0, an attacker can pass an invalid `axis` value to `tf.quantization.quantize_and_dequantize`. This results in accessing a dimension outside the rank of the input tensor in the C++ kernel implementation. However, dim_size only does a DCHECK to validate the argument and then uses it to access the corresponding element of an array. Since in normal builds, `DCHECK`-like macros are no-ops, this results in segfault and access out of bounds of the array. The issue is patched in eccb7ec454e6617738554a255d77f08e60ee0808 and TensorFlow 2.4.0 will be released containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.","CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rrfp-j2mp-hq9c   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rrfp-j2mp-hq9c   |   MISC:https://github.com/tensorflow/tensorflow/commit/eccb7ec454e6617738554a255d77f08e60ee0808   |   URL:https://github.com/tensorflow/tensorflow/commit/eccb7ec454e6617738554a255d77f08e60ee0808   |   MISC:https://github.com/tensorflow/tensorflow/issues/42105   |   URL:https://github.com/tensorflow/tensorflow/issues/42105",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15266,Candidate,"In Tensorflow before version 2.4.0, when the `boxes` argument of `tf.image.crop_and_resize` has a very large value, the CPU kernel implementation receives it as a C++ `nan` floating point value. Attempting to operate on this is undefined behavior which later produces a segmentation fault. The issue is patched in eccb7ec454e6617738554a255d77f08e60ee0808 and TensorFlow 2.4.0 will be released containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.","CONFIRM:https://github.com/tensorflow/tensorflow/issues/42129   |   URL:https://github.com/tensorflow/tensorflow/issues/42129   |   CONFIRM:https://github.com/tensorflow/tensorflow/pull/42143/commits/3ade2efec2e90c6237de32a19680caaa3ebc2845   |   URL:https://github.com/tensorflow/tensorflow/pull/42143/commits/3ade2efec2e90c6237de32a19680caaa3ebc2845   |   CONFIRM:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xwhf-g6j5-j5gc   |   URL:https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xwhf-g6j5-j5gc",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15267,Candidate,"** RESERVED ** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15268,Candidate,"** RESERVED ** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15269,Candidate,"In Spree before versions 3.7.11, 4.0.4, or 4.1.11, expired user tokens could be used to access Storefront API v2 endpoints. The issue is patched in versions 3.7.11, 4.0.4 and 4.1.11. A workaround without upgrading is described in the linked advisory.","CONFIRM:https://github.com/spree/spree/security/advisories/GHSA-f8cm-364f-q9qh   |   URL:https://github.com/spree/spree/security/advisories/GHSA-f8cm-364f-q9qh   |   MISC:https://github.com/spree/spree/commit/e43643abfe51f54bd9208dd02298b366e9b9a847   |   URL:https://github.com/spree/spree/commit/e43643abfe51f54bd9208dd02298b366e9b9a847",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1527,Candidate,"An elevation of privilege vulnerability exists when the Windows Custom Protocol Engine improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka 'Windows Custom Protocol Engine Elevation of Privilege Vulnerability'.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1527   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1527",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15270,Candidate,"Parse Server (npm package parse-server) broadcasts events to all clients without checking if the session token is valid. This allows clients with expired sessions to still receive subscription objects. It is not possible to create subscription objects with invalid session tokens. The issue is not patched.","CONFIRM:https://github.com/parse-community/parse-server/security/advisories/GHSA-2xm2-xj2q-qgpj   |   URL:https://github.com/parse-community/parse-server/security/advisories/GHSA-2xm2-xj2q-qgpj   |   MISC:https://github.com/parse-community/parse-server/commit/78b59fb26b1c36e3cdbd42ba9fec025003267f58   |   URL:https://github.com/parse-community/parse-server/commit/78b59fb26b1c36e3cdbd42ba9fec025003267f58   |   MISC:https://npmjs.com/parse-server   |   URL:https://npmjs.com/parse-server",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15271,Candidate,"In lookatme (python/pypi package) versions prior to 2.3.0, the package automatically loaded the built-in ""terminal"" and ""file_loader"" extensions. Users that use lookatme to render untrusted markdown may have malicious shell commands automatically run on their system. This is fixed in version 2.3.0. As a workaround, the `lookatme/contrib/terminal.py` and `lookatme/contrib/file_loader.py` files may be manually deleted. Additionally, it is always recommended to be aware of what is being rendered with lookatme.","CONFIRM:https://github.com/d0c-s4vage/lookatme/security/advisories/GHSA-c84h-w6cr-5v8q   |   URL:https://github.com/d0c-s4vage/lookatme/security/advisories/GHSA-c84h-w6cr-5v8q   |   MISC:https://github.com/d0c-s4vage/lookatme/commit/72fe36b784b234548d49dae60b840c37f0eb8d84   |   URL:https://github.com/d0c-s4vage/lookatme/commit/72fe36b784b234548d49dae60b840c37f0eb8d84   |   MISC:https://github.com/d0c-s4vage/lookatme/pull/110   |   URL:https://github.com/d0c-s4vage/lookatme/pull/110   |   MISC:https://github.com/d0c-s4vage/lookatme/releases/tag/v2.3.0   |   URL:https://github.com/d0c-s4vage/lookatme/releases/tag/v2.3.0   |   MISC:https://pypi.org/project/lookatme/#history   |   URL:https://pypi.org/project/lookatme/#history",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15272,Candidate,"In the git-tag-annotation-action (open source GitHub Action) before version 1.0.1, an attacker can execute arbitrary (*) shell commands if they can control the value of [the `tag` input] or manage to alter the value of [the `GITHUB_REF` environment variable]. The problem has been patched in version 1.0.1. If you don't use the `tag` input you are most likely safe. The `GITHUB_REF` environment variable is protected by the GitHub Actions environment so attacks from there should be impossible. If you must use the `tag` input and cannot upgrade to `> 1.0.0` make sure that the value is not controlled by another Action.","CONFIRM:https://github.com/ericcornelissen/git-tag-annotation-action/security/advisories/GHSA-hgx2-4pp9-357g   |   URL:https://github.com/ericcornelissen/git-tag-annotation-action/security/advisories/GHSA-hgx2-4pp9-357g   |   MISC:https://github.com/ericcornelissen/git-tag-annotation-action/commit/9f30756375cc4b1b6c66f274fc9c591fa901455a   |   URL:https://github.com/ericcornelissen/git-tag-annotation-action/commit/9f30756375cc4b1b6c66f274fc9c591fa901455a   |   MISC:https://github.com/ericcornelissen/git-tag-annotation-action/releases/tag/v1.0.1   |   URL:https://github.com/ericcornelissen/git-tag-annotation-action/releases/tag/v1.0.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15273,Candidate,"baserCMS before version 4.4.1 is vulnerable to Cross-Site Scripting. The issue affects the following components: Edit feed settings, Edit widget area, Sub site new registration, New category registration. Arbitrary JavaScript may be executed by entering specific characters in the account that can access the file upload function category list, subsite setting list, widget area edit, and feed list on the management screen. The issue was introduced in version 4.0.0. It is fixed in version 4.4.1.","CONFIRM:https://github.com/baserproject/basercms/security/advisories/GHSA-wpww-4jf4-4hx8   |   URL:https://github.com/baserproject/basercms/security/advisories/GHSA-wpww-4jf4-4hx8   |   MISC:https://github.com/baserproject/basercms/commit/b70474ef9dcee6ad8826360884625dc7ca9041a1   |   URL:https://github.com/baserproject/basercms/commit/b70474ef9dcee6ad8826360884625dc7ca9041a1   |   MISC:https://packagist.org/packages/baserproject/basercms   |   URL:https://packagist.org/packages/baserproject/basercms",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15274,Candidate,"In Wiki.js before version 2.5.162, an XSS payload can be injected in a page title and executed via the search results. While the title is properly escaped in both the navigation links and the actual page title, it is not the case in the search results. Commit a57d9af34c15adbf460dde6553d964efddf433de fixes this vulnerability (version 2.5.162) by properly escaping the text content displayed in the search results.","CONFIRM:https://github.com/Requarks/wiki/security/advisories/GHSA-pgjv-84m7-62q7   |   URL:https://github.com/Requarks/wiki/security/advisories/GHSA-pgjv-84m7-62q7   |   MISC:https://docs.requarks.io/releases   |   URL:https://docs.requarks.io/releases   |   MISC:https://github.com/Requarks/wiki/commit/a57d9af34c15adbf460dde6553d964efddf433de   |   URL:https://github.com/Requarks/wiki/commit/a57d9af34c15adbf460dde6553d964efddf433de",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15275,Candidate,"MoinMoin is a wiki engine. In MoinMoin before version 1.9.11, an attacker with write permissions can upload an SVG file that contains malicious javascript. This javascript will be executed in a user's browser when the user is viewing that SVG file on the wiki. Users are strongly advised to upgrade to a patched version. MoinMoin Wiki 1.9.11 has the necessary fixes and also contains other important fixes.","CONFIRM:https://github.com/moinwiki/moin-1.9/security/advisories/GHSA-4q96-6xhq-ff43   |   URL:https://github.com/moinwiki/moin-1.9/security/advisories/GHSA-4q96-6xhq-ff43   |   MISC:https://advisory.checkmarx.net/advisory/CX-2020-4285   |   MISC:https://github.com/moinwiki/moin-1.9/commit/31de9139d0aabc171e94032168399b4a0b2a88a2   |   URL:https://github.com/moinwiki/moin-1.9/commit/31de9139d0aabc171e94032168399b4a0b2a88a2   |   MISC:https://github.com/moinwiki/moin-1.9/releases/tag/1.9.11   |   URL:https://github.com/moinwiki/moin-1.9/releases/tag/1.9.11",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15276,Candidate,"baserCMS before version 4.4.1 is vulnerable to Cross-Site Scripting. Arbitrary JavaScript may be executed by entering a crafted nickname in blog comments. The issue affects the blog comment component. It is fixed in version 4.4.1.","CONFIRM:https://github.com/baserproject/basercms/security/advisories/GHSA-fw5q-j9p4-3vxg   |   URL:https://github.com/baserproject/basercms/security/advisories/GHSA-fw5q-j9p4-3vxg   |   MISC:https://basercms.net/security/20201029   |   URL:https://basercms.net/security/20201029   |   MISC:https://github.com/baserproject/basercms/commit/d14f506385f21d67d5ff3462f204d4c2321b7c54   |   URL:https://github.com/baserproject/basercms/commit/d14f506385f21d67d5ff3462f204d4c2321b7c54",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15277,Candidate,"baserCMS before version 4.4.1 is affected by Remote Code Execution (RCE). Code may be executed by logging in as a system administrator and uploading an executable script file such as a PHP file. The Edit template component is vulnerable. The issue is fixed in version 4.4.1.","CONFIRM:https://github.com/baserproject/basercms/security/advisories/GHSA-6fmv-q269-55cw   |   URL:https://github.com/baserproject/basercms/security/advisories/GHSA-6fmv-q269-55cw   |   MISC:https://basercms.net/security/20201029   |   URL:https://basercms.net/security/20201029   |   MISC:https://github.com/baserproject/basercms/commit/bb027c3967b0430adcff2d2fedbc23d39077563b   |   URL:https://github.com/baserproject/basercms/commit/bb027c3967b0430adcff2d2fedbc23d39077563b",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15278,Candidate,"Red Discord Bot before version 3.4.1 has an unauthorized privilege escalation exploit in the Mod module. This exploit allows Discord users with a high privilege level within the guild to bypass hierarchy checks when the application is in a specific condition that is beyond that user's control. By abusing this exploit, it is possible to perform destructive actions within the guild the user has high privileges in. This exploit has been fixed in version 3.4.1. As a workaround, unloading the Mod module with unload mod or, disabling the massban command with command disable global massban can render this exploit not accessible. We still highly recommend updating to 3.4.1 to completely patch this issue.","CONFIRM:https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-mp9m-g7qj-6vqr   |   URL:https://github.com/Cog-Creators/Red-DiscordBot/security/advisories/GHSA-mp9m-g7qj-6vqr   |   MISC:https://github.com/Cog-Creators/Red-DiscordBot/commit/726bfd38adfdfaef760412a68e01447b470f438b   |   URL:https://github.com/Cog-Creators/Red-DiscordBot/commit/726bfd38adfdfaef760412a68e01447b470f438b   |   MISC:https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.4.1   |   URL:https://github.com/Cog-Creators/Red-DiscordBot/releases/tag/3.4.1",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15279,Candidate,"An Improper Access Control vulnerability in the logging component of Bitdefender Endpoint Security Tools for Windows versions prior to 6.6.23.320 allows a regular user to learn the scanning exclusion paths. This issue was discovered during external security research.","MISC:https://www.bitdefender.com/support/security-advisories/scanning-exclusion-paths-disclosure-in-best-for-windows-va-9380   |   URL:https://www.bitdefender.com/support/security-advisories/scanning-exclusion-paths-disclosure-in-best-for-windows-va-9380",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1528,Candidate,"An elevation of privilege vulnerability exists when the Windows Radio Manager API improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka 'Windows Radio Manager API Elevation of Privilege Vulnerability'.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1528   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1528",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15280,Candidate,"** RESERVED ** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15281,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15282,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15283,Candidate,"** RESERVED ** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15284,Candidate,"** RESERVED ** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15285,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15286,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15287,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15288,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15289,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1529,Candidate,"An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory, aka 'Windows GDI Elevation of Privilege Vulnerability'. This CVE ID is unique from CVE-2020-1480.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1529   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1529",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15290,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15291,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15292,Candidate,"Lack of validation on data read from guest memory in IntPeGetDirectory, IntPeParseUnwindData, IntLogExceptionRecord, IntKsymExpandSymbol and IntLixTaskDumpTree may lead to out-of-bounds read or it could cause DoS due to integer-overflor (IntPeGetDirectory), TOCTOU (IntPeParseUnwindData) or insufficient validations.","MISC:https://www.bitdefender.com/support/security-advisories/lack-validation-data-read-guest-memory-bitdefender-hvi-va-9333/   |   URL:https://www.bitdefender.com/support/security-advisories/lack-validation-data-read-guest-memory-bitdefender-hvi-va-9333/",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15293,Candidate,"Memory corruption in IntLixCrashDumpDmesg, IntLixTaskFetchCmdLine, IntLixFileReadDentry and IntLixFileGetPath due to insufficient guest-data input validation may lead to denial of service conditions.","MISC:https://www.bitdefender.com/support/security-advisories/memory-corruption-bitdefender-hypervisor-introspection-va-9336/   |   URL:https://www.bitdefender.com/support/security-advisories/memory-corruption-bitdefender-hypervisor-introspection-va-9336/",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15294,Candidate,"Compiler Optimization Removal or Modification of Security-critical Code vulnerability in IntPeParseUnwindData() results in multiple dereferences to the same pointer. If the pointer is located in memory-mapped from the guest space, this may cause a race-condition where the generated code would dereference the same address twice, thus obtaining different values, which may lead to arbitrary code execution. This issue affects: Bitdefender Hypervisor Introspection versions prior to 1.132.2.","MISC:https://www.bitdefender.com/support/security-advisories/compiler-optimization-removal-modification-security-critical-code-vulnerability-bitdefender-hypervisor-introspection-va-9339/   |   URL:https://www.bitdefender.com/support/security-advisories/compiler-optimization-removal-modification-security-critical-code-vulnerability-bitdefender-hypervisor-introspection-va-9339/",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15295,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15296,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15297,Candidate,"Insufficient validation in the Bitdefender Update Server and BEST Relay components of Bitdefender Endpoint Security Tools versions prior to 6.6.20.294 allows an unprivileged attacker to bypass the in-place mitigations and interact with hosts on the network. This issue affects: Bitdefender Update Server versions prior to 6.6.20.294.","MISC:https://www.bitdefender.com/support/security-advisories/server-side-request-forgery-bitdefender-update-server-va-9163/   |   URL:https://www.bitdefender.com/support/security-advisories/server-side-request-forgery-bitdefender-update-server-va-9163/",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15298,Candidate,"** REJECT ** Unused CVE for 2020.","",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15299,Candidate,"A reflected Cross-Site Scripting (XSS) Vulnerability in the KingComposer plugin through 2.9.4 for WordPress allows remote attackers to trick a victim into submitting an install_online_preset AJAX request containing base64-encoded JavaScript (in the kc-online-preset-data POST parameter) that is executed in the victim's browser.","MISC:https://www.wordfence.com/blog/2020/07/xss-flaw-impacting-100000-sites-patched-in-kingcomposer/",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-1530,Candidate,"An elevation of privilege vulnerability exists when Windows Remote Access improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka 'Windows Remote Access Elevation of Privilege Vulnerability'. This CVE ID is unique from CVE-2020-1537.","MISC:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1530   |   URL:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1530",Assigned (20191104),"None (candidate not yet proposed)",""
CVE-2020-15300,Candidate,"SuiteCRM through 7.11.13 has an Open Redirect in the Documents module via a crafted SVG document.","MISC:https://www.wizlynxgroup.com/security-research-advisories/vuln/WLX-2020-009",Assigned (20200625),"None (candidate not yet proposed)",""
CVE-2020-15301,Candidate,"SuiteCRM through 7.11.13 allows CSV Injection via registration fields in the Accounts, Contacts, Opportunities, and Leads modules. These fields are mishandled during a Download Import File Template operation.","MISC:https://www.wizlynxgroup.com/security-research-advisories/vuln/WLX-2020-010",Assigned (20200625),"None (candidate not yet proposed)",""