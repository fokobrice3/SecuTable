CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
537,Java Runtime Error Message Containing Sensitive Information,Variant,Incomplete,"In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",,::NATURE:ChildOf:CWE ID:211:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Confidentiality:IMPACT:Read Application Data::,,::PHASE:Implementation:DESCRIPTION:Do not expose sensitive error information to the user.::,,,,,,
543,Use of Singleton Pattern Without Synchronization in a Multithreaded Context,Variant,Incomplete,The product uses the singleton pattern when creating a resource within a multithreaded environment.,The use of a singleton pattern may not be thread-safe.,::NATURE:ChildOf:CWE ID:820:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:662:VIEW ID:1305:ORDINAL:Primary::NATURE:ChildOf:CWE ID:662:VIEW ID:1340:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:C++:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Other:SCOPE:Integrity:IMPACT:Other:IMPACT:Modify Application Data::,,"::PHASE:Architecture and Design:DESCRIPTION:Use the Thread-Specific Storage Pattern. See References.::PHASE:Implementation:DESCRIPTION:Do not use member fields to store information in the Servlet. In multithreading environments, storing user data in Servlet member fields introduces a data access race condition.::PHASE:Implementation:DESCRIPTION:Avoid using the double-checked locking pattern in language versions that cannot guarantee thread safety. This pattern may be used to avoid the overhead of a synchronized call, but in certain versions of Java (for example), this has been shown to be unsafe because it still introduces a race condition (CWE-209).:EFFECTIVENESS:Limited::",,,,::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC07-J:ENTRY NAME:Prevent multiple instantiations of singleton objects::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP19:ENTRY NAME:Missing Lock::,,
567,Unsynchronized Access to Shared Data in a Multithreaded Context,Base,Draft,"The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.","Within servlets, shared static variables are not protected from concurrent access, but servlets are multithreaded. This is a typical programming mistake in J2EE applications, since the multithreading is handled by the framework. When a shared variable can be influenced by an attacker, one thread could wind up modifying the variable to contain data that is not valid for a different thread that is also using the data within the variable. Note that this weakness is not unique to servlets.",::NATURE:ChildOf:CWE ID:820:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:662:VIEW ID:1305:ORDINAL:Primary::NATURE:ChildOf:CWE ID:662:VIEW ID:1340:ORDINAL:Primary::NATURE:CanPrecede:CWE ID:488:VIEW ID:1000::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation::,,,"::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:IMPACT:Read Application Data:IMPACT:Modify Application Data:IMPACT:DoS: Instability:IMPACT:DoS: Crash, Exit, or Restart:NOTE:If the shared variable contains sensitive data, it may be manipulated or displayed in another user session. If this data is used to control the application, its value can be manipulated to cause the application to crash or perform poorly.::",,"::PHASE:Implementation:DESCRIPTION:Remove the use of static variables used between servlets. If this cannot be avoided, use synchronized access for these variables.::",,,,::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:VNA00-J:ENTRY NAME:Ensure visibility when accessing shared primitive variables::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:VNA02-J:ENTRY NAME:Ensure that compound operations on shared variables are atomic::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP19:ENTRY NAME:Missing Lock::,::25::,
568,finalize() Method Without super.finalize(),Variant,Draft,The product contains a finalize() method that does not call super.finalize().,The Java Language Specification states that it is a good practice for a finalize() method to call super.finalize().,::NATURE:ChildOf:CWE ID:573:VIEW ID:1000::NATURE:ChildOf:CWE ID:459:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Quality Degradation::,,::PHASE:Implementation:DESCRIPTION:Call the super.finalize() method.::PHASE:Testing:DESCRIPTION:Use static analysis tools to spot such issues in your code.::,,,,::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET12-J:ENTRY NAME:Do not use finalizers::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,
572,Call to Thread run() instead of start(),Variant,Draft,"The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee.","In most cases a direct call to a Thread object's run() method is a bug. The programmer intended to begin a new thread of control, but accidentally called run() instead of start(), so the run() method will execute in the caller's thread of control.",::NATURE:ChildOf:CWE ID:821:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Quality Degradation:IMPACT:Varies by Context::,,::PHASE:Implementation:DESCRIPTION:Use the start() method instead of the run() method.::,,,::System Process::,::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:THI00-J:ENTRY NAME:Do not invoke Thread.run()::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,
574,EJB Bad Practices: Use of Synchronization Primitives,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: An enterprise bean must not use thread synchronization primitives to synchronize execution of multiple instances. The specification justifies this requirement in the following way: This rule is required to ensure consistent runtime semantics because while some EJB containers may use a single JVM to execute all enterprise bean's instances, others may distribute the instances across multiple JVMs.",::NATURE:ChildOf:CWE ID:695:VIEW ID:1000::NATURE:ChildOf:CWE ID:821:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Quality Degradation::,,::PHASE:Implementation:DESCRIPTION:Do not use Synchronization Primitives when writing EJBs.::,,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,
575,EJB Bad Practices: Use of AWT Swing,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: An enterprise bean must not use the AWT functionality to attempt to output information to a display, or to input information from a keyboard. The specification justifies this requirement in the following way: Most servers do not allow direct interaction between an application program and a keyboard/display attached to the server system.",::NATURE:ChildOf:CWE ID:695:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Quality Degradation::,,::PHASE:Architecture and Design:DESCRIPTION:Do not use AWT/Swing when writing EJBs.::,,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,
576,EJB Bad Practices: Use of Java I/O,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: An enterprise bean must not use the java.io package to attempt to access files and directories in the file system. The specification justifies this requirement in the following way: The file system APIs are not well-suited for business components to access data. Business components should use a resource manager API, such as JDBC, to store data.",::NATURE:ChildOf:CWE ID:695:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Quality Degradation::,,::PHASE:Implementation:DESCRIPTION:Do not use Java I/O when writing EJBs.::,,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,
577,EJB Bad Practices: Use of Sockets,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using sockets.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: An enterprise bean must not attempt to listen on a socket, accept connections on a socket, or use a socket for multicast. The specification justifies this requirement in the following way: The EJB architecture allows an enterprise bean instance to be a network socket client, but it does not allow it to be a network server. Allowing the instance to become a network server would conflict with the basic function of the enterprise bean-- to serve the EJB clients.",::NATURE:ChildOf:CWE ID:573:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation::,,,::SCOPE:Other:IMPACT:Quality Degradation::,,::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not use Sockets when writing EJBs.::,,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,
578,EJB Bad Practices: Use of Class Loader,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: The enterprise bean must not attempt to create a class loader; obtain the current class loader; set the context class loader; set security manager; create a new security manager; stop the JVM; or change the input, output, and error streams. The specification justifies this requirement in the following way: These functions are reserved for the EJB container. Allowing the enterprise bean to use these functions could compromise security and decrease the container's ability to properly manage the runtime environment.",::NATURE:ChildOf:CWE ID:573:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation::,,,::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:SCOPE:Other:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Varies by Context::,,::PHASE:Architecture and Design Implementation:DESCRIPTION:Do not use the Class Loader when writing EJBs.::,,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,
579,J2EE Bad Practices: Non-serializable Object Stored in Session,Variant,Draft,"The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.","A J2EE application can make use of multiple JVMs in order to improve application reliability and performance. In order to make the multiple JVMs appear as a single application to the end user, the J2EE container can replicate an HttpSession object across multiple JVMs so that if one JVM becomes unavailable another can step in and take its place without disrupting the flow of the application. This is only possible if all session data is serializable, allowing the session to be duplicated between the JVMs.",::NATURE:ChildOf:CWE ID:573:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::,,,::SCOPE:Other:IMPACT:Quality Degradation::,,"::PHASE:Implementation:DESCRIPTION:In order for session replication to work, the values the product stores as attributes in the session must implement the Serializable interface.::",,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,
580,clone() Method Without super.clone(),Variant,Draft,The product contains a clone() method that does not call super.clone() to obtain the new object.,"All implementations of clone() should obtain the new object by calling super.clone(). If a class does not follow this convention, a subclass's clone() method will return an object of the wrong type.",::NATURE:ChildOf:CWE ID:664:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:573:VIEW ID:1000::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Integrity:SCOPE:Other:IMPACT:Unexpected State:IMPACT:Quality Degradation::,,"::PHASE:Implementation:DESCRIPTION:Call super.clone() within your clone() method, when obtaining a new object.::PHASE:Implementation:DESCRIPTION:In some cases, you can eliminate the clone method altogether and use copy constructors.::",,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,
581,Object Model Violation: Just One of Equals and Hashcode Defined,Base,Draft,The product does not maintain equal hashcodes for equal objects.,"Java objects are expected to obey a number of invariants related to equality. One of these invariants is that equal objects must have equal hashcodes. In other words, if a.equals(b) == true then a.hashCode() == b.hashCode().",::NATURE:ChildOf:CWE ID:573:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:697:VIEW ID:1000::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,"::SCOPE:Integrity:SCOPE:Other:IMPACT:Other:NOTE:If this invariant is not upheld, it is likely to cause trouble if objects of this class are stored in a collection. If the objects of the class in question are used as a key in a Hashtable or if they are inserted into a Map or Set, it is critical that equal objects have equal hashcodes.::",,::PHASE:Implementation:DESCRIPTION:Both Equals() and Hashcode() should be defined.::,,,,::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET09-J:ENTRY NAME:Classes that define an equals() method must also define a hashCode() method::,,
582,"Array Declared Public, Final, and Static",Variant,Draft,"The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified.","Because arrays are mutable objects, the final constraint requires that the array object itself be assigned only once, but makes no guarantees about the values of the array elements. Since the array is public, a malicious program can change the values stored in the array. As such, in most cases an array declared public, final and static is a bug.",::NATURE:ChildOf:CWE ID:668:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Primary::,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,"::Mobile code, in this case a Java Applet, is code that is transmitted across a network and executed on a remote machine. Because mobile code developers have little if any control of the environment in which their code will execute, special security concerns become relevant. One of the biggest environmental threats results from the risk that the mobile code will run side-by-side with other, potentially malicious, mobile code. Because all of the popular web browsers execute code from multiple sources together in the same JVM, many of the security guidelines for mobile code are focused on preventing manipulation of your objects' state and behavior by adversaries who have access to the same virtual machine where your product is running.::",,::PHASE:Implementation::,,,::SCOPE:Integrity:IMPACT:Modify Application Data::,,::PHASE:Implementation:DESCRIPTION:In most situations the array should be made private.::,,,,::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ10-J:ENTRY NAME:Do not use public static nonfinal variables::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected Access Points::,,
583,finalize() Method Declared Public,Variant,Incomplete,The product violates secure coding principles for mobile code by declaring a finalize() method public.,"A product should never call finalize explicitly, except to call super.finalize() inside an implementation of finalize(). In mobile code situations, the otherwise error prone practice of manual garbage collection can become a security threat if an attacker can maliciously invoke a finalize() method because it is declared with public access.",::NATURE:ChildOf:CWE ID:668:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:IMPACT:Alter Execution Logic:IMPACT:Execute Unauthorized Code or Commands:IMPACT:Modify Application Data::,,"::PHASE:Implementation:DESCRIPTION:If you are using finalize() as it was designed, there is no reason to declare finalize() with anything other than protected access.::",,,,::TAXONOMY NAME:The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET12-J:ENTRY NAME:Do not use finalizers::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,
585,Empty Synchronized Block,Base,Draft,The product contains an empty synchronized block.,An empty synchronized block does not actually accomplish any synchronization and may indicate a troubled section of code. An empty synchronized block can occur because code no longer needed within the synchronized block is commented out without removing the synchronized block.,::NATURE:ChildOf:CWE ID:1071:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Indirect::,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,"::SCOPE:Other:IMPACT:Other:NOTE:An empty synchronized block will wait until nobody else is using the synchronizer being specified. While this may be part of the desired behavior, because you haven't protected the subsequent code by placing it inside the synchronized block, nothing is stopping somebody else from modifying whatever it was you were waiting for while you run the subsequent code.::",,"::PHASE:Implementation:DESCRIPTION:When you come across an empty synchronized statement, or a synchronized statement in which the code has been commented out, try to determine what the original intentions were and whether or not the synchronized block is still necessary.::",,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP21:ENTRY NAME:Multiple locks/unlocks::,,
